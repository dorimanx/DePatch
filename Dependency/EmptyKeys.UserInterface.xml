<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EmptyKeys.UserInterface</name>
    </assembly>
    <members>
        <member name="T:EmptyKeys.UserInterface.Charts.Chart">
            <summary>
            Implements Chart data visualization control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.SeriesProperty">
            <summary>
            The series property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.TickmarkLengthProperty">
            <summary>
            The tickmark length property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.TickmarkLength">
            <summary>
            Gets or sets the length of the tickmark.
            </summary>
            <value>
            The length of the tickmark.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.TickmarkThicknessProperty">
            <summary>
            The tickmark thickness property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.TickmarkThickness">
            <summary>
            Gets or sets the tickmark thickness.
            </summary>
            <value>
            The tickmark thickness.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisThicknessProperty">
            <summary>
            The axis thickness property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisThickness">
            <summary>
            Gets or sets the axis thickness.
            </summary>
            <value>
            The axis thickness.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisBrushProperty">
            <summary>
            The axis brush property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisBrush">
            <summary>
            Gets or sets the axis brush.
            </summary>
            <value>
            The axis brush.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisVisibleProperty">
            <summary>
            The axis visible property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisVisible">
            <summary>
            Gets or sets a value indicating whether [axis visible].
            </summary>
            <value>
              <c>true</c> if [axis visible]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisYMajorUnitProperty">
            <summary>
            The axis y major unit
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisYMajorUnit">
            <summary>
            Gets or sets the axis y major unit.
            </summary>
            <value>
            The axis y major unit.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisXMajorUnitProperty">
            <summary>
            The axis x major unit property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisXMajorUnit">
            <summary>
            Gets or sets the axis x major unit.
            </summary>
            <value>
            The axis x major unit.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.CursorLinesEnabledProperty">
            <summary>
            The cursor lines enabled property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.CursorLinesEnabled">
            <summary>
            Gets or sets a value indicating whether [cursor lines enabled].
            </summary>
            <value>
              <c>true</c> if [cursor lines enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.CursorLinesBrushProperty">
            <summary>
            The cursor lines brush property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.CursorLinesBrush">
            <summary>
            Gets or sets the cursor lines brush.
            </summary>
            <value>
            The cursor lines brush.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisLabelMarginProperty">
            <summary>
            The axis label margin property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisLabelMargin">
            <summary>
            Gets or sets the axis label margin.
            </summary>
            <value>
            The axis label margin.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisLabelsVisibleProperty">
            <summary>
            The axis labels visible property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisLabelsVisible">
            <summary>
            Gets or sets a value indicating whether [axis labels visible].
            </summary>
            <value>
              <c>true</c> if [axis labels visible]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisLabelFormatProperty">
            <summary>
            The axis label format property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisLabelFormat">
            <summary>
            Gets or sets the axis label format.
            </summary>
            <value>
            The axis label format.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisInterlacedProperty">
            <summary>
            The axis interlaced property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisInterlaced">
            <summary>
            Gets or sets a value indicating whether [axis interlaced].
            </summary>
            <value>
              <c>true</c> if [axis interlaced]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.Chart.AxisInterlacedBrushProperty">
            <summary>
            The axis interlaced brush property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.Chart.AxisInterlacedBrush">
            <summary>
            Gets or sets the axis interlaced brush.
            </summary>
            <value>
            The axis interlaced brush.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.Chart.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Charts.Chart"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.Chart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Charts.Chart"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.Chart.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.Chart.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.Chart.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.Chart.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Charts.LineSeries2D">
            <summary>
            Implements line 2D chart series
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.LineSeries2D.PointsProperty">
            <summary>
            The points property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.LineSeries2D.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>
            The points.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.LineSeries2D.LineThicknessProperty">
            <summary>
            The line thickness property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.LineSeries2D.LineThickness">
            <summary>
            Gets or sets the line thickness.
            </summary>
            <value>
            The line thickness.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.LineSeries2D.DataSourceProperty">
            <summary>
            The data source property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.LineSeries2D.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>
            The data source.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.LineSeries2D.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Charts.LineSeries2D"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.LineSeries2D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Charts.LineSeries2D"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.LineSeries2D.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Charts.SeriesPoint">
            <summary>
            Implements single chart point
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.SeriesPoint.ArgumentProperty">
            <summary>
            The argument property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.SeriesPoint.Argument">
            <summary>
            Gets or sets the argument.
            </summary>
            <value>
            The argument.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Charts.SeriesPoint.ValueProperty">
            <summary>
            The value property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Charts.SeriesPoint.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.SeriesPoint.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Charts.SeriesPoint"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Charts.SeriesPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Charts.SeriesPoint"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.ClassHandlersStore">
            <summary>
            Implements container for class handlers. This container is thread safe.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.ClassHandlersStore.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Delegate"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:System.Delegate"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ClassHandlersStore.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.ClassHandlersStore.TryGetValue(EmptyKeys.UserInterface.DependencyObjectType,EmptyKeys.UserInterface.RoutedEvent,System.Delegate@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="depType">Dependency object type</param>
            <param name="routedEvent">The routed event.</param>
            <param name="handlers">The handlers.</param>
            <returns>true if routed event exists</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.ClassHandlersStore.AddRoutedEventHandler(System.Type,EmptyKeys.UserInterface.RoutedEvent,System.Delegate)">
            <summary>
            Adds the routed event handler.
            </summary>
            <param name="classType">Type of the class.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.ClassHandlersStore.Contains(System.Int32)">
            <summary>
            Determines whether [contains] [the specified routed event].
            </summary>
            <param name="key">The key.</param>
            <returns>true if key exists</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.ClassHandlersStore.RemoveRoutedEventHandler(System.Type,EmptyKeys.UserInterface.RoutedEvent,System.Delegate)">
            <summary>
            Removes the routed event handler.
            </summary>
            <param name="classType">Type of the class.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.ContextLayoutManager">
            <summary>
            Implements context layout manager, used for multi-threading features of layout pass
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.ContextLayoutManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.ContextLayoutManager.IsLayoutDirty">
            <summary>
            Gets or sets a value indicating whether this instance is layout dirty.
            </summary>
            <value>
            <c>true</c> if this instance is layout dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.ContextLayoutManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.ContextLayoutManager"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.ContextLayoutManager.FireLayoutUpdated">
            <summary>
            Fires the layout updated.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.ContextLayoutManager.CheckLock">
            <summary>
            Checks the lock.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.ContextLayoutManager.Lock">
            <summary>
            Locks the layout pass
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.ContextLayoutManager.Unlock">
            <summary>
            Unlocks the layout pass
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.AnimatedImage">
            <summary>
            Implements animated image
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.AnimatedImage.FrameWidthProperty">
            <summary>
            The frame width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.AnimatedImage.FrameWidth">
            <summary>
            Gets or sets the width of one frame in image atlas
            </summary>
            <value>
            The width of the frame.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.AnimatedImage.FrameHeightProperty">
            <summary>
            The frame height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.AnimatedImage.FrameHeight">
            <summary>
            Gets or sets the height of the frame.
            </summary>
            <value>
            The height of the frame.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.AnimatedImage.FramesPerSecondProperty">
            <summary>
            The frames per second property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.AnimatedImage.FramesPerSecond">
            <summary>
            Gets or sets the frames per second.
            </summary>
            <value>
            The frames per second.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.AnimatedImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.AnimatedImage"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.AnimatedImage.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for control</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.AnimatedImage.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Border">
            <summary>
            Implements control for drawing border or background
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Border.ChildProperty">
            <summary>
            The child property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Border.Child">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Border.OnChildChanged(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [child changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Border.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Border"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Border.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Border"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Border.InvalidateIsEnabledOnChildren">
            <summary>
            Invalidates the IsEnabled property value on children.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Border.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Border.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Border.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Button">
            <summary>
            Implements control with Click event when pressed
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Button.ClickEvent">
            <summary>
            The click event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Button.Click">
            <summary>
            Occurs when [click].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Button.CommandProperty">
            <summary>
            The command property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Button.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Button.CommandParameterProperty">
            <summary>
            The command parameter property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Button.CommandParameter">
            <summary>
            Gets or sets the command parameter.
            </summary>
            <value>
            The command parameter.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Button.IsPressedProperty">
            <summary>
            The is pressed property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Button.IsPressed">
            <summary>
            Gets or sets a value indicating whether this instance is pressed.
            </summary>
            <value>
            <c>true</c> if this instance is pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Button.ClickModeProperty">
            <summary>
            The click mode property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Button.ClickMode">
            <summary>
            Gets or sets the click mode.
            </summary>
            <value>
            The click mode.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Button"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Button"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnClick">
            <summary>
            Called when button is [clicked].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnMouseUp(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnTouchUp(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchUp" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnMouseEnter(EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseEnter" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnMouseLeave(EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseLeave" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnKeyDown(EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnKeyUp(System.Object,EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Called when [key up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnGamepadDown(EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Raises the <see cref="E:GamepadDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Button.OnGamepadUp(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Called when [game pad up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Canvas">
            <summary>
            Implements Canvas layout control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Canvas.LeftProperty">
            <summary>
            The left property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.GetLeft(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the left.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.SetLeft(EmptyKeys.UserInterface.UIElement,System.Single)">
            <summary>
            Sets the left.
            </summary>
            <param name="element">The element.</param>
            <param name="length">The length.</param>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Canvas.RightProperty">
            <summary>
            The right property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.GetRight(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the right.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.SetRight(EmptyKeys.UserInterface.UIElement,System.Single)">
            <summary>
            Sets the right.
            </summary>
            <param name="element">The element.</param>
            <param name="length">The length.</param>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Canvas.TopProperty">
            <summary>
            The top property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.GetTop(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the top.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.SetTop(EmptyKeys.UserInterface.UIElement,System.Single)">
            <summary>
            Sets the top.
            </summary>
            <param name="element">The element.</param>
            <param name="length">The length.</param>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Canvas.BottomProperty">
            <summary>
            The bottom property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.GetBottom(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the bottom.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.SetBottom(EmptyKeys.UserInterface.UIElement,System.Single)">
            <summary>
            Sets the bottom.
            </summary>
            <param name="element">The element.</param>
            <param name="length">The length.</param>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Canvas"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Canvas"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Canvas.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.CheckBox">
            <summary>
            Implements CheckBox control
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.CheckBox.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.CheckBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.CheckBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.CheckBox"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ClickMode">
            <summary>
            Click mode - when Click event is raised
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ClickMode.Hover">
            <summary>
            On hover over control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ClickMode.Press">
            <summary>
            In press of the control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ClickMode.Release">
            <summary>
            On release of the control
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ColumnDefinition">
            <summary>
            Implements definition for column of the Grid
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ColumnDefinition.WidthProperty">
            <summary>
            The width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ColumnDefinition.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ColumnDefinition.MinWidthProperty">
            <summary>
            The minimum width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ColumnDefinition.MinWidth">
            <summary>
            Gets or sets the minimum width.
            </summary>
            <value>
            The minimum width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ColumnDefinition.MaxWidthProperty">
            <summary>
            The maximum width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ColumnDefinition.MaxWidth">
            <summary>
            Gets or sets the maximum width.
            </summary>
            <value>
            The maximum width.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ColumnDefinition.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ColumnDefinition"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ColumnDefinitionCollection">
            <summary>
            Implements collection of columns
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ColumnDefinitionCollection.#ctor(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ColumnDefinitionCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ComboBox">
            <summary>
            Implements control with selection in drop down list
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ComboBox.MaxDropDownHeightProperty">
            <summary>
            The maximum drop down height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ComboBox.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height of the drop down.
            </summary>
            <value>
            The maximum height of the drop down.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ComboBox.IsDropDownOpenProperty">
            <summary>
            The is drop down open property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ComboBox.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether this instance is drop down open.
            </summary>
            <value>
            <c>true</c> if this instance is drop down open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ComboBox.SelectionBoxItemProperty">
            <summary>
            The selection box item property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ComboBox.SelectionBoxItem">
            <summary>
            Gets the selection box item.
            </summary>
            <value>
            The selection box item.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ComboBox.SelectionBoxItemTemplateProperty">
            <summary>
            The selection box item template property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ComboBox.SelectionBoxItemTemplate">
            <summary>
            Gets or sets the selection box item template.
            </summary>
            <value>
            The selection box item template.
            </value>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.ComboBox.DropDownOpened">
            <summary>
            Occurs when [drop down opened].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.ComboBox.DropDownClosed">
            <summary>
            Occurs when [drop down closed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ComboBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ComboBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnLostFocus(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [lost focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnSelectionChanged(EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectionChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether if [is item its own container].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnPopupClosed(System.Object,System.EventArgs)">
            <summary>
            Called when [popup closed].
            </summary>
            <param name="source">The source.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DropDownClosed" /> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DropDownOpened" /> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnIsEnabledChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:IsEnabledChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnItemsSourceChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ItemsSourceChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnKeyDown(EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnPreviewGamepadDown(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBox.OnPreviewGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ComboBoxItem">
            <summary>
            Implements item in a ComboBox
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ComboBoxItem.IsHighlightedProperty">
            <summary>
            The is highlighted property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ComboBoxItem.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance is highlighted.
            </summary>
            <value>
            <c>true</c> if this instance is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBoxItem.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ComboBoxItem"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ComboBoxItem"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBoxItem.#ctor(EmptyKeys.UserInterface.Controls.ComboBox)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ComboBoxItem"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBoxItem.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBoxItem.OnMouseUp(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ComboBoxItem.OnTouchGesture(EmptyKeys.UserInterface.Input.TouchGestureEventArgs)">
            <summary>
            Raises the <see cref="E:TouchGesture" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ContentControl">
            <summary>
            Implements base class for any control with content
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ContentControl.ContentProperty">
            <summary>
            The content property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ContentControl.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ContentControl.HasContent">
            <summary>
            Gets or sets a value indicating whether [has content].
            </summary>
            <value>
              <c>true</c> if [has content]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentControl.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ContentControl"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ContentControl"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ContentPresenter">
            <summary>
            Implements control which can draw the content
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ContentPresenter.ContentProperty">
            <summary>
            The content property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ContentPresenter.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ContentPresenter.ContentTemplateProperty">
            <summary>
            The content template property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ContentPresenter.ContentTemplate">
            <summary>
            Gets or sets the content template.
            </summary>
            <value>
            The content template.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ContentPresenter.ContentStringFormatProperty">
            <summary>
            The content string format property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ContentPresenter.ContentStringFormat">
            <summary>
            Gets or sets the content string format.
            </summary>
            <value>
            The content string format.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentPresenter.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ContentPresenter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ContentPresenter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentPresenter.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentPresenter.UpdateVisualTree(System.Object)">
            <summary>
            Updates the visual tree.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentPresenter.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentPresenter.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ContentPresenter.InvalidateIsEnabledOnChildren">
            <summary>
            Invalidates the IsEnabled property value on children.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Control">
            <summary>
            Implements base class for user interface controls
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.BackgroundProperty">
            <summary>
            The background dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.BorderBrushProperty">
            <summary>
            The border brush property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
            <value>
            The border brush.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.BorderThicknessProperty">
            <summary>
            The border thickness property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
            <value>
            The border thickness.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.ForegroundProperty">
            <summary>
            The foreground dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.Foreground">
            <summary>
            Gets or sets the foreground.
            </summary>
            <value>
            The foreground.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.FontProperty">
            <summary>
            The font property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>
            The font.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.FontFamilyProperty">
            <summary>
            The font family property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>
            The font family.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.FontSizeProperty">
            <summary>
            The font size property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>
            The size of the font.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.FontStyleProperty">
            <summary>
            The font style property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
            <value>
            The font style.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.PaddingProperty">
            <summary>
            The padding dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.TabIndexProperty">
            <summary>
            The tab index property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.TabIndex">
            <summary>
            Gets or sets the index of the tab.
            </summary>
            <value>
            The index of the tab.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.IsTabStopProperty">
            <summary>
            The is tab stop property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.IsTabStop">
            <summary>
            Gets or sets a value indicating whether this instance is tab stop.
            </summary>
            <value>
            <c>true</c> if this instance is tab stop; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.TemplateProperty">
            <summary>
            The template property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.Template">
            <summary>
            Gets or sets the template.
            </summary>
            <value>
            The template.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.HorizontalContentAlignmentProperty">
            <summary>
            The horizontal content alignment property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.HorizontalContentAlignment">
            <summary>
            Gets or sets the horizontal content alignment.
            </summary>
            <value>
            The horizontal content alignment.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.VerticalContentAlignmentProperty">
            <summary>
            The vertical content alignment property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.VerticalContentAlignment">
            <summary>
            Gets or sets the vertical content alignment.
            </summary>
            <value>
            The vertical content alignment.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.PreviewMouseDoubleClickEvent">
            <summary>
            The preview mouse double click event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Control.PreviewMouseDoubleClick">
            <summary>
            Occurs when [preview mouse double click].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.OnPreviewMouseDoubleClick(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewMouseDoubleClick" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Control.MouseDoubleClickEvent">
            <summary>
            The mouse double click event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Control.MouseDoubleClick">
            <summary>
            Occurs when [mouse double click].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.OnMouseDoubleClick(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDoubleClick" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Control.VisualTree">
            <summary>
            Gets or sets the visual tree.
            </summary>
            <value>
            The visual tree.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Control"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Control"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.OnPropertyChanged(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Control.InvalidateIsEnabledOnChildren">
            <summary>
            Invalidates the IsEnabled property value on children.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ControlTemplate">
            <summary>
            Implements control template and cache for created elements inside template
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ControlTemplate.TargetType">
            <summary>
            Gets or sets the type of the target.
            </summary>
            <value>
            The type of the target.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ControlTemplate.Triggers">
            <summary>
            Gets the triggers.
            </summary>
            <value>
            The triggers.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ControlTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ControlTemplate"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ControlTemplate.#ctor(System.Func{EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ControlTemplate"/> class.
            </summary>
            <param name="createMethod">The create method.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ControlTemplate.#ctor(System.Type,System.Func{EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ControlTemplate"/> class.
            </summary>
            <param name="targetType">Type of the target.</param>
            <param name="createMethod">The create method.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ControlTemplate.CreateVisualTree(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Creates the visual tree.
            </summary>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ControlTemplate.ClearTemplateCache(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Clears the template cache.
            </summary>
            <param name="templateParent">The template parent.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGrid">
            <summary>
            Data Grid UI control for displaying data in table
            </summary>    
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGrid.SelectionModeProperty">
            <summary>
            The selection mode property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGrid.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
            <value>
            The selection mode.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGrid.AutoGenerateColumnsProperty">
            <summary>
            The automatic generate columns property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether [automatic generate columns].
            </summary>
            <value>
            <c>true</c> if [automatic generate columns]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGrid.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets the horizontal scroll bar visibility.
            </summary>
            <value>
            The horizontal scroll bar visibility.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGrid.VerticalScrollBarVisibility">
            <summary>
            Gets or sets the vertical scroll bar visibility.
            </summary>
            <value>
            The vertical scroll bar visibility.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGrid.EnableRowVirtualizationProperty">
            <summary>
            The enable row virtualization property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGrid.EnableRowVirtualization">
            <summary>
            Gets or sets a value indicating whether [enable row virtualization].
            </summary>
            <value>
              <c>true</c> if [enable row virtualization]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGrid.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>
            The columns.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGrid.VirtualizedCacheMaxRowsProperty">
            <summary>
            The virtualized cache maximum rows property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.GetVirtualizedCacheMaxRows(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the virtualized cache maximum rows.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.SetVirtualizedCacheMaxRows(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets the virtualized cache maximum rows.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.GetSortingCommand(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the sorting command.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.SetSortingCommand(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Input.ICommand)">
            <summary>
            Sets the sorting command.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGrid.SortingCommandProperty">
            <summary>
            The sorting command property
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.DataGrid.Sorting">
            <summary>
            Occurs when [sorting].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.DataGrid"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGrid"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnPreviewMouseWheel(System.Object,EmptyKeys.UserInterface.Input.MouseWheelEventArgs)">
            <summary>
            Called when [preview mouse wheel].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnItemsCleared">
            <summary>
            Called when [items cleared].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnItemRemoved">
            <summary>
            Called when [item removed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnItemInserted(System.Int32)">
            <summary>
            Called when [item inserted].
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether if [is item its own container override].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnKeyDown(EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnPreviewGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <summary>
            Called when [preview game pad move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnColumnsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when [columns changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.RaiseSortingEvent(EmptyKeys.UserInterface.Controls.DataGridSortingEventArgs)">
            <summary>
            Raises the sorting event.
            </summary>
            <param name="args">The <see cref="T:EmptyKeys.UserInterface.Controls.DataGridSortingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the into view.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnSelectedItemChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectedItemChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGrid.OnSelectedIndexChanged(EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo)">
            <summary>
            Called when [selected index changed].
            </summary>
            <param name="itemInfo">The item information.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridBoundColumn">
            <summary>
            Implements base class for Data Grid columns, which are bound to data
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridBoundColumn.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>
            The binding.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridBoundColumn.ElementStyleProperty">
            <summary>
            The element style property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridBoundColumn.ElementStyle">
            <summary>
            Gets or sets the element style.
            </summary>
            <value>
            The element style.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridBoundColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridBoundColumn"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridCell">
            <summary>
            Cell of data grid row
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridCell.ColumnProperty">
            <summary>
            The column property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridCell.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>
            The column.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridCell.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridCell"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridCell"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridCell.#ctor(EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridCell"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridCheckBoxColumn">
            <summary>
            Implements Data Grid columns with Check Box
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridCheckBoxColumn.DefaultElementStyle">
            <summary>
            Gets the default element style.
            </summary>
            <value>
            The default element style.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridCheckBoxColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridCheckBoxColumn"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridColumn">
            <summary>
            Implements Data grid column
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.HeaderProperty">
            <summary>
            The header property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>
            The header.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.HeaderStyleProperty">
            <summary>
            The header style property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.HeaderStyle">
            <summary>
            Gets or sets the header style.
            </summary>
            <value>
            The header style.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.IsAutoGeneratedProperty">
            <summary>
            IsAutomaticGenerated property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.IsAutoGenerated">
            <summary>
            Gets or sets a value indicating whether this instance is automatic generated.
            </summary>
            <value>
            <c>true</c> if this instance is automatic generated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.SortDirectionProperty">
            <summary>
            The sort direction property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>
            The sort direction.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.SortMemberPathProperty">
            <summary>
            The sort member path property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.SortMemberPath">
            <summary>
            Gets or sets the sort member path.
            </summary>
            <value>
            The sort member path.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.WidthProperty">
            <summary>
            The width dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.MaxWidthProperty">
            <summary>
            The maximum width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.MaxWidth">
            <summary>
            Gets or sets the maximum width.
            </summary>
            <value>
            The maximum width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.MinWidthProperty">
            <summary>
            The minimum width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.MinWidth">
            <summary>
            Gets or sets the minimum width.
            </summary>
            <value>
            The minimum width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.ActualWidthProperty">
            <summary>
            The actual width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.ActualWidth">
            <summary>
            Gets or sets the actual width.
            </summary>
            <value>
            The actual width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridColumn.VisibilityProperty">
            <summary>
            The visibility dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.Visibility">
            <summary>
            Gets or sets the visibility.
            </summary>
            <value>
            The visibility.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumn.DataGridOwner">
            <summary>
            Gets the data grid owner.
            </summary>
            <value>
            The data grid owner.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridColumn.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridColumn"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridColumn"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridColumnCollection">
            <summary>
            Implements container for data grid columns
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridColumnCollection.#ctor(EmptyKeys.UserInterface.Controls.DataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridColumnCollection"/> class.
            </summary>
            <param name="dataGridOwner">The data grid owner.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridColumnCollection.InsertItem(System.Int32,EmptyKeys.UserInterface.Controls.DataGridColumn)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridColumnCollection.SetItem(System.Int32,EmptyKeys.UserInterface.Controls.DataGridColumn)">
            <summary>
            Sets the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridColumnCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:CollectionChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridColumnEventArgs">
            <summary>
            Arguments for data grid column event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridColumnEventArgs.Column">
            <summary>
            Gets the column.
            </summary>
            <value>
            The column.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridColumnEventArgs.#ctor(EmptyKeys.UserInterface.Controls.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridColumnEventArgs"/> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridLength">
            <summary>
            Implements Data Grid Length structure for data grid column
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.Auto">
            <summary>
            Gets the Auto size DataGridLength
            </summary>
            <value>
            Auto size DataGridLength
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.SizeToCells">
            <summary>
            Gets the size to cells.
            </summary>
            <value>
            The size to cells.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.SizeToHeader">
            <summary>
            Gets the size to header.
            </summary>
            <value>
            The size to header.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.IsAbsolute">
            <summary>
            Gets a value indicating whether this instance is absolute.
            </summary>
            <value>
            <c>true</c> if this instance is absolute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.IsAuto">
            <summary>
            Gets a value indicating whether this instance is automatic.
            </summary>
            <value>
            <c>true</c> if this instance is automatic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.IsStar">
            <summary>
            Gets a value indicating whether this instance is star.
            </summary>
            <value>
              <c>true</c> if this instance is star; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.IsSizeToCells">
            <summary>
            Gets a value indicating whether this instance is size to cells.
            </summary>
            <value>
            <c>true</c> if this instance is size to cells; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.IsSizeToHeader">
            <summary>
            Gets a value indicating whether this instance is size to header.
            </summary>
            <value>
            <c>true</c> if this instance is size to header; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridLength.UnitType">
            <summary>
            Gets the type of the unit.
            </summary>
            <value>
            The type of the unit.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridLength"/> struct.
            </summary>
            <param name="pixels">The pixels.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.#ctor(EmptyKeys.UserInterface.Controls.DataGridLengthUnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridLength"/> struct.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.#ctor(System.Single,EmptyKeys.UserInterface.Controls.DataGridLengthUnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridLength"/> struct.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.op_Equality(EmptyKeys.UserInterface.Controls.DataGridLength,EmptyKeys.UserInterface.Controls.DataGridLength)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="gl1">The DataGridLength</param>
            <param name="gl2">The DataGridLength</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.op_Inequality(EmptyKeys.UserInterface.Controls.DataGridLength,EmptyKeys.UserInterface.Controls.DataGridLength)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="gl1">The DataGridLength</param>
            <param name="gl2">The DataGridLength</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.Equals(EmptyKeys.UserInterface.Controls.DataGridLength)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.ToString">
            <summary>
                Returns the string representation of this object.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridLength.op_Implicit(System.Single)~EmptyKeys.UserInterface.Controls.DataGridLength">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:EmptyKeys.UserInterface.Controls.DataGridLength"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridLengthUnitType">
            <summary>
            Types of Data Grid Length
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridLengthUnitType.Auto">
            <summary>
            The automatic size
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridLengthUnitType.Pixel">
            <summary>
            The pixel size
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridLengthUnitType.SizeToCells">
            <summary>
            The size to cells
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridLengthUnitType.SizeToHeader">
            <summary>
            The size to header
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridLengthUnitType.Star">
            <summary>
            The star - fills space
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridRow">
            <summary>
            Implements data grid row control, storing items and data grid cells
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridRow.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridRow.ItemProperty">
            <summary>
            The item property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridRow.Item">
            <summary>
            Gets or sets the item.
            </summary>
            <value>
            The item.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridRow.CellsProperty">
            <summary>
            The cells property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridRow.Cells">
            <summary>
            Gets or sets the cells.
            </summary>
            <value>
            The cells.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridRow.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridRow"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridRow"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridRow.#ctor(EmptyKeys.UserInterface.Controls.DataGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridRow"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridRow.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridRow.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridRow.OnTouchGesture(EmptyKeys.UserInterface.Input.TouchGestureEventArgs)">
            <summary>
            Raises the <see cref="E:TouchGesture" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridSelectionMode">
            <summary>
            Data Grid selection modes
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridSelectionMode.Single">
            <summary>
            The single - user can select one row
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridSelectionMode.Extended">
            <summary>
            The extended - user can select multiple rows
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridSortingEventArgs">
            <summary>
            Arguments for data grid sorting event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridSortingEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EmptyKeys.UserInterface.Controls.DataGridSortingEventArgs"/> is handled.
            </summary>
            <value>
              <c>true</c> if handled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridSortingEventArgs.#ctor(EmptyKeys.UserInterface.Controls.DataGridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridSortingEventArgs"/> class.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridTemplateColumn">
            <summary>
            Implements Data Grid template column for custom defined cells
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DataGridTemplateColumn.CellTemplateProperty">
            <summary>
            The cell template property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridTemplateColumn.CellTemplate">
            <summary>
            Gets or sets the cell template.
            </summary>
            <value>
            The cell template.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridTemplateColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridTemplateColumn"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridTextColumn">
            <summary>
            Implements text column for Data Grid
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DataGridTextColumn.DefaultElementStyle">
            <summary>
            Gets the default element style.
            </summary>
            <value>
            The default element style.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DataGridTextColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DataGridTextColumn"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DefinitionBase">
            <summary>
            Implements base class for definition (row or column)
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DefinitionBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DefinitionBase.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DefinitionBase.OnPropertyChanged(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.SelectionChangedEventHandler">
            <summary>
            Selection changed event handler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ScrollChangedEventHandler">
            <summary>
            Scroll changed event handler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DataGridSortingEventHandler">
            <summary>
            Data Grid sorting event handler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.DataGridSortingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.VirtualKeyboardKeyPressEventHandler">
            <summary>
            Virtual Keyboard Key Press Event Handler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.VirtualKeyboardKeyDeactivatedEventHandler">
            <summary>
            Virtual Keyboard Key Deactivated Event Handler
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Dock">
            <summary>
            Dock modes
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Dock.Left">
            <summary>
            The left
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Dock.Top">
            <summary>
            The top
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Dock.Right">
            <summary>
            The right
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Dock.Bottom">
            <summary>
            The bottom
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.DockPanel">
            <summary>
            Implements Docking layout control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DockPanel.LastChildFillProperty">
            <summary>
            The last child fill property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.DockPanel.LastChildFill">
            <summary>
            Gets or sets a value indicating whether [last child fill].
            </summary>
            <value>
              <c>true</c> if [last child fill]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.DockPanel.DockProperty">
            <summary>
            The dock property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DockPanel.GetDock(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the dock.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DockPanel.SetDock(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Controls.Dock)">
            <summary>
            Sets the dock.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DockPanel.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.DockPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DockPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.DockPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DockPanel.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.DockPanel.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ExpandDirection">
            <summary>
            Modes for Expander control to define direction of expanding
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ExpandDirection.Down">
            <summary>
            Down expand direction
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ExpandDirection.Up">
            <summary>
            Up expand direction
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ExpandDirection.Left">
            <summary>
            Left expand direction
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ExpandDirection.Right">
            <summary>
            Right expand direction
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Expander">
            <summary>
            Implements control with header and collapsible content
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Expander.IsExpandedProperty">
            <summary>
            The is expanded property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Expander.IsExpanded">
            <summary>
            Gets or sets a value indicating whether [is expanded].
            </summary>
            <value>
              <c>true</c> if [is expanded]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Expander.ExpandDirectionProperty">
            <summary>
            The expand direction property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Expander.ExpandDirection">
            <summary>
            Gets or sets the expand direction.
            </summary>
            <value>
            The expand direction.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Expander.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Expander"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Expander.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Expander"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Expander.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Expander.OnIsExpanded(System.Boolean)">
            <summary>
            Called when [is expanded].
            </summary>
            <param name="isExpanded">if set to <c>true</c> [is expanded].</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Grid">
            <summary>
            Implements Grid layout control
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Grid.SpanKey.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Grid.SpanKey.Span">
            <summary>
            Gets or sets the span.
            </summary>
            <value>
            The span.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.SpanKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Grid.SpanKey"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="span">The span.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.SpanKey.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.SpanKey.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Grid.RowProperty">
            <summary>
            The row property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.GetRow(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the row.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.SetRow(EmptyKeys.UserInterface.UIElement,System.Int32)">
            <summary>
            Sets the row.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Grid.ColumnProperty">
            <summary>
            The column property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.GetColumn(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the column.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.SetColumn(EmptyKeys.UserInterface.UIElement,System.Int32)">
            <summary>
            Sets the column.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Grid.RowSpanProperty">
            <summary>
            The row span property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.GetRowSpan(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the row span.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.SetRowSpan(EmptyKeys.UserInterface.UIElement,System.Int32)">
            <summary>
            Sets the row span.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Grid.ColumnSpanProperty">
            <summary>
            The column span property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.GetColumnSpan(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the column span.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.SetColumnSpan(EmptyKeys.UserInterface.UIElement,System.Int32)">
            <summary>
            Sets the column span.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Grid.ColumnDefinitions">
            <summary>
            Gets the column definitions.
            </summary>
            <value>
            The column definitions.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Grid.RowDefinitions">
            <summary>
            Gets the row definitions.
            </summary>
            <value>
            The row definitions.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Grid"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Grid"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Grid.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.GroupBox">
            <summary>
            Implements Group Box layout control
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.GroupBox.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.GroupBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.GroupBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.GroupBox"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.HeaderedContentControl">
            <summary>
            Implements control with header
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.HeaderedContentControl.HeaderProperty">
            <summary>
            The header property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.HeaderedContentControl.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>
            The header.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.HeaderedContentControl.HasHeader">
            <summary>
            Gets a value indicating whether this instance has header.
            </summary>
            <value>
            <c>true</c> if this instance has header; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.HeaderedContentControl"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.HeaderedItemsControl">
            <summary>
            Implements items control with header
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.HeaderedItemsControl.HeaderProperty">
            <summary>
            The header property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.HeaderedItemsControl.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>
            The header.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.HeaderedItemsControl.HasHeader">
            <summary>
            Gets a value indicating whether this instance has header.
            </summary>
            <value>
            <c>true</c> if this instance has header; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.HeaderedItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.HeaderedContentControl"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Image">
            <summary>
            Image control UI
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Image.imageSize">
            <summary>
            The image size - internal size of image during layout passes
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Image.SourceProperty">
            <summary>
            The source property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Image.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Image.StretchProperty">
            <summary>
            The stretch property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Image.Stretch">
            <summary>
            Gets or sets the stretch.
            </summary>
            <value>
            The stretch.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Image.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Image"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Image.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Image"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Image.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Image.CalculateSize(EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.Media.Stretch)">
            <summary>
            Calculates the size of the image
            </summary>
            <param name="availableSize">Size of the available.</param>
            <param name="stretch">The stretch.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Image.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Image.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ImageButton">
            <summary>
            Implements button with image
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ImageButton.ImageNormalProperty">
            <summary>
            The image normal property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ImageButton.ImageNormal">
            <summary>
            Gets or sets the image normal.
            </summary>
            <value>
            The image normal.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ImageButton.ImagePressedProperty">
            <summary>
            The image pressed property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ImageButton.ImagePressed">
            <summary>
            Gets or sets the image pressed.
            </summary>
            <value>
            The image pressed.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ImageButton.ImageHoverProperty">
            <summary>
            The image hover property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ImageButton.ImageHover">
            <summary>
            Gets or sets the image hover.
            </summary>
            <value>
            The image hover.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ImageButton.ImageDisabledProperty">
            <summary>
            The image disabled property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ImageButton.ImageDisabled">
            <summary>
            Gets or sets the image disabled.
            </summary>
            <value>
            The image disabled.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ImageButton.ImageStretchProperty">
            <summary>
            The image stretch property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ImageButton.ImageStretch">
            <summary>
            Gets or sets the image stretch.
            </summary>
            <value>
            The image stretch.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ImageButton.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ImageButton"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ImageButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ImageButton"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ItemsControl">
            <summary>
            Implements base class for control with items
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ItemsControl.Items">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ItemsControl.ItemsSourceProperty">
            <summary>
            The items source property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ItemsControl.ItemsSource">
            <summary>
            Gets or sets the items source.
            </summary>
            <value>
            The items source.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ItemsControl.ItemsPanelProperty">
            <summary>
            The items panel property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ItemsControl.ItemsPanel">
            <summary>
            Gets or sets the items panel.
            </summary>
            <value>
            The items panel.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ItemsControl.ItemTemplateProperty">
            <summary>
            The item template property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ItemsControl.ItemTemplate">
            <summary>
            Gets or sets the item template.
            </summary>
            <value>
            The item template.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo.#ctor(System.Object,EmptyKeys.UserInterface.UIElement,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo"/> class.
            </summary>
            <param name="item">The item.</param>
            <param name="container">The container.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo.op_Equality(EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo,EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="info1">The info1.</param>
            <param name="info2">The info2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo.op_Inequality(EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo,EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="info1">The info1.</param>
            <param name="info2">The info2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ItemsControl"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ItemsControl"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.OnItemsSourceChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ItemsSourceChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.OnPropertyChanged(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether if [is item its own container override].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.OnContainersChanged">
            <summary>
            Called when [containers changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.OnItemsCleared">
            <summary>
            Called when [items cleared].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.OnItemInserted(System.Int32)">
            <summary>
            Called when [item inserted].
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ItemsControl.OnItemRemoved">
            <summary>
            Called when [item removed].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ListBox">
            <summary>
            Implements selector control with selectable list of items
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ListBox.SelectionModeProperty">
            <summary>
            The selection mode property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ListBox.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
            <value>
            The selection mode.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ListBox.SelectedItemsProperty">
            <summary>
            The selected items property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ListBox.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <value>
            The selected items.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ListBox.IsSelectedDataEnabledProperty">
            <summary>
            The is selected data enabled property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.GetIsSelectedDataEnabled(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the is selected data enabled.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.SetIsSelectedDataEnabled(EmptyKeys.UserInterface.DependencyObject,System.Boolean)">
            <summary>
            Sets the is selected data enabled.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ListBox.EnableVirtualizationProperty">
            <summary>
            The enable virtualization property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.GetEnableVirtualization(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the enable virtualization.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.SetEnableVirtualization(EmptyKeys.UserInterface.DependencyObject,System.Boolean)">
            <summary>
            Sets the enable virtualization.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ListBox.VirtualizedCacheMaxItemsProperty">
            <summary>
            The virtualized cache maximum items property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.GetVirtualizedCacheMaxItems(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the virtualized cache maximum items.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.SetVirtualizedCacheMaxItems(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets the virtualized cache maximum items.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ListBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ListBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnPreviewMouseWheel(System.Object,EmptyKeys.UserInterface.Input.MouseWheelEventArgs)">
            <summary>
            Called when [preview mouse wheel].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnItemsCleared">
            <summary>
            Called when [items cleared].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnItemRemoved">
            <summary>
            Called when [item removed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnItemInserted(System.Int32)">
            <summary>
            Called when [item inserted].
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnKeyDown(EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnPreviewGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <summary>
            Called when [preview game pad move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether if [is item its own container override].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnItemsSourceChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ItemsSourceChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.UnselectAll">
            <summary>
            Unselects all.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.ScrollIntoView(System.Object)">
            <summary>
            Scrolls the into view.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnSelectedItemChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectedItemChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBox.OnSelectedIndexChanged(EmptyKeys.UserInterface.Controls.ItemsControl.ItemInfo)">
            <summary>
            Called when [selected index changed].
            </summary>
            <param name="itemInfo">The item information.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ListBoxItem">
            <summary>
            Implements item for List Box
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ListBoxItem.IsSelectedProperty">
            <summary>
            The selected items property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ListBoxItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ListBoxItem.SelectedEvent">
            <summary>
            The selected event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.ListBoxItem.Selected">
            <summary>
            Occurs when [selected].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ListBoxItem.UnselectedEvent">
            <summary>
            The unselected event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.ListBoxItem.Unselected">
            <summary>
            Occurs when [unselected].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBoxItem.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ListBoxItem"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ListBoxItem"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBoxItem.#ctor(EmptyKeys.UserInterface.Controls.ListBox)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ListBoxItem"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBoxItem.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ListBoxItem.OnTouchGesture(EmptyKeys.UserInterface.Input.TouchGestureEventArgs)">
            <summary>
            Raises the <see cref="E:TouchGesture" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.NumericTextBox">
            <summary>
            Implements Numeric text box control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.NumericTextBox.MinimumProperty">
            <summary>
            The minimum property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.NumericTextBox.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.NumericTextBox.MaximumProperty">
            <summary>
            The maximum property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.NumericTextBox.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.NumericTextBox.ValueProperty">
            <summary>
            The value property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.NumericTextBox.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.NumericTextBox.ValueFormatProperty">
            <summary>
            The value format property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.NumericTextBox.ValueFormat">
            <summary>
            Gets or sets the value format.
            </summary>
            <value>
            The value format.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.NumericTextBox.ValueStyleProperty">
            <summary>
            The value style property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.NumericTextBox.ValueStyle">
            <summary>
            Gets or sets the value style.
            </summary>
            <value>
            The value style.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.OnTextPropertyChanged(System.String,System.String)">
            <summary>
            Called when [text property changed].
            </summary>
            <param name="oldText">The old text.</param>
            <param name="newText">The new text.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.NumericTextBox.IncrementProperty">
            <summary>
            The increment property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.NumericTextBox.Increment">
            <summary>
            Gets or sets the increment.
            </summary>
            <value>
            The increment.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.#cctor">
            <summary>
            Texts the box.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.NumericTextBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.OnMaximumChanged(System.Single,System.Single)">
            <summary>
            Called when [maximum changed].
            </summary>
            <param name="oldMaximum">The old maximum.</param>
            <param name="newMaximum">The new maximum.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.OnMinimumChanged(System.Single,System.Single)">
            <summary>
            Called when [minimum changed].
            </summary>
            <param name="oldMinimum">The old minimum.</param>
            <param name="newMinimum">The new minimum.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.OnPreviewMouseWheel(System.Object,EmptyKeys.UserInterface.Input.MouseWheelEventArgs)">
            <summary>
            Called when [preview mouse wheel].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.OnLostFocus(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.NumericTextBox.OnPreviewGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Panel">
            <summary>
            Implements base class for panel layout elements with children
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Panel.IsItemsHostProperty">
            <summary>
            The is items host property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Panel.IsItemsHost">
            <summary>
            Gets or sets a value indicating whether this instance is items host.
            </summary>
            <value>
            <c>true</c> if this instance is items host; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Panel.Children">
            <summary>
            Gets the children.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Panel.BackgroundTextureProperty">
            <summary>
            The background texture property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Panel.BackgroundTexture">
            <summary>
            Gets or sets the background texture.
            </summary>
            <value>
            The background texture.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Panel.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Panel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Panel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Panel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Panel.InvalidateIsEnabledOnChildren">
            <summary>
            Invalidates the is enabled on children.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Panel.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.PanningMode">
            <summary>
            Describes panning modes for ScrollViewer
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.PanningMode.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.PanningMode.Both">
            <summary>
            The both
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.PanningMode.HorizontalOnly">
            <summary>
            The horizontal only
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.PanningMode.VerticalOnly">
            <summary>
            The vertical only
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.PasswordBox">
            <summary>
            Implements Password Box, Text Box like control for password input
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.PasswordBox.PasswordCharProperty">
            <summary>
            The password character property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.PasswordBox.PasswordChar">
            <summary>
            Gets or sets the password character.
            </summary>
            <value>
            The password character.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.PasswordBox.PasswordProperty">
            <summary>
            The password property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.PasswordBox.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.PasswordBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.PasswordBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.PasswordBox.OnTextPropertyChanged(System.String,System.String)">
            <summary>
            Called when [text property changed].
            </summary>
            <param name="oldText">The old text.</param>
            <param name="newText">The new text.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter">
            <summary>
            Data Grid Cells Presenter - this control contains collection of cells
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether [if is item its own container].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridCellsPresenter.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader">
            <summary>
            Data Grid Column Header UI control
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader.Column">
            <summary>
            Gets the column.
            </summary>
            <value>
            The column.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader.#ctor(EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeader.OnClick">
            <summary>
            Called when button is [clicked].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter">
            <summary>
            Header presenter for Data Grid Column
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether [if is item its own container].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DataGridColumnHeadersPresenter.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventHandler">
            <summary>
            Handler for Thumb Control drag support - Start
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventHandler">
            <summary>
            Handler for Thumb Control drag support - Moving
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventHandler">
            <summary>
            Handler for Thumb Control drag support - End
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventHandler">
            <summary>
            Handler for scroll support
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs">
            <summary>
            Arguments for Drag Completed event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal change.
            </summary>
            <value>
            The horizontal change.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
            <summary>
            Gets the vertical change.
            </summary>
            <value>
            The vertical change.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs.Canceled">
            <summary>
            Gets a value indicating whether this <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs"/> is canceled.
            </summary>
            <value>
              <c>true</c> if canceled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs"/> class.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The vertical change.</param>
            <param name="canceled">if set to <c>true</c> [canceled].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs">
            <summary>
            Arguments for Drag moving event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal change.
            </summary>
            <value>
            The horizontal change.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
            <summary>
            Gets the vertical change.
            </summary>
            <value>
            The vertical change.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs"/> class.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The vertical change.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs">
            <summary>
            Arguments for Drag Start event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
            <summary>
            Gets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
            <summary>
            Gets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs"/> class.
            </summary>
            <param name="horizontalOffset">The horizontal offset.</param>
            <param name="verticalOffset">The vertical offset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo">
            <summary>
            Scroll Info interface with data for scroll support
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
            <summary>
            Gets or sets a value indicating whether this instance can vertically scroll.
            </summary>
            <value>
            <c>true</c> if this instance can vertically scroll; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
            <summary>
            Gets or sets a value indicating whether this instance can horizontally scroll.
            </summary>
            <value>
            <c>true</c> if this instance can horizontally scroll; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ExtentWidth">
            <summary>
            Gets the width of the extent.
            </summary>
            <value>
            The width of the extent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ExtentHeight">
            <summary>
            Gets the height of the extent.
            </summary>
            <value>
            The height of the extent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ViewportWidth">
            <summary>
            Gets the width of the view port.
            </summary>
            <value>
            The width of the view port.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ViewportHeight">
            <summary>
            Gets the height of the view port.
            </summary>
            <value>
            The height of the view port.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.HorizontalOffset">
            <summary>
            Gets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.VerticalOffset">
            <summary>
            Gets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollOwner">
            <summary>
            Gets or sets the scroll owner.
            </summary>
            <value>
            The scroll owner.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollLineUp">
            <summary>
            Scrolls the line up.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollLineDown">
            <summary>
            Scrolls the line down.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollLineLeft">
            <summary>
            Scrolls the line left.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollLineRight">
            <summary>
            Scrolls the line right.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollPageUp">
            <summary>
            Scrolls the page up.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollPageDown">
            <summary>
            Scrolls the page down.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollPageLeft">
            <summary>
            Scrolls the page left.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollPageRight">
            <summary>
            Scrolls the page right.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollMouseWheelUp">
            <summary>
            Scrolls the mouse wheel up.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollMouseWheelDown">
            <summary>
            Scrolls the mouse wheel down.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollMouseWheelLeft">
            <summary>
            Scrolls the mouse wheel left.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.ScrollMouseWheelRight">
            <summary>
            Scrolls the mouse wheel right.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Single)">
            <summary>
            Sets the horizontal offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Single)">
            <summary>
            Sets the vertical offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.IScrollInfo.MakeVisible(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Rect)">
            <summary>
            Makes area of element visible
            </summary>
            <param name="element">The element.</param>
            <param name="rectangle">The rectangle area</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode">
            <summary>
            Popup placement mode
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Absolute">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Relative">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Bottom">
            <summary>
            Bottom to parent control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Center">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Right">
            <summary>
            Right to parent control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.AbsolutePoint">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.RelativePoint">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Mouse">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.MousePoint">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Left">
            <summary>
            Left to parent control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Top">
            <summary>
            Top to parent control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.PlacementMode.Custom">
            <summary>
            Not Supported
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.Popup">
            <summary>
            Implementation of Popup window control with content
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Popup.ChildProperty">
            <summary>
            The child property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Popup.Child">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Popup.IsOpenProperty">
            <summary>
            The is open property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Popup.IsOpen">
            <summary>
            Gets or sets a value indicating whether this instance is open.
            </summary>
            <value>
              <c>true</c> if this instance is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Popup.PlacementProperty">
            <summary>
            The placement property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Popup.Placement">
            <summary>
            Gets or sets the placement.
            </summary>
            <value>
            The placement.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Popup.VerticalOffsetProperty">
            <summary>
            The vertical offset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Popup.VerticalOffset">
            <summary>
            Gets or sets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Popup.HorizontalOffsetProperty">
            <summary>
            The horizontal offset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Popup.HorizontalOffset">
            <summary>
            Gets or sets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Popup.PlacementTargetProperty">
            <summary>
            The placement target property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Popup.PlacementTarget">
            <summary>
            Gets or sets the placement target.
            </summary>
            <value>
            The placement target.
            </value>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.Popup.Opened">
            <summary>
            Occurs when [opened].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.Popup.Closed">
            <summary>
            Occurs when [closed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Popup.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.Popup"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Popup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.Popup"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Popup.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Popup.OnOpened">
            <summary>
            Called when [opened].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Popup.OnClosed">
            <summary>
            Called when [closed].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.RangeBase">
            <summary>
            Abstract class implementing basic features of control with a value within a specific range
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.MinimumProperty">
            <summary>
            The minimum property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.MaximumProperty">
            <summary>
            The maximum property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.ValueProperty">
            <summary>
            The value property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.SmallChangeProperty">
            <summary>
            The small change property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.SmallChange">
            <summary>
            Gets or sets the small change.
            </summary>
            <value>
            The small change.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.LargeChangeProperty">
            <summary>
            The large change property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.LargeChange">
            <summary>
            Gets or sets the large change.
            </summary>
            <value>
            The large change.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.ValueChangedEvent">
            <summary>
            The value changed event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.ValueChanged">
            <summary>
            Occurs when [value changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.RangeBase"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.OnValueChanged(System.Single,System.Single)">
            <summary>
            Called when [value changed].
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.OnMaximumChanged(System.Single,System.Single)">
            <summary>
            Called when [maximum changed].
            </summary>
            <param name="oldMaximum">The old maximum.</param>
            <param name="newMaximum">The new maximum.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RangeBase.OnMinimumChanged(System.Single,System.Single)">
            <summary>
            Called when [minimum changed].
            </summary>
            <param name="oldMinimum">The old minimum.</param>
            <param name="newMinimum">The new minimum.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton">
            <summary>
            Implements a control that is repeating click event when pressed
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.DelayProperty">
            <summary>
            The delay property (ms)
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.Delay">
            <summary>
            Gets or sets the delay.
            </summary>
            <value>
            The delay (ms)
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.IntervalProperty">
            <summary>
            The interval property (ms)
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>
            The interval (ms)
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.OnTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.RepeatButton.OnGamepadDown(EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar">
            <summary>
            Implements a control for scrolling
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.LineUpCommand">
            <summary>
            The line up command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.LineDownCommand">
            <summary>
            The line down command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.LineLeftCommand">
            <summary>
            The line left command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.LineRightCommand">
            <summary>
            The line right command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.PageUpCommand">
            <summary>
            The page up command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.PageDownCommand">
            <summary>
            The page down command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.PageLeftCommand">
            <summary>
            The page left command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.PageRightCommand">
            <summary>
            The page right command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollToEndCommand">
            <summary>
            The scroll to end command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollToHomeCommand">
            <summary>
            The scroll to home command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollToRightEndCommand">
            <summary>
            The scroll to right end command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand">
            <summary>
            The scroll to left end command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollToTopCommand">
            <summary>
            The scroll to top command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollToBottomCommand">
            <summary>
            The scroll to bottom command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollToHorizontalOffsetCommand">
            <summary>
            The scroll to horizontal offset command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollToVerticalOffsetCommand">
            <summary>
            The scroll to vertical offset command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand">
            <summary>
            The deferred scroll to horizontal offset command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand">
            <summary>
            The deferred scroll to vertical offset command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollHereCommand">
            <summary>
            The scroll here command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.OrientationProperty">
            <summary>
            The orientation property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ViewportSizeProperty">
            <summary>
            The view port size property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ViewportSize">
            <summary>
            Gets or sets the size of the view port.
            </summary>
            <value>
            The size of the view port.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.Track">
            <summary>
            Gets the track.
            </summary>
            <value>
            The track.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.ScrollEvent">
            <summary>
            The scroll event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.Scroll">
            <summary>
            Occurs when [scroll].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.OnThumbDragCompleted(System.Object,EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            Called when [thumb drag completed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.OnThumbDragDelta(System.Object,EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Called when [thumb drag delta].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragDeltaEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.OnThumbDragStarted(System.Object,EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs)">
            <summary>
            Called when [thumb drag started].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.DragStartedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollBar.OnPreviewMouseDown(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [preview mouse down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs">
            <summary>
            Event arguments for scroll event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>
            The new value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs.ScrollEventType">
            <summary>
            Gets the type of the scroll event.
            </summary>
            <value>
            The type of the scroll event.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs.#ctor(EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs"/> class.
            </summary>
            <param name="eventType">Type of the event.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs.#ctor(EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType,System.Single,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs"/> class.
            </summary>
            <param name="eventType">Type of the event.</param>
            <param name="newValue">The new value.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType">
            <summary>
            Scroll Event Types
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.EndScroll">
            <summary>
            The end scroll
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.First">
            <summary>
            The first
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.LargeDecrement">
            <summary>
            The large decrement
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.LargeIncrement">
            <summary>
            The large increment
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.Last">
            <summary>
            The last
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.SmallDecrement">
            <summary>
            The small decrement
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.SmallIncrement">
            <summary>
            The small increment
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.ThumbPosition">
            <summary>
            The thumb position
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ScrollEventType.ThumbTrack">
            <summary>
            The thumb track
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.Selector">
            <summary>
            Implementation of abstract base features for controls that allows item selection
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Selector.IsSelectedProperty">
            <summary>
            Is Selected Attached property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.GetIsSelected(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the IsSelected for specified item
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.SetIsSelected(EmptyKeys.UserInterface.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsSelected for specified item
            </summary>
            <param name="obj">The object.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectedIndexProperty">
            <summary>
            The selected index property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item
            </summary>
            <value>
            The index of the selected item
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectedItemProperty">
            <summary>
            The selected item property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.OnSelectedItemChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectedItemChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>
            The selected item.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectedItemsImplProperty">
            <summary>
            The selected items implementation property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectedItemsImpl">
            <summary>
            Gets the selected items implementation.
            </summary>
            <value>
            The selected items implementation.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectionChangedEvent">
            <summary>
            The selection changed event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectionChanged">
            <summary>
            Occurs when [selection changed].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Selector.SelectedEvent">
            <summary>
            The selected event
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.AddSelectedHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.RoutedEventHandler)">
            <summary>
            Adds the selected event handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.RemoveSelectedHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.RoutedEventHandler)">
            <summary>
            Removes the selected event handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Selector.UnselectedEvent">
            <summary>
            The unselected event
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.AddUnselectedHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.RoutedEventHandler)">
            <summary>
            Adds the unselected event handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.RemoveUnselectedHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.RoutedEventHandler)">
            <summary>
            Removes the unselected event handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.Selector"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.OnUnselected(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [unselected].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.OnSelected(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [selected].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.OnSelectionChanged(EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectionChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.UpdatePublicSelectionProperties">
            <summary>
            Updates the public selection properties.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Selector.BringTargetIntoView(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Controls.ScrollViewer)">
            <summary>
            Implements generic bring target into view
            </summary>
            <param name="targetObject">target object</param>
            <param name="dataScrollViewer">scroll viewer</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.TabPanel">
            <summary>
            Implements panel for TabItems of TabControl
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TabPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.TabPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TabPanel.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TabPanel.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase">
            <summary>
            Implements abstract base features for controls with text input
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.ContentElementName">
            <summary>
            The content element name in control template (ScrollViewer type in default template)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.IsReadOnlyProperty">
            <summary>
            is read only property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty">
            <summary>
            The horizontal scroll bar visibility property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets the horizontal scroll bar visibility.
            </summary>
            <value>
            The horizontal scroll bar visibility.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty">
            <summary>
            The vertical scroll bar visibility property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility">
            <summary>
            Gets or sets the vertical scroll bar visibility.
            </summary>
            <value>
            The vertical scroll bar visibility.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.CaretBrushProperty">
            <summary>
            The caret brush property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.CaretBrush">
            <summary>
            Gets or sets the caret brush.
            </summary>
            <value>
            The caret brush.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.TextAlignmentProperty">
            <summary>
            The text alignment dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>
            The text alignment.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.SelectionBrushProperty">
            <summary>
            The selection brush property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.SelectionBrush">
            <summary>
            Gets or sets the selection brush.
            </summary>
            <value>
            The selection brush.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.SelectionOpacityProperty">
            <summary>
            The selection opacity property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.SelectionOpacity">
            <summary>
            Gets or sets the selection opacity.
            </summary>
            <value>
            The selection opacity.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty">
            <summary>
            The is undo enabled property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.IsUndoEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is undo enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is undo enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.UndoLimitProperty">
            <summary>
            The undo limit property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.UndoLimit">
            <summary>
            Gets or sets the undo limit.
            </summary>
            <value>
            The undo limit.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.ExtentWidth">
            <summary>
            Gets the width of the extent.
            </summary>
            <value>
            The width of the extent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.ExtentHeight">
            <summary>
            Gets the height of the extent.
            </summary>
            <value>
            The height of the extent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.ViewportWidth">
            <summary>
            Gets the width of the viewport.
            </summary>
            <value>
            The width of the viewport.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.ViewportHeight">
            <summary>
            Gets the height of the viewport.
            </summary>
            <value>
            The height of the viewport.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.HorizontalOffset">
            <summary>
            Gets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.VerticalOffset">
            <summary>
            Gets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.SelectAll">
            <summary>
            Selects all.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnKeyDown(EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnMouseDoubleClick(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnMouseMove(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnMouseUp(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnLostFocus(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [lost focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.Thumb">
            <summary>
            Implements drag-able control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Thumb.IsDraggingProperty">
            <summary>
            The is dragging property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Thumb.IsDragging">
            <summary>
            Gets or sets a value indicating whether this instance is dragging.
            </summary>
            <value>
            <c>true</c> if this instance is dragging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Thumb.DragStartedEvent">
            <summary>
            The drag started event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.Thumb.DragStarted">
            <summary>
            Occurs when [drag started].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Thumb.DragDeltaEvent">
            <summary>
            The drag delta event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.Thumb.DragDelta">
            <summary>
            Occurs when [user moves mouse in drag mode].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Thumb.DragCompletedEvent">
            <summary>
            The drag completed event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.Thumb.DragCompleted">
            <summary>
            Occurs when [drag completed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.Thumb"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.Thumb"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.OnDraggingChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:DraggingChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.OnMouseUp(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.OnMouseMove(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.OnTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.OnTouchUp(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchUp" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.OnTouchMove(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchMove" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Thumb.CancelDrag">
            <summary>
            Cancels the drag.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton">
            <summary>
            Implements button with checked state
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.IsCheckedProperty">
            <summary>
            The is checked property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.IsChecked">
            <summary>
            Gets or sets the is checked.
            </summary>
            <value>
            The is checked.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.OnIsCheckedChanged(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [is checked changed].
            </summary>
            <param name="d">The dependency object</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.IsThreeStateProperty">
            <summary>
            The is three state property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.IsThreeState">
            <summary>
            Gets or sets a value indicating whether this instance is three state.
            </summary>
            <value>
            <c>true</c> if this instance is three state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.CheckedEvent">
            <summary>
            The checked event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.Checked">
            <summary>
            Occurs when [checked].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.UncheckedEvent">
            <summary>
            The unchecked event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.Unchecked">
            <summary>
            Occurs when [unchecked].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.IndeterminateEvent">
            <summary>
            The indeterminate event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.Indeterminate">
            <summary>
            Occurs when [indeterminate] state.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.OnIndeterminate(EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Raises the <see cref="E:Indeterminate" /> event.
            </summary>
            <param name="routedEventArgs">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.OnUnchecked(EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Raises the <see cref="E:Unchecked" /> event.
            </summary>
            <param name="routedEventArgs">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.OnChecked(EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Raises the <see cref="E:Checked" /> event.
            </summary>
            <param name="routedEventArgs">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.OnClick">
            <summary>
            Called when button is [clicked].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.ToggleButton.OnToggle">
            <summary>
            Called when [toggle].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Primitives.Track">
            <summary>
            Implements composite control for Thumb and two Repeat Buttons used for scrolling controls
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.IncreaseRepeatButton">
            <summary>
            Gets or sets the increase repeat button.
            </summary>
            <value>
            The increase repeat button.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.DecreaseRepeatButton">
            <summary>
            Gets or sets the decrease repeat button.
            </summary>
            <value>
            The decrease repeat button.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.Thumb">
            <summary>
            Gets or sets the thumb.
            </summary>
            <value>
            The thumb.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Track.OrientationProperty">
            <summary>
            The orientation property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Track.MinimumProperty">
            <summary>
            The minimum property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Track.MaximumProperty">
            <summary>
            The maximum property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Track.ValueProperty">
            <summary>
            The value property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Track.ViewportSizeProperty">
            <summary>
            The view port size property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.ViewportSize">
            <summary>
            Gets or sets the size of the view port.
            </summary>
            <value>
            The size of the view port.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Primitives.Track.IsDirectionReversedProperty">
            <summary>
            The is direction reversed property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Primitives.Track.IsDirectionReversed">
            <summary>
            Gets or sets a value indicating whether this instance is direction reversed.
            </summary>
            <value>
            <c>true</c> if this instance is direction reversed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Track.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.Track"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Track.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Primitives.Track"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Track.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Track.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Track.ValueFromPoint(EmptyKeys.UserInterface.PointF)">
            <summary>
            Calculates value from point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Track.ValueFromDistance(System.Single,System.Single)">
            <summary>
            Value from distance.
            </summary>
            <param name="horizontal">The horizontal distance</param>
            <param name="vertical">The vertical distance</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Track.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Primitives.Track.InvalidateIsEnabledOnChildren">
            <summary>
            Invalidates the IsEnabled property value on children.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ProgressBar">
            <summary>
            Implements control for showing progress
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ProgressBar.OrientationProperty">
            <summary>
            The orientation property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ProgressBar.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ProgressBar.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ProgressBar"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ProgressBar"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ProgressBar.OnValueChanged(System.Single,System.Single)">
            <summary>
            Called when [value changed].
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ProgressBar.OnMaximumChanged(System.Single,System.Single)">
            <summary>
            Called when [maximum changed].
            </summary>
            <param name="oldMaximum">The old maximum.</param>
            <param name="newMaximum">The new maximum.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ProgressBar.OnMinimumChanged(System.Single,System.Single)">
            <summary>
            Called when [minimum changed].
            </summary>
            <param name="oldMinimum">The old minimum.</param>
            <param name="newMinimum">The new minimum.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ProgressBar.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.RadialPanel">
            <summary>
            Implements Radial Panel layout control
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RadialPanel.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.RadialPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RadialPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.RadialPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RadialPanel.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <inheritdoc />
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RadialPanel.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <inheritdoc />
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.RadioButton">
            <summary>
            Implements Radio Button control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.RadioButton.GroupNameProperty">
            <summary>
            The group name property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.RadioButton.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>
            The name of the group.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RadioButton.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.RadioButton"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RadioButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.RadioButton"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RadioButton.OnChecked(EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Raises the <see cref="E:Checked" /> event.
            </summary>
            <param name="routedEventArgs">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RadioButton.OnToggle">
            <summary>
            Called when [toggle].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.RowDefinition">
            <summary>
            Implements definition for row of the Grid
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.RowDefinition.HeightProperty">
            <summary>
            The height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.RowDefinition.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.RowDefinition.MinHeightProperty">
            <summary>
            The minimum height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.RowDefinition.MinHeight">
            <summary>
            Gets or sets the minimum height.
            </summary>
            <value>
            The minimum height.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.RowDefinition.MaxHeightProperty">
            <summary>
            The maximum height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.RowDefinition.MaxHeight">
            <summary>
            Gets or sets the maximum height.
            </summary>
            <value>
            The maximum height.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RowDefinition.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.RowDefinition"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.RowDefinitionCollection">
            <summary>
            Implements collection of rows
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.RowDefinitionCollection.#ctor(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.RowDefinitionCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ScrollBarVisibility">
            <summary>
            Modes for scroll bar visibility
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollBarVisibility.Disabled">
            <summary>
            The disabled
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollBarVisibility.Auto">
            <summary>
            The automatic
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollBarVisibility.Hidden">
            <summary>
            The hidden
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollBarVisibility.Visible">
            <summary>
            The visible
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs">
            <summary>
            Arguments for scroll changed event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.HorizontalOffset">
            <summary>
            Gets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.VerticalOffset">
            <summary>
            Gets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal change.
            </summary>
            <value>
            The horizontal change.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.VerticalChange">
            <summary>
            Gets the vertical change.
            </summary>
            <value>
            The vertical change.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.ViewportWidth">
            <summary>
            Gets the width of the viewport.
            </summary>
            <value>
            The width of the viewport.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.ViewportHeight">
            <summary>
            Gets the height of the viewport.
            </summary>
            <value>
            The height of the viewport.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.ViewportWidthChange">
            <summary>
            Gets the viewport width change.
            </summary>
            <value>
            The viewport width change.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.ViewportHeightChange">
            <summary>
            Gets the viewport height change.
            </summary>
            <value>
            The viewport height change.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.ExtentWidth">
            <summary>
            Gets the width of the extent.
            </summary>
            <value>
            The width of the extent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.ExtentHeight">
            <summary>
            Gets the height of the extent.
            </summary>
            <value>
            The height of the extent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.ExtentWidthChange">
            <summary>
            Gets the extent width change.
            </summary>
            <value>
            The extent width change.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.ExtentHeightChange">
            <summary>
            Gets the extent height change.
            </summary>
            <value>
            The extent height change.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.#ctor(EmptyKeys.UserInterface.RoutedEvent,System.Object,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
            <param name="offset">The offset.</param>
            <param name="offsetChange">The offset change.</param>
            <param name="extent">The extent.</param>
            <param name="extentChange">The extent change.</param>
            <param name="viewport">The viewport.</param>
            <param name="viewportChange">The viewport change.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ScrollContentPresenter">
            <summary>
            Implements scroll content presenter for drawing content of Scroll Viewer control
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.CanContentScroll">
            <summary>
            Gets or sets a value indicating whether this instance can content scroll.
            </summary>
            <value>
            <c>true</c> if this instance can content scroll; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.CanVerticallyScroll">
            <summary>
            Gets or sets a value indicating whether this instance can vertically scroll.
            </summary>
            <value>
            <c>true</c> if this instance can vertically scroll; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.CanHorizontallyScroll">
            <summary>
            Gets or sets a value indicating whether this instance can horizontally scroll.
            </summary>
            <value>
            <c>true</c> if this instance can horizontally scroll; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ExtentWidth">
            <summary>
            Gets the width of the extent.
            </summary>
            <value>
            The width of the extent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ExtentHeight">
            <summary>
            Gets the height of the extent.
            </summary>
            <value>
            The height of the extent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ViewportWidth">
            <summary>
            Gets the width of the view port.
            </summary>
            <value>
            The width of the view port.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ViewportHeight">
            <summary>
            Gets the height of the view port.
            </summary>
            <value>
            The height of the view port.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.HorizontalOffset">
            <summary>
            Gets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.VerticalOffset">
            <summary>
            Gets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollOwner">
            <summary>
            Gets or sets the scroll owner.
            </summary>
            <value>
            The scroll owner.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ScrollContentPresenter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollLineUp">
            <summary>
            Scrolls the line up.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollLineDown">
            <summary>
            Scrolls the line down.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollLineLeft">
            <summary>
            Scrolls the line left.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollLineRight">
            <summary>
            Scrolls the line right.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollPageUp">
            <summary>
            Scrolls the page up.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollPageDown">
            <summary>
            Scrolls the page down.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollPageLeft">
            <summary>
            Scrolls the page left.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollPageRight">
            <summary>
            Scrolls the page right.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollMouseWheelUp">
            <summary>
            Scrolls the mouse wheel up.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollMouseWheelDown">
            <summary>
            Scrolls the mouse wheel down.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollMouseWheelLeft">
            <summary>
            Scrolls the mouse wheel left.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ScrollMouseWheelRight">
            <summary>
            Scrolls the mouse wheel right.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Single)">
            <summary>
            Sets the horizontal offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.SetVerticalOffset(System.Single)">
            <summary>
            Sets the vertical offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.MakeVisible(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Rect)">
            <summary>
            Makes area of element visible
            </summary>
            <param name="element">The element.</param>
            <param name="rectangle">The rectangle area</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollContentPresenter.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ScrollViewer">
            <summary>
            Implements scrollable area with content
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ActionProperty">
            <summary>
            The action property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetAction(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the action.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetAction(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Controls.ScrollViewerAction)">
            <summary>
            Sets the action.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollPointProperty">
            <summary>
            The scroll point property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetScrollPoint(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the scroll point.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetScrollPoint(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.PointF)">
            <summary>
            Sets the scroll point.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.CanContentScrollProperty">
            <summary>
            The can content scroll property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetCanContentScroll(EmptyKeys.UserInterface.DependencyObject,System.Boolean)">
            <summary>
            Sets the can content scroll.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="canContentScroll">if set to <c>true</c> [can content scroll].</param>
            <exception cref="T:System.ArgumentNullException">dependencyObject</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetCanContentScroll(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the can content scroll.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">dependencyObject</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
            <summary>
            The horizontal scroll bar visibility property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the horizontal scroll bar visibility.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Controls.ScrollBarVisibility)">
            <summary>
            Sets the horizontal scroll bar visibility.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets the horizontal scroll bar visibility.
            </summary>
            <value>
            The horizontal scroll bar visibility.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
            <summary>
            The vertical scroll bar visibility property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetVerticalScrollBarVisibility(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the vertical scroll bar visibility.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetVerticalScrollBarVisibility(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Controls.ScrollBarVisibility)">
            <summary>
            Sets the vertical scroll bar visibility.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.VerticalScrollBarVisibility">
            <summary>
            Gets or sets the vertical scroll bar visibility.
            </summary>
            <value>
            The vertical scroll bar visibility.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollableHeightProperty">
            <summary>
            The scrollable height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollableHeight">
            <summary>
            Gets the scrollable height.
            </summary>
            <value>
            The height
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollableWidthProperty">
            <summary>
            The scrollable width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollableWidth">
            <summary>
            Gets the scrollable width.
            </summary>
            <value>
            The width
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ExtentHeightProperty">
            <summary>
            The extent height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.ExtentHeight">
            <summary>
            Gets the height of the extent.
            </summary>
            <value>
            The height of the extent.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ExtentWidthProperty">
            <summary>
            The extent width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.ExtentWidth">
            <summary>
            Gets the width of the extent.
            </summary>
            <value>
            The width of the extent.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ViewportHeightProperty">
            <summary>
            The viewport height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.ViewportHeight">
            <summary>
            Gets the height of the viewport.
            </summary>
            <value>
            The height of the viewport.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ViewportWidthProperty">
            <summary>
            The viewport width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.ViewportWidth">
            <summary>
            Gets the width of the viewport.
            </summary>
            <value>
            The width of the viewport.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
            <summary>
            The computed horizontal scroll bar visibility property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
            <summary>
            Gets the computed horizontal scroll bar visibility.
            </summary>
            <value>
            The computed horizontal scroll bar visibility.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
            <summary>
            The computed vertical scroll bar visibility property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
            <summary>
            Gets the computed vertical scroll bar visibility.
            </summary>
            <value>
            The computed vertical scroll bar visibility.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.VerticalOffsetProperty">
            <summary>
            The vertical offset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.VerticalOffset">
            <summary>
            Gets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.HorizontalOffsetProperty">
            <summary>
            The horizontal offset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.HorizontalOffset">
            <summary>
            Gets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.PanningModeProperty">
            <summary>
            The panning mode property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.PanningMode">
            <summary>
            Gets or sets the panning mode.
            </summary>
            <value>
            The panning mode.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetPanningMode(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Controls.PanningMode)">
            <summary>
            Sets the panning mode.
            </summary>
            <param name="element">The element.</param>
            <param name="panningMode">The panning mode.</param>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetPanningMode(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the panning mode.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.PanningRatioProperty">
            <summary>
            The panning ratio property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.PanningRatio">
            <summary>
            Gets or sets the panning ratio.
            </summary>
            <value>
            The panning ratio.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetPanningRatio(EmptyKeys.UserInterface.DependencyObject,System.Single)">
            <summary>
            Sets the panning ratio.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetPanningRatio(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the panning ratio.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.PanningDecelerationProperty">
            <summary>
            The panning deceleration property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ScrollViewer.PanningDeceleration">
            <summary>
            Gets or sets the panning deceleration.
            </summary>
            <value>
            The panning deceleration.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetPanningDeceleration(EmptyKeys.UserInterface.DependencyObject,System.Single)">
            <summary>
            Sets the panning deceleration.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetPanningDeceleration(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the panning deceleration.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.IsMouseWheelEnabledProperty">
            <summary>
            The is mouse wheel enabled property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.GetIsMouseWheelEnabled(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the is mouse wheel enabled.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.SetIsMouseWheelEnabled(EmptyKeys.UserInterface.DependencyObject,System.Boolean)">
            <summary>
            Sets the is mouse wheel enabled.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollChangedEvent">
            <summary>
            The scroll changed event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollChanged">
            <summary>
            Occurs when [scroll changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ScrollViewer"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ScrollViewer"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.OnMouseWheel(EmptyKeys.UserInterface.Input.MouseWheelEventArgs)">
            <summary>
            Called when [mouse wheel].
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.InvalidateScrollInfo">
            <summary>
            Invalidates the scroll information.
            </summary>        
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.OnScrollChanged(EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ScrollChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.ScrollChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Single)">
            <summary>
            Scrolls to horizontal offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollToVerticalOffset(System.Single)">
            <summary>
            Scrolls to vertical offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollToBottom">
            <summary>
            Scrolls to bottom.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollToTop">
            <summary>
            Scrolls to top.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollToLeftEnd">
            <summary>
            Scrolls to left end.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollToRightEnd">
            <summary>
            Scrolls to right end.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollToHome">
            <summary>
            Scrolls to home.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollToEnd">
            <summary>
            Scrolls to end.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollPageRight">
            <summary>
            Scrolls the page right.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollPageLeft">
            <summary>
            Scrolls the page left.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollPageDown">
            <summary>
            Scrolls the page down.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollPageUp">
            <summary>
            Scrolls the page up.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollLineRight">
            <summary>
            Scrolls the line right.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollLineLeft">
            <summary>
            Scrolls the line left.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollLineUp">
            <summary>
            Scrolls the line up.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.ScrollLineDown">
            <summary>
            Scrolls the line down.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.OnTouchGesture(EmptyKeys.UserInterface.Input.TouchGestureEventArgs)">
            <summary>
            Raises the <see cref="E:TouchGesture" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.OnMouseUp(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.OnPreviewMouseMove(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [preview mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ScrollViewer.OnPreviewGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <summary>
            Called when [preview game pad move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ScrollViewerAction">
            <summary>
            Describes actions for Scroll Viewer
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewerAction.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewerAction.ScrollToBottom">
            <summary>
            The scroll to bottom
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewerAction.ScrollToTop">
            <summary>
            The scroll to top
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewerAction.ScrollToLeft">
            <summary>
            The scroll to left
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewerAction.ScrollToRight">
            <summary>
            The scroll to right
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ScrollViewerAction.ScrollToPoint">
            <summary>
            The scroll to point
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs">
            <summary>
            Arguments for selection changed event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs.RemovedItems">
            <summary>
            Gets the removed items.
            </summary>
            <value>
            The removed items.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs.AddedItems">
            <summary>
            Gets the added items.
            </summary>
            <value>
            The added items.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs.#ctor(EmptyKeys.UserInterface.RoutedEvent,System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="removedItems">The removed items.</param>
            <param name="addedItems">The added items.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.SelectionMode">
            <summary>
            Modes for selection
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.SelectionMode.Single">
            <summary>
            The single
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.SelectionMode.Multiple">
            <summary>
            The multiple selection
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.SelectionMode.Extended">
            <summary>
            The multiple selection extended with CTRL/SHIFT
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.Slider">
            <summary>
            Implements Slider control with thumb
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Slider.OrientationProperty">
            <summary>
            The orientation property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Slider.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Slider.IsSnapToTickEnabledProperty">
            <summary>
            The is snap to tick enabled property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Slider.IsSnapToTickEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is snap to tick enabled.
            </summary>
            <value>
            <c>true</c> if this instance is snap to tick enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.Slider.TickFrequencyProperty">
            <summary>
            The tick frequency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Slider.TickFrequency">
            <summary>
            Gets or sets the tick frequency.
            </summary>
            <value>
            The tick frequency.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Slider.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.Slider"/> class.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.Slider.Track">
            <summary>
            Gets the track.
            </summary>
            <value>
            The track.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Slider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.Slider"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Slider.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Slider.OnPreviewMouseDown(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [preview mouse down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Slider.OnPreviewTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.Slider.OnPreviewGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.StackPanel">
            <summary>
            Implements vertically or horizontally oriented container for controls
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.StackPanel.OrientationProperty">
            <summary>
            The orientation dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.StackPanel.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.StackPanel.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.StackPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.StackPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.StackPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.StackPanel.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.StackPanel.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.TabControl">
            <summary>
            Implements control with multiple items and content selector
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TabControl.TabStripPlacementProperty">
            <summary>
            The tab strip placement property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TabControl.TabStripPlacement">
            <summary>
            Gets or sets the tab strip placement.
            </summary>
            <value>
            The tab strip placement.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TabControl.SelectedContentProperty">
            <summary>
            The selected content property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TabControl.SelectedContent">
            <summary>
            Gets the content of the selected.
            </summary>
            <value>
            The content of the selected.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.TabControl"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.TabControl"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.OnKeyDown(EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.OnGamepadTrigger(System.Object,EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs)">
            <summary>
            Called when [game pad trigger].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.OnSelectionChanged(EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:SelectionChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Controls.SelectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether if [is item its own container override].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.OnContainersChanged">
            <summary>
            Called when [containers changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabControl.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.TabItem">
            <summary>
            Implements item for Tab Control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TabItem.IsSelectedProperty">
            <summary>
            The is selected property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TabItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.TabItem"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabItem.#ctor(EmptyKeys.UserInterface.Controls.TabControl)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.TabItem"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabItem.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TabItem.OnTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.TextBlock">
            <summary>
            Implements control that can draw text
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextBlock.TextProperty">
            <summary>
            The text property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TextBlock.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextBlock.TextAlignmentProperty">
            <summary>
            The text alignment dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TextBlock.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>
            The text alignment.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextBlock.TextWrappingProperty">
            <summary>
            The text wrapping property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TextBlock.TextWrapping">
            <summary>
            Gets or sets the text wrapping.
            </summary>
            <value>
            The text wrapping.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextBlock.BackgroundTextureProperty">
            <summary>
            The background texture property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TextBlock.BackgroundTexture">
            <summary>
            Gets or sets the background texture.
            </summary>
            <value>
            The background texture.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBlock.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.TextBlock"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.TextBlock" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBlock.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBlock.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBlock.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.TextBox">
            <summary>
            Implements control so user can draw or edit text
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.Controls.Primitives.TextBoxBase" />
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextBox.TextProperty">
            <summary>
            The text property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBox.OnTextPropertyChanged(System.String,System.String)">
            <summary>
            Called when [text property changed].
            </summary>
            <param name="oldText">The old text.</param>
            <param name="newText">The new text.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TextBox.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TextBox.SelectedText">
            <summary>
            Gets the selected text.
            </summary>
            <value>
            The selected text.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextBox.MaxLengthProperty">
            <summary>
            The maximum length property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TextBox.MaxLength">
            <summary>
            Gets or sets the maximum length.
            </summary>
            <value>
            The maximum length.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBox.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.TextBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.TextBox"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBox.OnTextContainerChanged(System.Object,System.EventArgs)">
            <summary>
            Called when [text container changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of the text
            </summary>
            <param name="start">The start.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TextBox.OnGamepadDown(EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.TextWrapping">
            <summary>
            Modes of text wrapping
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextWrapping.NoWrap">
            <summary>
            The no wrap
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextWrapping.Wrap">
            <summary>
            The wrap
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TextWrapping.WrapWithOverflow">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ToolTip">
            <summary>
            Implements of Tool Tip control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTip.IsOpenProperty">
            <summary>
            The is open property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ToolTip.IsOpen">
            <summary>
            Gets or sets a value indicating whether this instance is open.
            </summary>
            <value>
              <c>true</c> if this instance is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTip.PlacementProperty">
            <summary>
            The placement property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ToolTip.Placement">
            <summary>
            Gets or sets the placement.
            </summary>
            <value>
            The placement.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTip.HorizontalOffsetProperty">
            <summary>
            The horizontal offset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ToolTip.HorizontalOffset">
            <summary>
            Gets or sets the horizontal offset.
            </summary>
            <value>
            The horizontal offset.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTip.VerticalOffsetProperty">
            <summary>
            The vertical offset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ToolTip.VerticalOffset">
            <summary>
            Gets or sets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTip.PlacementTargetProperty">
            <summary>
            The placement target property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ToolTip.PlacementTarget">
            <summary>
            Gets or sets the placement target.
            </summary>
            <value>
            The placement target.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTip.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.ToolTip"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ToolTip"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTip.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.ToolTipService">
            <summary>
            Implements service for all Tool Tips
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.ToolTipService.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTipService.ToolTipProperty">
            <summary>
            The tool tip property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.GetToolTip(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the tool tip.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.SetToolTip(EmptyKeys.UserInterface.DependencyObject,System.Object)">
            <summary>
            Sets the tool tip.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTipService.ShowDurationProperty">
            <summary>
            The show duration property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.GetShowDuration(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the duration of the show.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.SetShowDuration(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets the duration of the show.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTipService.InitialShowDelayProperty">
            <summary>
            The initial show delay property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.GetInitialShowDelay(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the initial show delay.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.SetInitialShowDelay(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets the initial show delay.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTipService.PlacementProperty">
            <summary>
            The placement property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.GetPlacement(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the placement.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.SetPlacement(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Controls.Primitives.PlacementMode)">
            <summary>
            Sets the placement.
            </summary>
            <param name="obj">The obj.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTipService.HorizontalOffsetProperty">
            <summary>
            The horizontal offset property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.GetHorizontalOffset(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the horizontal offset.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.SetHorizontalOffset(EmptyKeys.UserInterface.DependencyObject,System.Single)">
            <summary>
            Sets the horizontal offset.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTipService.VerticalOffsetProperty">
            <summary>
            The vertical offset property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.GetVerticalOffset(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the vertical offset.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.SetVerticalOffset(EmptyKeys.UserInterface.DependencyObject,System.Single)">
            <summary>
            Sets the vertical offset.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.ToolTipService.PlacementTargetProperty">
            <summary>
            The placement target property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.GetPlacementTarget(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the placement target.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.SetPlacementTarget(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the placement target.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">obj</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Controls.ToolTipService"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.Update(System.Double)">
            <summary>
            Updates tool tip state and timers
            </summary>
            <param name="elapsedGameTime">The elapsed game time.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.ToolTipService.FindToolTipParent(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Finds the tool tip parent.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.TreeView">
            <summary>
            Implements Tree View control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TreeView.SelectedItemProperty">
            <summary>
            The selected item property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TreeView.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>
            The selected item.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TreeView.SelectedItemChangedEvent">
            <summary>
            The selected item changed event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.TreeView.SelectedItemChanged">
            <summary>
            Occurs when [selected item changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.TreeView"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether if [is item its own container override].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeView.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeView.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeView.OnItemsSourceChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ItemsSourceChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeView.OnSelectedItemChanged(EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            Raises the <see cref="E:SelectedItemChanged" /> event.
            </summary>
            <param name="e">The instance containing the event data.</param>        
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.TreeViewItem">
            <summary>
            Implements item for Tree View
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TreeViewItem.IsExpandedProperty">
            <summary>
            The is expanded property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TreeViewItem.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded.
            </summary>
            <value>
            <c>true</c> if this instance is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TreeViewItem.IsSelectedProperty">
            <summary>
            The is selected property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TreeViewItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TreeViewItem.SelectedEvent">
            <summary>
            The selected event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.TreeViewItem.Selected">
            <summary>
            Occurs when [selected].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.TreeViewItem.UnselectedEvent">
            <summary>
            The unselected event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.TreeViewItem.Unselected">
            <summary>
            Occurs when [unselected].
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.TreeViewItem.ParentTreeView">
            <summary>
            Gets or sets the parent TreeView.
            </summary>
            <value>
            The parent TreeView.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeViewItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.TreeViewItem"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeViewItem.#ctor(EmptyKeys.UserInterface.Controls.TreeView)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.TreeViewItem"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether if [is item its own container override].
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeViewItem.GetContainerForItemOverride(System.Object)">
            <summary>
            Gets the container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeViewItem.SetContainer(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the container.
            </summary>
            <param name="itemContainer">The item container.</param>
            <param name="contentVisual">The content visual.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.TreeViewItem.OnItemsSourceChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ItemsSourceChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.UIElementCollection">
            <summary>
            Implements container for elements
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIElementCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIElementCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.#ctor(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.UIElementCollection"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.IndexOf(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.Insert(System.Int32,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.Add(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.Contains(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.CopyTo(EmptyKeys.UserInterface.UIElement[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.Remove(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIElementCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.UIRoot">
            <summary>
            Implements user interface root control, root of UI in visual tree
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.DpiX">
            <summary>
            Gets or sets the X DPI
            </summary>
            <value>
            The X DPI
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.DpiY">
            <summary>
            Gets or sets the Y DPI
            </summary>
            <value>
            The Y DPI
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.PopupWindow">
            <summary>
            Gets or sets the pop up window.
            </summary>
            <value>
            The pop up window.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.UIRoot.OwnedWindowsContentProperty">
            <summary>
            The owned windows content property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.OwnedWindowsContent">
            <summary>
            Gets or sets the content of the owned windows.
            </summary>
            <value>
            The content of the owned windows.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.EnabledMultiThreadLocking">
            <summary>
            Gets or sets a value indicating whether is [enabled multi thread locking].
            </summary>
            <value>
            <c>true</c> if [enabled multi thread locking]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.UIRoot.IsTabNavigationEnabledProperty">
            <summary>
            The is tab navigation enabled property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.IsTabNavigationEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is tab navigation enabled.
            </summary>
            <value>
            <c>true</c> if this instance is tab navigation enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.UIRoot.MessageBoxOverlayProperty">
            <summary>
            The message box overlay property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.MessageBoxOverlay">
            <summary>
            Gets or sets the message box overlay.
            </summary>
            <value>
            The message box overlay.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.Windows">
            <summary>
            Gets the windows - items created based on OwnedWindowsContent content
            </summary>
            <value>
            The windows.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UIRoot.VirtualKeyboard">
            <summary>
            Gets or sets the virtual keyboard.
            </summary>
            <value>
            The virtual keyboard.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.UIRoot"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.UIRoot"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.UIRoot" /> class.
            </summary>
            <param name="width">The width (device pixels).</param>
            <param name="height">The height (device pixels).</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.UpdateInput(System.Double)">
            <summary>
            Updates the input.
            </summary>
            <param name="elapsedGameTime">The elapsed game time (TotalMilliseconds).</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.InputHitTest(System.Single,System.Single)">
            <summary>
            Input method for hit test
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.UpdateLayout(System.Double)">
            <summary>
            Updates the layout.
            </summary>
            <param name="elapsedGameTime">The elapsed game time (TotalMilliseconds).</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.Draw(System.Double)">
            <summary>
            Draws content.
            </summary>
            <param name="elapsedGameTime">The elapsed game time (TotalMilliseconds).</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.ProcessDispatcherQueue">
            <summary>
            Processes dispatcher queue with request (invokes) from the other thread. Always call this on the main UI thread.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.OnPropertyChanged(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.Resize(System.Int32,System.Int32)">
            <summary>
            Resizes UI
            </summary>
            <param name="width">The width (device pixels).</param>
            <param name="height">The height (device pixels).</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.OnKeyDown(EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.OnGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <summary>
            Called when [game pad move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UIRoot.ShowGamepadHelp(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Shows gamepad help section for specific element
            </summary>
            <param name="element">element with gamepad help section</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.UniformGrid">
            <summary>
            Implements Uniform Grid layout control
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.Controls.Panel" />
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.UniformGrid.RowsProperty">
            <summary>
            The rows property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UniformGrid.Rows">
            <summary>
            Gets or sets the number of rows for the grid
            </summary>
            <value>
            The rows.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.UniformGrid.ColumnsProperty">
            <summary>
            The columns property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UniformGrid.Columns">
            <summary>
            Gets or sets the number of columns for the grid
            </summary>
            <value>
            The columns.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.UniformGrid.FirstColumnProperty">
            <summary>
            The first column property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.UniformGrid.FirstColumn">
            <summary>
            Gets or sets the first column.
            </summary>
            <value>
            The first column.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UniformGrid.OnRowsColumnsChanged(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [rows or columns changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UniformGrid.OnFirstColumnChanged(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [first column changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UniformGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.UniformGrid" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UniformGrid.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UniformGrid.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.UserControl">
            <summary>
            Implements base class for creating other controls
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UserControl.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.UserControl"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.UserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.UserControl"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.VirtualKeyboard">
            <summary>
            Implements virtual keyboard for touch devices
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.VirtualKeyboard.KeyboardModeProperty">
            <summary>
            The keyboard mode property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.VirtualKeyboard.KeyboardMode">
            <summary>
            Gets or sets the keyboard mode.
            </summary>
            <value>
            The keyboard mode.
            </value>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.VirtualKeyboard.KeyPressed">
            <summary>
            Occurs when [key pressed].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Controls.VirtualKeyboard.KeyDeactivated">
            <summary>
            Occurs when [key deactivated].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.VirtualKeyboard.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.VirtualKeyboard"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.VirtualKeyboard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.VirtualKeyboard"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.VirtualKeyboard.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.VirtualKeyboard.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Controls.WrapPanel">
            <summary>
            Implements Wrap Panel layout control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.WrapPanel.ItemWidthProperty">
            <summary>
            The item width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.WrapPanel.ItemWidth">
            <summary>
            Gets or sets the width of the item.
            </summary>
            <value>
            The width of the item.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.WrapPanel.ItemHeightProperty">
            <summary>
            The item height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.WrapPanel.ItemHeight">
            <summary>
            Gets or sets the height of the item.
            </summary>
            <value>
            The height of the item.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Controls.WrapPanel.OrientationProperty">
            <summary>
            The orientation property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.WrapPanel.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Controls.WrapPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Controls.WrapPanel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.WrapPanel.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Controls.WrapPanel.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.DataTemplate">
            <summary>
            Implements data template
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.DataTemplate.DataType">
            <summary>
            Gets or sets the type of the data.
            </summary>
            <value>
            The type of the data.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DataTemplate.DataTemplateKey">
            <summary>
            Gets the data template key.
            </summary>
            <value>
            The data template key.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.DataTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.DataTemplate"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DataTemplate.#ctor(System.Func{EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.DataTemplate"/> class.
            </summary>
            <param name="createMethod">The create method.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DataTemplate.#ctor(System.Object,System.Func{EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.UIElement})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.DataTemplate" /> class.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="createMethod">The create method.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DataTemplate.CreateVisualTree(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Creates the visual tree from template
            </summary>
            <param name="parent">The parent.</param>
            <returns>visual tree - created tree from template</returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.Binding">
            <summary>
            Implements binding definition
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.Path">
            <summary>
            Gets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.SourceDependencyProperty">
            <summary>
            Gets or sets the source dependency property.
            </summary>
            <value>
            The source dependency property.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.Converter">
            <summary>
            Gets or sets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.FallbackValue">
            <summary>
            Gets or sets the fall back value.
            </summary>
            <value>
            The fall back value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>
            The string format.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.ElementName">
            <summary>
            Gets or sets the name of the element.
            </summary>
            <value>
            The name of the element.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.Binding.UseGeneratedBindings">
            <summary>
            Gets or sets a value indicating whether [use generated bindings].
            </summary>
            <value>
            <c>true</c> if [use generated bindings]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.Binding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.Binding"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.Binding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.Binding"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.Binding.#ctor(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.Binding"/> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.Binding.CreateBindingExpression(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Creates the binding expression.
            </summary>
            <param name="target">The target.</param>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.BindingExpression">
            <summary>
            Implements binding logic
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.BindingExpression.ParentBinding">
            <summary>
            Gets the parent binding.
            </summary>
            <value>
            The parent binding.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.BindingExpression.Target">
            <summary>
            Gets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.BindingExpression.TargetProperty">
            <summary>
            Gets the target property.
            </summary>
            <value>
            The target property.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.BindingExpression.DataItem">
            <summary>
            Gets the data item.
            </summary>
            <value>
            The data item.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingExpression.CreateBindingExpression(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyProperty,EmptyKeys.UserInterface.Data.Binding)">
            <summary>
            Creates the binding expression.
            </summary>
            <param name="target">The target.</param>
            <param name="property">The property.</param>
            <param name="binding">The binding.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Property is not data bind-able -  + property.Name;property</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingExpression.UpdateSource">
            <summary>
            Updates the source.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingExpression.DetachSource">
            <summary>
            Detaches the source.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingExpression.AttachSource">
            <summary>
            Attaches the source.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingExpression.UpdateTarget">
            <summary>
            Updates the target.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingExpression.Clear">
            <summary>
            Clears Binding.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.BindingMode">
            <summary>
            Binding modes
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.BindingMode.TwoWay">
            <summary>
            The two way
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.BindingMode.OneWay">
            <summary>
            The one way
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.BindingMode.OneTime">
            <summary>
            The one time
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.BindingMode.OneWayToSource">
            <summary>
            The one way to source
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.BindingMode.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.BindingOperations">
            <summary>
            Implements methods for managing bindings
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingOperations.SetBinding(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyProperty,EmptyKeys.UserInterface.Data.Binding)">
            <summary>
            Sets the binding.
            </summary>
            <param name="target">The target.</param>
            <param name="dp">The dp.</param>
            <param name="binding">The binding.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingOperations.ClearBinding(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Clears the binding.
            </summary>
            <param name="target">The target.</param>
            <param name="dp">The Dependency Property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingOperations.ClearAllBindings(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Clears all bindings.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingOperations.IsDataBound(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Determines whether [is data bound] [the specified target].
            </summary>
            <param name="target">The target.</param>
            <param name="dp">The Dependency Property.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BindingOperations.GetAllBindings(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets all bindings.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.BooleanToVisibilityConverter">
            <summary>
            Implements converter boolean to visibility and back
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts value back to original type
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.ColorBrushConverter">
            <summary>
            Implements Color Brush value converter
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ColorBrushConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.ColorBrushConverter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ColorBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ColorBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts value back to original type
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.DefaultValueConverter">
            <summary>
            Implements default value converter for binding, base class for other converters
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.DefaultValueConverter.stringType">
            <summary>
            The string type
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.DefaultValueConverter.objectType">
            <summary>
            The object type
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.DefaultValueConverter.sourceType">
            <summary>
            The source type
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Data.DefaultValueConverter.targetType">
            <summary>
            The target type
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.DefaultValueConverter.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.DefaultValueConverter"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.DefaultValueConverter.Create(System.Type,System.Type,System.Boolean)">
            <summary>
            Creates value converter.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="targetToSource">if set to <c>true</c> [target to source].</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.DefaultValueConverter.TryParse(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Tries parsing value to target type
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.GeneratedPropertyInfo">
            <summary>
            Implements Property Info for generated properties (generated bindings)
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.GeneratedPropertyInfo.RegisterGeneratedProperty(System.Type,System.String,System.Type)">
            <summary>
            Registers the generated property.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyInfoType">Type of the property information.</param>
            <exception cref="T:System.ArgumentNullException">
            dataType
            or
            propertyName
            or
            propertyInfoType
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.GeneratedPropertyInfo.GetGeneratedPropertyInfo(System.Type,System.String)">
            <summary>
            Gets the generated property information.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            dataType
            or
            propertyName
            </exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.IPropertyInfo">
            <summary>
            Describes property info interface for binding of property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.IPropertyInfo.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
            <value>
            The type of the property.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.IPropertyInfo.IsResolved">
            <summary>
            Gets a value indicating whether this instance is resolved.
            </summary>
            <value>
            <c>true</c> if this instance is resolved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.IPropertyInfo.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.IPropertyInfo.GetValue(System.Object,System.Object[])">
            <summary>
            Gets the value.
            </summary>
            <param name="obj">The object.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.IPropertyInfo.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.IPropertyInfo.SetValue(System.Object,System.Object,System.Object[])">
            <summary>
            Sets the value.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
            <param name="index">The index.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.IValueConverter">
            <summary>
            Interface for binding Value Converter
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts value back to original type
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.ObjectSourceConverter">
            <summary>
            Implements object source converter for binding
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ObjectSourceConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.ObjectSourceConverter"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ObjectSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ObjectSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts value back to original type
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.ObjectTargetConverter">
            <summary>
            Implements object target converter
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ObjectTargetConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.ObjectTargetConverter" /> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ObjectTargetConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ObjectTargetConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts value back to original type
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.PropertyPath">
            <summary>
            Implements parsing of path and set/get value for binding
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.PropertyPath.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.PropertyPath.PathValues">
            <summary>
            Gets the path values.
            </summary>
            <value>
            The path values.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.PropertyPath.UseGeneratedBindings">
            <summary>
            Gets or sets a value indicating whether [use generated bindings].
            </summary>
            <value>
            <c>true</c> if [use generated bindings]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.PropertyPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.PropertyPath"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.PropertyPath.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.PropertyPath.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="data">The data.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo">
            <summary>
            Implements reflection based property info
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
            <value>
            The type of the property.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo.IsResolved">
            <summary>
            Gets a value indicating whether this instance is resolved.
            </summary>
            <value>
            <c>true</c> if this instance is resolved; otherwise, <c>false</c>.
            </value>        
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Property Info is null.</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo.GetValue(System.Object,System.Object[])">
            <summary>
            Gets the value.
            </summary>
            <param name="obj">The object.</param>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Property Info is null.</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">Property Info is null.</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ReflectionPropertyInfo.SetValue(System.Object,System.Object,System.Object[])">
            <summary>
            Sets the value.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentNullException">Property Info is null.</exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.StringToVisibilityConverter">
            <summary>
            Implements converter for string to Visibility value
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.Data.IValueConverter" />
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.StringToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.StringToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts value back to original type
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.SystemConvertConverter">
            <summary>
            Implements default system convert converter
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.SystemConvertConverter.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.SystemConvertConverter"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.SystemConvertConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.SystemConvertConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back specified value
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.SystemConvertConverter.CanConvert(System.Type,System.Type)">
            <summary>
            Determines whether source type can be converted to target type
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Data.ValueConverterAttribute">
            <summary>
            Implements Value Converter Attribute
            </summary>
            
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.ValueConverterAttribute.ConverterType">
            <summary>
            Gets the name of the converter type.
            </summary>
            <value>
            The name of the converter type.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Data.ValueConverterAttribute.ConvertToType">
            <summary>
            Gets the type to convert to
            </summary>
            <value>
            The target type
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ValueConverterAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Data.ValueConverterAttribute" /> class.
            </summary>
            <param name="converterType">Type of the converter.</param>
            <param name="toConvertType">Target type to convert.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ValueConverterAttribute.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Data.ValueConverterAttribute.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.DefinitionCollection`1">
            <summary>
            Implementation of generic container for definitions. This collection is thread safe.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.SetParent(`0,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Sets the parent.
            </summary>
            <param name="item">The item.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.DefinitionCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.DefinitionCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.DefinitionCollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.DefinitionCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.DefinitionCollection`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.DefinitionCollection`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.DefinitionCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.#ctor(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.DefinitionCollection`1"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection,
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DefinitionCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.PropertyChangedCallback">
            <summary>
            Event handler for property changed events
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventHandler">
            <summary>
            Event handler for dependency property changed events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.RoutedEventHandler">
            <summary>
            Event handler for generic routed event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.RoutedPropertyChangedEventHandler`1">
            <summary>
            Event handler for routed property changed event
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.CoerceValueCallback">
            <summary>
            Event handler for dependency property coerce value event
            </summary>
            <param name="d">The d.</param>
            <param name="baseValue">The base value.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.FreezablePropertyChanged">
            <summary>
            Freezable Property Changed
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.DragDropEventHandler">
            <summary>
            Drag and Drop event handler delegate
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DragDropEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.RequestBringIntoViewEventHandler">
            <summary>
            Request Bring Into View event handler delegate
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RequestBringIntoViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.DependencyObject">
            <summary>
            Implements dependency object for dependency properties
            </summary>   
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyObject.DependencyObjectType">
            <summary>
            Gets the type of the dependency object.
            </summary>
            <value>
            The type of the dependency object.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyObject.InheritanceParent">
            <summary>
            Gets or sets the inheritance parent.
            </summary>
            <value>
            The inheritance parent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyObject.IsSealed">
            <summary>
            Gets a value indicating whether this instance is sealed.
            </summary>
            <value>
              <c>true</c> if this instance is sealed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.DependencyObject" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified object  is equal to the current object; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.ClearValue(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Clears the value.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.GetValue(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Gets the value.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.ReadLocalValue(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Reads the local value.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.GetLocalValueEnumerator">
            <summary>
            Gets the local value enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.SetValue(EmptyKeys.UserInterface.DependencyProperty,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.OnPropertyChanged(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.CoerceValue(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Coerces the value.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.SetBinding(EmptyKeys.UserInterface.DependencyProperty,EmptyKeys.UserInterface.Data.Binding)">
            <summary>
            Sets the binding.
            </summary>
            <param name="property">The property.</param>
            <param name="binding">The binding.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObject.SetResourceReference(EmptyKeys.UserInterface.DependencyProperty,System.Object)">
            <summary>
            Sets the resource reference.
            </summary>
            <param name="property">The property.</param>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.DependencyObjectType">
            <summary>
            Implements cache for dependency object types 
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObjectType.FromSystemType(System.Type)">
            <summary>
            Returns dependency object type based on system type
            </summary>
            <param name="systemType">system type</param>
            <returns>dependency object type</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyObjectType.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyObjectType.SystemType">
            <summary>
            Gets the type of the system.
            </summary>
            <value>
            The type of the system.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyObjectType.BaseType">
            <summary>
            Gets the type of the base.
            </summary>
            <value>
            The type of the base.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyObjectType.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObjectType.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.DependencyObjectType"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObjectType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyObjectType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.DependencyProperty">
            <summary>
            Implements register methods and cache for dependency properties
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.DependencyProperty.UnsetValue">
            <summary>
            The unset value
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyProperty.Register(System.String,System.Type,System.Type,EmptyKeys.UserInterface.FrameworkPropertyMetadata)">
            <summary>
            Registers Dependency Property
            </summary>
            <param name="name">The name.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="metadata">The metadata.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,EmptyKeys.UserInterface.FrameworkPropertyMetadata)">
            <summary>
            Registers attached dependency property
            </summary>
            <param name="name">The name.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="metadata">The metadata.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyProperty.FromName(System.String,System.Type)">
            <summary>
            Get Dependency property from name
            </summary>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
            <returns></returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyProperty.RegisteredPropertiesCount">
            <summary>
            Gets the registered properties count.
            </summary>
            <value>
            The registered properties count.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyProperty.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyProperty.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
            <value>
            The type of the property.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyProperty.OwnerType">
            <summary>
            Gets the type of the owner.
            </summary>
            <value>
            The type of the owner.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyProperty.DefaultValue">
            <summary>
            Gets the default value.
            </summary>
            <value>
            The default value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyProperty.GlobalIndex">
            <summary>
            Gets the index of the global.
            </summary>
            <value>
            The index of the global.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyProperty.DefaultMetadata">
            <summary>
            Gets the default metadata.
            </summary>
            <value>
            The default metadata.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyProperty.#ctor(System.String,System.Type,System.Type,EmptyKeys.UserInterface.FrameworkPropertyMetadata)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.DependencyProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyProperty.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyProperty.AddOwner(System.Type)">
            <summary>
            Adds the owner.
            </summary>
            <param name="newOwnerType">The new owner.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Dependence Property already has this Owner Type.</exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs">
            <summary>
            Arguments for dependency property change event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs.NewValue">
            <summary>
            Gets or sets the new value.
            </summary>
            <value>
            The new value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs.OldValue">
            <summary>
            Gets or sets the old value.
            </summary>
            <value>
            The old value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs.Property">
            <summary>
            Gets or sets the property.
            </summary>
            <value>
            The property.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs.#ctor(System.Object,System.Object,EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> structure
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
            <param name="property">The property.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Documents.AddTextMemento">
            <summary>
            Implements Add text memento for undo/redo
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Documents.AddTextMemento.Index">
            <summary>
            Gets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Documents.AddTextMemento.Text">
            <summary>
            Gets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.AddTextMemento.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Documents.AddTextMemento"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.AddTextMemento.Restore(EmptyKeys.UserInterface.Documents.TextEditor)">
            <summary>
            Restores the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Documents.IUndoMemento`1">
            <summary>
            Describes generic undo memento interface
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.IUndoMemento`1.Restore(`0)">
            <summary>
            Restores the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Documents.RemoveTextMemento">
            <summary>
            Implements Remove text memento for undo/redo
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Documents.RemoveTextMemento.Index">
            <summary>
            Gets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Documents.RemoveTextMemento.Text">
            <summary>
            Gets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.RemoveTextMemento.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Documents.RemoveTextMemento"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.RemoveTextMemento.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Documents.RemoveTextMemento"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="text">The text.</param>
            <param name="setCaretToIndex">if set to <c>true</c> [set caret to index].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.RemoveTextMemento.Restore(EmptyKeys.UserInterface.Documents.TextEditor)">
            <summary>
            Restores the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="F:EmptyKeys.UserInterface.Documents.TextEditor.TextEditorProperty">
            <summary>
            The text editor property
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Documents.TextHelper">
            <summary>
            Implements helper methods for manipulating with text
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.TextHelper.BreakTextIntoLines(System.String,System.Int32,System.Int32)">
            <summary>
            Adds newline characters to a string so that it fits within a certain size.
            </summary>
            <param name="text">The text to be modified.</param>
            <param name="maximumCharactersPerLine">The maximum length of a single line of text.</param>
            <param name="maximumLines">The maximum number of lines to draw.</param>
            <returns>
            The new string, with newline characters if needed.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            maximumLines
            or
            maximumCharactersPerLine
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.TextHelper.BreakTextIntoLines(System.String,EmptyKeys.UserInterface.Media.FontBase,System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            Breaks the text into lines.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="maxWidth">The maximum width.</param>
            <param name="maximumLines">The maximum lines.</param>
            <param name="dpiScaleX">The dpi scale x.</param>
            <param name="dpiScaleY">The dpi scale y.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">maxWidth</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.TextHelper.Wrap(System.String,EmptyKeys.UserInterface.Media.FontBase,System.Single,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            Wraps the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="maxWidth">The maximum width.</param>
            <param name="maximumLines">The maximum lines.</param>
            <param name="dpiScaleX">The dpi scale x.</param>
            <param name="dpiScaleY">The dpi scale y.</param>
            <param name="useLayoutRounding">use layout rounding if true</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.TextHelper.BreakTextIntoLines(System.String,System.Int32)">
            <summary>
            Adds new-line characters to a string to make it fit.
            </summary>
            <param name="text">The text to be drawn.</param>
            <param name="maximumCharactersPerLine">The maximum length of a single line of text.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">maximumCharactersPerLine</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.TextHelper.BreakTextIntoList(System.String,EmptyKeys.UserInterface.Media.FontBase,System.Single,System.Single,System.Single)">
            <summary>
            Break text up into separate lines to make it fit.
            </summary>
            <param name="text">The text to be broken up.</param>
            <param name="font">The font used to measure the width of the text.</param>
            <param name="rowWidth">The maximum width of each line, in pixels.</param>
            <param name="dpiScaleX">The dpi scale x.</param>
            <param name="dpiScaleY">The dpi scale y.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">font</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">rowWidth</exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Documents.UndoManager`1">
            <summary>
            Implements Undo/Redo generic manager
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:EmptyKeys.UserInterface.Documents.UndoManager`1.UndoStack">
            <summary>
            Gets or sets the undo stack.
            </summary>
            <value>
            The undo stack.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Documents.UndoManager`1.RedoStack">
            <summary>
            Gets or sets the redo stack.
            </summary>
            <value>
            The redo stack.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Documents.UndoManager`1.UndoLimit">
            <summary>
            Gets or sets the undo limit.
            </summary>
            <value>
            The undo limit.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Documents.UndoManager`1.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            <c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.UndoManager`1.#ctor(`0,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Documents.UndoManager`1" /> class.
            </summary>
            <param name="target">The target.</param>
            <param name="limit">The limit.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.UndoManager`1.Store(EmptyKeys.UserInterface.Documents.IUndoMemento{`0})">
            <summary>
            Stores the specified memento.
            </summary>
            <param name="memento">The memento.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.UndoManager`1.Clear">
            <summary>
            Clears the history
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.UndoManager`1.Undo">
            <summary>
            Undo on target
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Documents.UndoManager`1.Redo">
            <summary>
            Redo on target
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.DragDrop">
            <summary>
            Implements Drag and Drop feature for ItemsControl (ListBox)
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.DragDrop.Instance">
            <summary>
            Gets the instance of DrapDrop
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.DragDrop.IsDragSourceProperty">
            <summary>
            The is drag source property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DragDrop.GetIsDragSource(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the is drag source.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DragDrop.SetIsDragSource(EmptyKeys.UserInterface.UIElement,System.Boolean)">
            <summary>
            Sets the is drag source.
            </summary>
            <param name="target">The target.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.DragDrop.IsDropTargetProperty">
            <summary>
            The is drop target property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DragDrop.GetIsDropTarget(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the is drop target.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.DragDrop.SetIsDropTarget(EmptyKeys.UserInterface.UIElement,System.Boolean)">
            <summary>
            Sets the is drop target.
            </summary>
            <param name="target">The target.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.DragDrop.IsDragDropInProgress">
            <summary>
            Gets a value indicating whether is drag and drop in progress.
            </summary>
            <value>
            <c>true</c> if drag and drop is in progress; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:EmptyKeys.UserInterface.DragDrop.DragStarting">
            <summary>
            Occurs when [drag starting].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.DragDrop.DropStarting">
            <summary>
            Occurs when [drop starting].
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.DragDrop.AllowRightMouseButton">
            <summary>
            Gets or sets value indicating whether right mouse button is allowed for drag and drop
            </summary>        
        </member>
        <member name="M:EmptyKeys.UserInterface.DragDrop.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.DragDrop"/> class from being created.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.DragDropEventArgs">
            <summary>
            Implements event arguments for drag and drop delegate
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.DragDropEventArgs.Data">
            <summary>
            Gets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DragDropEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EmptyKeys.UserInterface.DragDropEventArgs"/> is cancel.
            </summary>
            <value>
              <c>true</c> if cancel; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.DragDropEventArgs.MouseButton">
            <summary>
            Gets the mouse button
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.DragDropEventArgs.#ctor(System.Object,EmptyKeys.UserInterface.Input.MouseButton)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.DragDropEventArgs"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Duration">
            <summary>
            Implements structure for animation duration
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Duration.Automatic">
            <summary>
            Gets the automatic duration
            </summary>
            <value>
            The automatic duration
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Duration.Forever">
            <summary>
            Gets the forever duration
            </summary>
            <value>
            The forever duration
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Duration.HasTimeSpan">
            <summary>
            Gets a value indicating whether this instance has time span.
            </summary>
            <value>
            <c>true</c> if this instance has time span; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Duration.TimeSpan">
            <summary>
            Gets the time span.
            </summary>
            <value>
            The time span.
            </value>
            <exception cref="T:System.InvalidOperationException">This duration does not have TimeSpan</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Duration"/> structure.
            </summary>
            <param name="timeSpan">The time span.</param>
            <exception cref="T:System.ArgumentException">timeSpan</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_Implicit(System.TimeSpan)~EmptyKeys.UserInterface.Duration">
            <summary>
            Performs an implicit conversion from <see cref="P:EmptyKeys.UserInterface.Duration.TimeSpan"/> to <see cref="T:EmptyKeys.UserInterface.Duration"/>.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns>
            The result of the conversion.
            </returns>
            <exception cref="T:System.ArgumentException">timeSpan</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_Addition(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_Subtraction(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_Equality(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_Inequality(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_GreaterThan(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_GreaterThanOrEqual(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator &gt;=.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_LessThan(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_LessThanOrEqual(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator &lt;=.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.Compare(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Compares the specified t1 duration to t2
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.op_UnaryPlus(EmptyKeys.UserInterface.Duration)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="duration">The duration.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.Add(EmptyKeys.UserInterface.Duration)">
            <summary>
            Adds the specified duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.Subtract(EmptyKeys.UserInterface.Duration)">
            <summary>
            Subtracts the specified duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.Equals(System.Object)">
            <summary>
            Tests if this instance is equal to the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.Equals(EmptyKeys.UserInterface.Duration)">
            <summary>
            Tests if this instance is equal to the specified duration.
            </summary>
            <param name="duration">The duration.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.Equals(EmptyKeys.UserInterface.Duration,EmptyKeys.UserInterface.Duration)">
            <summary>
            Tests if the specified t1 duration is equal to t2 duration
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Duration.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.PropertyIndex">
            <summary>
            Gets or sets the index of the property.
            </summary>
            <value>
            The index of the property.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.LocalValue">
            <summary>
            Gets or sets the local value.
            </summary>
            <value>
            The local value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.ModifiedValue">
            <summary>
            Gets the modified value.
            </summary>
            <value>
            The modified value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.IsExpression">
            <summary>
            Gets a value indicating whether this instance is expression.
            </summary>
            <value>
            <c>true</c> if this instance is expression; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.IsAnimated">
            <summary>
            Gets a value indicating whether this instance is animated.
            </summary>
            <value>
            <c>true</c> if this instance is animated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.IsCoerced">
            <summary>
            Gets a value indicating whether this instance is coerced.
            </summary>
            <value>
            <c>true</c> if this instance is coerced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.IsLocal">
            <summary>
            Gets a value indicating whether this instance is local.
            </summary>
            <value>
              <c>true</c> if this instance is local; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EffectiveValueEntry.HasModifiers">
            <summary>
            Gets a value indicating whether this instance has modifiers.
            </summary>
            <value>
            <c>true</c> if this instance has modifiers; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.EffectiveValueEntry.#ctor(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.EffectiveValueEntry"/> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EffectiveValueEntry.#ctor(EmptyKeys.UserInterface.DependencyProperty,EmptyKeys.UserInterface.ValueSource)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.EffectiveValueEntry"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="valueSource">The value source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EffectiveValueEntry.#ctor(EmptyKeys.UserInterface.DependencyProperty,EmptyKeys.UserInterface.ValueSource,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.EffectiveValueEntry"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="valueSource">The value source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EffectiveValueEntry.SetCoercedValue(System.Object)">
            <summary>
            Sets the coerced value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EffectiveValueEntry.SetExpressionValue(System.Object)">
            <summary>
            Sets the expression value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EffectiveValueEntry.EnsureModifiedValue">
            <summary>
            Ensures the modified value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ModifiedValue.BaseValue">
            <summary>
            Gets or sets the base value.
            </summary>
            <value>
            The base value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.ModifiedValue.ExpressionValue">
            <summary>
            Gets or sets the expression value.
            </summary>
            <value>
            The expression value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.ModifiedValue.AnimatedValue">
            <summary>
            Gets or sets the animated value.
            </summary>
            <value>
            The animated value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.ModifiedValue.CoercedValue">
            <summary>
            Gets or sets the coerced value.
            </summary>
            <value>
            The coerced value.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.ModifiedValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.ModifiedValue"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.ModifiedValue.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.ModifiedValue"/> class.
            </summary>
            <param name="baseValue">The base value.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.EventHandlersStore">
            <summary>
            Implements container for Event Handlers
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.EventHandlersStore.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Delegate"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:System.Delegate"/>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.EventHandlersStore.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventHandlersStore.AddRoutedEventHandler(EmptyKeys.UserInterface.RoutedEvent,System.Delegate)">
            <summary>
            Adds the routed event handler.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventHandlersStore.Contains(EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Determines whether [contains] [the specified routed event].
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventHandlersStore.RemoveRoutedEventHandler(EmptyKeys.UserInterface.RoutedEvent,System.Delegate)">
            <summary>
            Removes the routed event handler.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.EventManager">
            <summary>
            Implements routed event registering methods and hold class handlers
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventManager.RegisterRoutedEvent(System.String,EmptyKeys.UserInterface.RoutingStrategy,System.Type,System.Type)">
            <summary>
            Registers the routed event.
            </summary>
            <param name="name">The name.</param>
            <param name="routingStrategy">The routing strategy.</param>
            <param name="handlerType">Type of the handler.</param>
            <param name="ownerType">Type of the owner.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventManager.RegisterClassHandler(System.Type,EmptyKeys.UserInterface.RoutedEvent,System.Delegate)">
            <summary>
            Registers the class handler.
            </summary>
            <param name="classType">Type of the class.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="handler">The handler.</param>
            <exception cref="T:System.ArgumentNullException">
            classType
            or
            routedEvent
            or
            handler
            </exception>
            <exception cref="T:System.ArgumentException">Wrong classType. Only types based on UIElement are allowed.</exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.EventRoute">
            <summary>
            Implements collection of route items for routed event
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventRoute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.EventRoute"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventRoute.Add(System.Object,System.Delegate)">
            <summary>
            Adds the specified target.
            </summary>
            <param name="target">The target.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventRoute.InvokeHandlers(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Invokes the handlers.
            </summary>
            <param name="source">The source.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventRoute.Clear">
            <summary>
            Clears this route.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.EventTrigger">
            <summary>
            Implements Event Trigger for triggering actions on routed event
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.GetCommand(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the command.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.SetCommand(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Input.ICommand)">
            <summary>
            Sets the command.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.EventTrigger.CommandProperty">
            <summary>
            The command path property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.GetCommandPath(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the command path.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.SetCommandPath(EmptyKeys.UserInterface.DependencyObject,System.String)">
            <summary>
            Sets the command path.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.EventTrigger.CommandPathProperty">
            <summary>
            The command path property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.GetCommandParameter(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the command parameter.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.SetCommandParameter(EmptyKeys.UserInterface.DependencyObject,System.Object)">
            <summary>
            Sets the command parameter.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.EventTrigger.CommandParameterProperty">
            <summary>
            The command parameter property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.EventTrigger.RoutedEvent">
            <summary>
            Gets or sets the routed event.
            </summary>
            <value>
            The routed event.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.EventTrigger.Actions">
            <summary>
            Gets the actions.
            </summary>
            <value>
            The actions.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.#ctor(EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.EventTrigger"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.#ctor(EmptyKeys.UserInterface.RoutedEvent,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.EventTrigger"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.EventTrigger.EventTriggerSourceListener.CommandProperty">
            <summary>
            The command property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.EventTrigger.EventTriggerSourceListener.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.AddAction(EmptyKeys.UserInterface.TriggerAction)">
            <summary>
            Adds the action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.EventTrigger.RemoveAction(EmptyKeys.UserInterface.TriggerAction)">
            <summary>
            Removes the action.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.FontHelper">
            <summary>
            Implements Font extension methods
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.FontManager">
            <summary>
            Implements application font manager
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.FontManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FontManager.DefaultFont">
            <summary>
            The default font
            </summary>
            <value>
            The default font.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FontManager.DefaultFontFamily">
            <summary>
            The default font family
            </summary>
            <value>
            The default font family.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FontManager.DefaultFontSize">
            <summary>
            The default font size
            </summary>
            <value>
            The default size of the font.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FontManager.LoadScaledFonts">
            <summary>
            Gets or sets a value indicating whether [scale fonts].
            </summary>
            <value>
              <c>true</c> if [scale fonts]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.FontManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.FontManager"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.FontManager.AddFont(System.String,System.Single,EmptyKeys.UserInterface.Media.FontStyle,System.String)">
            <summary>
            Adds the font.
            </summary>
            <param name="familyName">Name of the family.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
            <param name="assetName">Name of the asset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.FontManager.GetFont(System.String,System.Single,EmptyKeys.UserInterface.Media.FontStyle)">
            <summary>
            Gets the font.
            </summary>
            <param name="familyName">Name of the family.</param>
            <param name="size">The size.</param>
            <param name="style">The style.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.FontManager.LoadFonts(System.Object,System.String)">
            <summary>
            Loads the fonts.
            </summary>
            <param name="contentManager">The content manager.</param>
            <param name="basePath">The base path.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.FontManager.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.FrameworkPropertyMetadata">
            <summary>
            Dependency property metadata
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            The default value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.AffectsArrange">
            <summary>
            Gets or sets a value indicating whether [affects arrange].
            </summary>
            <value>
              <c>true</c> if [affects arrange]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.AffectsMeasure">
            <summary>
            Gets or sets a value indicating whether [affects measure].
            </summary>
            <value>
              <c>true</c> if [affects measure]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.AffectsParentArrange">
            <summary>
            Gets or sets a value indicating whether [affects parent arrange].
            </summary>
            <value>
            <c>true</c> if [affects parent arrange]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.AffectsParentMeasure">
            <summary>
            Gets or sets a value indicating whether [affects parent measure].
            </summary>
            <value>
            <c>true</c> if [affects parent measure]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.IsInherited">
            <summary>
            Gets or sets a value indicating whether this instance is inherited.
            </summary>
            <value>
            <c>true</c> if this instance is inherited; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.IsNotDataBindable">
            <summary>
            Gets or sets a value indicating whether this instance is not data bind-able.
            </summary>
            <value>
            <c>true</c> if this instance is not data bind-able; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.BindsTwoWayByDefault">
            <summary>
            Gets or sets a value indicating whether [binds two way by default].
            </summary>
            <value>
            <c>true</c> if [binds two way by default]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.AffectsRender">
            <summary>
            Gets or sets a value indicating whether [affects render].
            </summary>
            <value>
              <c>true</c> if [affects render]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.PropertyChangedCallback">
            <summary>
            Gets or sets the property changed callback.
            </summary>
            <value>
            The property changed callback.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.FrameworkPropertyMetadata.CoerceValueCallback">
            <summary>
            Gets or sets the coerce value callback.
            </summary>
            <value>
            The coerce value callback.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.FrameworkPropertyMetadata.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.FrameworkPropertyMetadata"/> class.
            </summary>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.FrameworkPropertyMetadata.#ctor(System.Object,EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.FrameworkPropertyMetadata"/> class.
            </summary>
            <param name="defaultValue">The default value.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.FrameworkPropertyMetadata.#ctor(System.Object,EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions,EmptyKeys.UserInterface.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.FrameworkPropertyMetadata"/> class.
            </summary>
            <param name="defaultValue">The default value.</param>
            <param name="options">The options.</param>
            <param name="propertyChangedCallback">The property changed callback.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.FrameworkPropertyMetadata.#ctor(System.Object,EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions,EmptyKeys.UserInterface.PropertyChangedCallback,EmptyKeys.UserInterface.CoerceValueCallback)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.FrameworkPropertyMetadata"/> class.
            </summary>
            <param name="defaultValue">The default value.</param>
            <param name="options">The options.</param>
            <param name="propertyChangedCallback">The property changed callback.</param>
            <param name="coerceValueCallback">The coerce value callback.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions">
            <summary>
            Metadata options of Dependency Properties describing action/behavior, when property is changed, user gets the value or binds property
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.AffectsArrange">
            <summary>
            The affects arrange
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.AffectsMeasure">
            <summary>
            The affects measure
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.AffectsParentArrange">
            <summary>
            The affects parent arrange
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.AffectsParentMeasure">
            <summary>
            The affects parent measure
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.AffectsRender">
            <summary>
            The affects render
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.Inherits">
            <summary>
            The inherits
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.NotDataBindable">
            <summary>
            Data are not bind-able
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault">
            <summary>
            The binds two way by default
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Freezable">
            <summary>
            Implements abstract base of object, which can freeze its data (user can't change values)
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Freezable.IsFrozen">
            <summary>
            Gets a value indicating whether this instance is frozen.
            </summary>
            <value>
              <c>true</c> if this instance is frozen; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Freezable.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Freezable.RenderDirty">
            <summary>
            Gets or sets a value indicating whether [render dirty].
            </summary>
            <value>
              <c>true</c> if [render dirty]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:EmptyKeys.UserInterface.Freezable.Changed">
            <summary>
            Occurs when [changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Freezable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Freezable"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Freezable.Freeze">
            <summary>
            Freezes this instance.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Freezable.OnPropertyChanged(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.GridLength">
            <summary>
            Implements special length structure for Grid
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.GridLength.Auto">
            <summary>
            Gets the Auto value for Grid Length
            </summary>
            <value>
            Auto value
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.GridLength.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.GridLength.GridUnitType">
            <summary>
            Gets the type of the grid unit.
            </summary>
            <value>
            The type of the grid unit.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.GridLength.IsAbsolute">
            <summary>
            Gets a value indicating whether this instance is absolute value in pixels
            </summary>
            <value>
            <c>true</c> if this instance is absolute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.GridLength.IsAuto">
            <summary>
            Gets a value indicating whether this instance is automatic value
            </summary>
            <value>
            <c>true</c> if this instance is automatic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.GridLength.IsStar">
            <summary>
            Gets a value indicating whether this instance is star (fill the rest value)
            </summary>
            <value>
              <c>true</c> if this instance is star; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.GridLength.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.GridLength"/> structure
            </summary>
            <param name="pixels">The pixels.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.GridLength.#ctor(System.Single,EmptyKeys.UserInterface.GridUnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.GridLength"/> structure
            </summary>
            <param name="value">The value.</param>
            <param name="valueType">Type of the value.</param>
            <exception cref="T:System.ArgumentException">
            Value can't be NaN!
            or
            Value can't be infinity!
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.GridLength.op_Equality(EmptyKeys.UserInterface.GridLength,EmptyKeys.UserInterface.GridLength)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="gridLength1">The grid length.</param>
            <param name="gridLength2">The grid length.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.GridLength.op_Inequality(EmptyKeys.UserInterface.GridLength,EmptyKeys.UserInterface.GridLength)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="gridLength1">The grid length.</param>
            <param name="gridLength2">The grid length.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.GridLength.Equals(EmptyKeys.UserInterface.GridLength)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.GridLength.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.GridLength.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.GridLength.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.GridUnitType">
            <summary>
            Types of value of GridLength
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.GridUnitType.Auto">
            <summary>
            The automatic sizing
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.GridUnitType.Pixel">
            <summary>
            The pixel
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.GridUnitType.Star">
            <summary>
            The star
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.HorizontalAlignment">
            <summary>
            Horizontal Alignment of control inside parent control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.HorizontalAlignment.Center">
            <summary>
            The center
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.HorizontalAlignment.Left">
            <summary>
            The left
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.HorizontalAlignment.Right">
            <summary>
            The right
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.HorizontalAlignment.Stretch">
            <summary>
            The stretch
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.ImageManager">
            <summary>
            Implements image management for any control using textures/images (Image, ImageBrush)
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.ImageManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.ImageManager.AddImage(System.String)">
            <summary>
            Adds the image.
            </summary>
            <param name="imageAsset">The image asset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.ImageManager.GetImage(System.String)">
            <summary>
            Gets the image.
            </summary>
            <param name="assetName">Name of the asset.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.ImageManager.LoadImages(System.Object,System.String)">
            <summary>
            Loads the images.
            </summary>
            <param name="contentManager">The content manager.</param>
            <param name="basePath">The base path.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.ImageManager.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.ButtonInputListener">
            <summary>
            Implements listener for any button like input (bool state) with repeating capabilities
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.ButtonInputListener.ButtonDownEvent">
            <summary>
            Occurs when [button down event].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.ButtonInputListener.ButtonUpEvent">
            <summary>
            Occurs when [button up event].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.ButtonInputListener.#ctor(EmptyKeys.UserInterface.Input.InputListener{System.Boolean}.InputListenerGetCurrentValueDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.ButtonInputListener"/> class.
            </summary>
            <param name="delegateCurrentValue">The delegate current value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.ButtonInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs">
            <summary>
            Arguments for Can Execute routed event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs.Parameter">
            <summary>
            Gets the parameter.
            </summary>
            <value>
            The parameter.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs.CanExecute">
            <summary>
            Gets or sets a value indicating whether this instance can execute.
            </summary>
            <value>
            <c>true</c> if this instance can execute; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs.ContinueRouting">
            <summary>
            Gets or sets a value indicating whether [continue routing].
            </summary>
            <value>
              <c>true</c> if [continue routing]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs.#ctor(EmptyKeys.UserInterface.Input.ICommand,System.Object,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="parameter">The parameter.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.CommandBinding">
            <summary>
            Implements binding between routed command and event handler
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.CommandBinding.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.CommandBinding.PreviewExecuted">
            <summary>
            Occurs when [preview executed].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.CommandBinding.Executed">
            <summary>
            Occurs when [executed].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.CommandBinding.PreviewCanExecute">
            <summary>
            Occurs when [preview can execute].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.CommandBinding.CanExecute">
            <summary>
            Occurs when [can execute].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.CommandBinding"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandBinding.#ctor(EmptyKeys.UserInterface.Input.ICommand,EmptyKeys.UserInterface.Input.ExecutedRoutedEventHandler,EmptyKeys.UserInterface.Input.CanExecuteRoutedEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.CommandBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="executedHandler">The executed handler.</param>
            <param name="canExecuteHandler">The can execute handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandBinding.OnCanExecute(System.Object,EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Called when [can execute].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandBinding.OnExecuted(System.Object,EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called when [executed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.CommandHelpers">
            <summary>
            Implements cache for commands and command register methods
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.RegisterClassInputBinding(System.Type,EmptyKeys.UserInterface.Input.InputBinding)">
            <summary>
            Registers the class input binding.
            </summary>
            <param name="controlType">Type of the control.</param>
            <param name="inputBinding">The input binding.</param>
            <exception cref="T:System.ArgumentNullException">
            controlType
            or
            inputBinding
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.RegisterClassCommandBinding(System.Type,EmptyKeys.UserInterface.Input.CommandBinding)">
            <summary>
            Registers the class command binding.
            </summary>
            <param name="controlType">Type of the control.</param>
            <param name="commandBinding">The command binding.</param>
            <exception cref="T:System.ArgumentNullException">
            Control Type
            or
            Command Binding
            </exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CommandHelpers.PreviewExecutedEvent">
            <summary>
            The preview executed event
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.AddPreviewExecutedHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.ExecutedRoutedEventHandler)">
            <summary>
            Adds the preview executed handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.RemovePreviewExecutedHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.ExecutedRoutedEventHandler)">
            <summary>
            Removes the preview executed handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CommandHelpers.ExecutedEvent">
            <summary>
            The executed event
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.AddExecutedHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.ExecutedRoutedEventHandler)">
            <summary>
            Adds the preview executed handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.RemoveExecutedHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.ExecutedRoutedEventHandler)">
            <summary>
            Removes the preview executed handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CommandHelpers.PreviewCanExecuteEvent">
            <summary>
            The preview can execute event
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.AddPreviewCanExecuteHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.CanExecuteRoutedEventHandler)">
            <summary>
            Adds the preview can execute handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.RemovePreviewCanExecuteHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.CanExecuteRoutedEventHandler)">
            <summary>
            Removes the preview can execute handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CommandHelpers.CanExecuteEvent">
            <summary>
            The can execute event
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.AddCanExecuteHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.CanExecuteRoutedEventHandler)">
            <summary>
            Adds the can execute handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.RemoveCanExecuteHandler(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.CanExecuteRoutedEventHandler)">
            <summary>
            Removes the can execute handler.
            </summary>
            <param name="element">The element.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.ExecuteCommandSource(EmptyKeys.UserInterface.Input.ICommandSource)">
            <summary>
            Executes the command source.
            </summary>
            <param name="commandSource">The command source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.CommandHelpers.TranslateInput(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Input.InputEventArgs)">
            <summary>
            Translates the input.
            </summary>
            <param name="elem">The elem.</param>
            <param name="inputArgs">The <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.CursorType">
            <summary>
            Describes mouse cursor types
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.None">
            <summary>
            Cursor not displayed
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.No">
            <summary>
            No Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Arrow">
            <summary>
            Arrow Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.AppStarting">
            <summary>
            Application Starting Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Cross">
            <summary>
            Cross-hair Cursor
            </summary>        
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Help">
            <summary>
            Help Cursor
            </summary>        	
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.IBeam">
            <summary>
            I-Beam Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.SizeAll">
            <summary>
            Size All Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.SizeNESW">
            <summary>
            Size NE-SW Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.SizeNS">
            <summary>
            Size NS Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.SizeNWSE">
            <summary>
            Size NW-SE Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.SizeWE">
            <summary>
            Size W-E Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.UpArrow">
            <summary>
            Up Arrow Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Wait">
            <summary>
            Wait Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Hand">
            <summary>
            Hand Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Pen">
            <summary>
            Pen Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollNS">
            <summary>
            Scroll NS Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollWE">
            <summary>
            Scroll WE Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollAll">
            <summary>
            Scroll All Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollN">
            <summary>
            Scroll N Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Scroll">
            <summary>
            Scroll S Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollW">
            <summary>
            Scroll W Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollE">
            <summary>
            Scroll E Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollNW">
            <summary>
            Scroll NW Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollNE">
            <summary>
            Scroll NE Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollSW">
            <summary>
            Scroll SW Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ScrollSE">
            <summary>
            Scroll SE Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.ArrowCD">
            <summary>
            Arrow CD Cursor
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom1">
            <summary>
            The custom1
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom2">
            <summary>
            The custom2
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom3">
            <summary>
            The custom3
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom4">
            <summary>
            The custom4
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom5">
            <summary>
            The custom5
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom6">
            <summary>
            The custom6
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom7">
            <summary>
            The custom7
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom8">
            <summary>
            The custom8
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom9">
            <summary>
            The custom9
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom10">
            <summary>
            The custom10
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom11">
            <summary>
            The custom11
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom12">
            <summary>
            The custom12
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom13">
            <summary>
            The custom13
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom14">
            <summary>
            The custom14
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom15">
            <summary>
            The custom15
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.CursorType.Custom16">
            <summary>
            The custom16
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseWheelEventHandler">
            <summary>
            Event handler for mouse wheel events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseButtonEventHandler">
            <summary>
            Event handler for mouse button events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseEventHandler">
            <summary>
            Event handler for generic mouse events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputEventHandler">
            <summary>
            Event handler for generic input events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputListenerDelegate">
            <summary>
            Event handler for generic input listener events
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyInputListenerDelegate">
            <summary>
            Event handler for key input events
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseWheelDelegate">
            <summary>
            Event handler for mouse wheel listener
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyEventHandler">
            <summary>
            Event handler for key listener
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyboardEventHandler">
            <summary>
            Event handler for generic keyboard events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyboardEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadEventHandler">
            <summary>
            Event handler for generic gamepad events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadButtonEventHandler">
            <summary>
            Event handler for gamepad button events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadTriggerDelegate">
            <summary>
            Event handler for gamepad trigger listener
            </summary>
            <param name="trigger">The trigger.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.TouchEventHandler">
            <summary>
            Event handler for generic touch events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.TouchGestureEventHandler">
            <summary>
            Event handler for touch gesture events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GestureDelegate">
            <summary>
            Event handler for touch gesture input listener
            </summary>
            <param name="gestureType">Type of gesture</param>
            <param name="position">The position</param>
            <param name="delta">Delta</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MoveDelegate">
            <summary>
            Event handler for generic move listener
            </summary>
            <param name="move">The move.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadMoveEventHandler">
            <summary>
            Event handler for gamepad move events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadTriggerEventHandler">
            <summary>
            Event handler for gamepad trigger events
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.ExecutedRoutedEventHandler">
            <summary>
            Event handler for routed commands
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventHandler">
            <summary>
            Event handler for routed commands
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs">
            <summary>
            Arguments for Execute Routed event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs.Parameter">
            <summary>
            Gets the parameter.
            </summary>
            <value>
            The parameter.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs.#ctor(EmptyKeys.UserInterface.Input.ICommand,System.Object,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs" /> class.
            </summary>
            <param name="command">The command.</param>
            <param name="parameter">The parameter.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.Gamepad">
            <summary>
            Implements Game Pad device and stores input listeners
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Gamepad.GamepadDownEvent">
            <summary>
            The game pad down event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Gamepad.PreviewGamepadDownEvent">
            <summary>
            The preview Game pad down event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Gamepad.PreviewGamepadUpEvent">
            <summary>
            The preview Game pad up event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Gamepad.GamepadUpEvent">
            <summary>
            The Game pad up event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Gamepad.PreviewGamepadMoveEvent">
            <summary>
            The preview game pad move event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Gamepad.GamepadMoveEvent">
            <summary>
            The preview game pad move event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Gamepad.PreviewGamepadTriggerEvent">
            <summary>
            The preview game pad trigger event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Gamepad.GamepadTriggerEvent">
            <summary>
            The game pad trigger event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Gamepad.FocusedElement">
            <summary>
            Gets the focused element.
            </summary>
            <value>
            The focused element.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Gamepad.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.Gamepad"/> class.
            </summary>
            <param name="playerNumber">The player number.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Gamepad.Update(EmptyKeys.UserInterface.Controls.UIRoot,System.Double,System.Double)">
            <summary>
            Updates the specified UI container.
            </summary>
            <param name="uiContainer">The UI container.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="totalGameTime">The total game time.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadBinding">
            <summary>
            Implements binding for Game Pad input and Input Gesture
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadBinding.GamepadInputProperty">
            <summary>
            The input property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadBinding.GamepadInput">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadBinding.Gesture">
            <summary>
            Gets or sets the gesture.
            </summary>
            <value>
            The gesture.
            </value>
            <exception cref="T:System.ArgumentException">Wrong Input Gesture type. Expected GamepadGesture.</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadBinding"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadBinding.#ctor(EmptyKeys.UserInterface.Input.ICommand,EmptyKeys.UserInterface.Input.GamepadGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="gesture">The gesture.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadBinding.#ctor(EmptyKeys.UserInterface.Input.ICommand,EmptyKeys.UserInterface.Input.GamepadInput)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="input">The input.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs">
            <summary>
            Arguments for game pad button event 
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs.ChangeButton">
            <summary>
            Gets the change button.
            </summary>
            <value>
            The change button.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs.InputListener">
            <summary>
            Gets or sets the input listener.
            </summary>
            <value>
            The input listener.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs.#ctor(EmptyKeys.UserInterface.Input.GamepadInput,EmptyKeys.UserInterface.Input.GamePadStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> class.
            </summary>
            <param name="button">The button.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs.#ctor(EmptyKeys.UserInterface.Input.GamepadInput,EmptyKeys.UserInterface.Input.GamePadStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> class.
            </summary>
            <param name="button">The button.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadDPadInputListener">
            <summary>
            Implements input listener for gamepad dpad.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadDPadInputListener.StartingRepeatDelay">
            <summary>
            The starting repeat delay - default value
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadDPadInputListener.RepeatTime">
            <summary>
            The repeat time - default value
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadDPadInputListener.repeatEnabled">
            <summary>
            The repeat enabled
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.GamepadDPadInputListener.MoveEvent">
            <summary>
            Occurs when [move event].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadDPadInputListener.#ctor(EmptyKeys.UserInterface.Input.InputListener{EmptyKeys.UserInterface.PointF}.InputListenerGetCurrentValueDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadDPadInputListener"/> class.
            </summary>
            <param name="delegateCurrentValue">The delegate current value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadDPadInputListener.EnableRepeat(System.Double,System.Double)">
            <summary>
            Enables the repeat feature on this listener, listener will repeat dpad button state
            </summary>
            <param name="delay">The delay.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadDPadInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadEventArgs">
            <summary>
            Implements base arguments for game pad events
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadEventArgs.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadEventArgs.#ctor(EmptyKeys.UserInterface.Input.GamePadStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadEventArgs"/> class.
            </summary>
            <param name="state">The state.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadEventArgs.#ctor(EmptyKeys.UserInterface.Input.GamePadStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadEventArgs"/> class.
            </summary>
            <param name="state">The state.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadGesture">
            <summary>
            Implements game pad gesture
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadGesture.GamepadInput">
            <summary>
            Gets the game pad input.
            </summary>
            <value>
            The game pad input.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadGesture.#ctor(EmptyKeys.UserInterface.Input.GamepadInput)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadGesture"/> class.
            </summary>
            <param name="gamepadInput">The game pad input.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadGesture.Matches(EmptyKeys.UserInterface.Input.InputEventArgs)">
            <summary>
            Matches input gesture
            </summary>
            <param name="args">The <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs" /> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadHelp">
            <summary>
            Implements GamepadHelp class to support specific help on each control
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.GetTargetName(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Get Target Name
            </summary>
            <param name="obj">dependency object</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.SetTargetName(EmptyKeys.UserInterface.DependencyObject,System.String)">
            <summary>
            Set Target Name
            </summary>
            <param name="obj">dependency object</param>
            <param name="value">value</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadHelp.TargetNameProperty">
            <summary>
            Target Name Property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.GetTarget(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Get Target
            </summary>
            <param name="obj">dependency object</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.SetTarget(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Set Target
            </summary>
            <param name="obj">dependency object</param>
            <param name="value">value</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadHelp.TargetProperty">
            <summary>
            Target Property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.GetTabIndexLeft(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets tab index left property
            </summary>
            <param name="obj">dependency object</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.SetTabIndexLeft(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets tab index left property
            </summary>
            <param name="obj">dependency object</param>
            <param name="value">value</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadHelp.TabIndexLeftProperty">
            <summary>
            Tab Index Left property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.GetTabIndexRight(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets tab index right property
            </summary>
            <param name="obj">dependency object</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.SetTabIndexRight(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets tab index right property
            </summary>
            <param name="obj">dependency object</param>
            <param name="value">value</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadHelp.TabIndexRightProperty">
            <summary>
            Tab Index Right property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.GetTabIndexUp(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets tab index up property
            </summary>
            <param name="obj">dependency object</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.SetTabIndexUp(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets tab index up property
            </summary>
            <param name="obj">dependency object</param>
            <param name="value">value</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadHelp.TabIndexUpProperty">
            <summary>
            Tab Index Up property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.GetTabIndexDown(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets tab index down property
            </summary>
            <param name="obj">dependency object</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadHelp.SetTabIndexDown(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets tab index down property
            </summary>
            <param name="obj">dependency object</param>
            <param name="value">value</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadHelp.TabIndexDownProperty">
            <summary>
            Tab Index Down property
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadInput">
            <summary>
            Enumeration of all types of game pad input
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.AButton">
            <summary>
            A button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.BButton">
            <summary>
            The b button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.CButton">
            <summary>
            The c button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.DButton">
            <summary>
            The d button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.LeftShoulderButton">
            <summary>
            The left shoulder button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.RightShoulderButton">
            <summary>
            The right shoulder button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.LeftStickButton">
            <summary>
            The left stick button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.RightStickButton">
            <summary>
            The right stick button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.SelectButton">
            <summary>
            The select button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.StartButton">
            <summary>
            The start button
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.DPad">
            <summary>
            The d pad
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.LeftThumbStick">
            <summary>
            The left thumb stick
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.RightThumbStick">
            <summary>
            The right thumb stick
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.RightTrigger">
            <summary>
            The right trigger
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.GamepadInput.LeftTrigger">
            <summary>
            The left trigger
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs">
            <summary>
            Arguments for game pad move event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs.MoveInput">
            <summary>
            Gets the move input.
            </summary>
            <value>
            The move input.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs.MoveVector">
            <summary>
            Gets the move vector.
            </summary>
            <value>
            The move vector.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs.InputListener">
            <summary>
            Gets or sets the input listener. This is used for DPad only to support repeat.
            </summary>
            <value>
            The input listener.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs.#ctor(EmptyKeys.UserInterface.Input.GamepadInput,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Input.GamePadStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs" /> class.
            </summary>
            <param name="input">The input.</param>
            <param name="move">The move.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs.#ctor(EmptyKeys.UserInterface.Input.GamepadInput,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Input.GamePadStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs" /> class.
            </summary>
            <param name="input">The input.</param>
            <param name="move">The move.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadMoveInputListener">
            <summary>
            Implements input listener for gamepad move events
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.GamepadMoveInputListener.MoveEvent">
            <summary>
            Occurs when [move event].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadMoveInputListener.#ctor(EmptyKeys.UserInterface.Input.InputListener{EmptyKeys.UserInterface.PointF}.InputListenerGetCurrentValueDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveInputListener"/> class.
            </summary>
            <param name="delegateCurrentValue">The delegate current value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadMoveInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs">
            <summary>
            Arguments for game pad trigger event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs.Trigger">
            <summary>
            Gets the move input.
            </summary>
            <value>
            The move input.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs.TriggerValue">
            <summary>
            Gets the move vector.
            </summary>
            <value>
            The move vector.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs.#ctor(EmptyKeys.UserInterface.Input.GamepadInput,System.Single,EmptyKeys.UserInterface.Input.GamePadStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs" /> class.
            </summary>
            <param name="trigger">The trigger.</param>
            <param name="triggerValue">The trigger value.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs.#ctor(EmptyKeys.UserInterface.Input.GamepadInput,System.Single,EmptyKeys.UserInterface.Input.GamePadStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs" /> class.
            </summary>
            <param name="trigger">The trigger.</param>
            <param name="triggerValue">The trigger value.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.GamepadTriggerInputListener">
            <summary>
            Implements input listener for game pad trigger
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.GamepadTriggerInputListener.GamepadTriggerChanged">
            <summary>
            Occurs when [game pad trigger changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadTriggerInputListener.#ctor(EmptyKeys.UserInterface.Input.InputListener{System.Single}.InputListenerGetCurrentValueDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelInputListener"/> class.
            </summary>
            <param name="delegateCurrentValue">The delegate current value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.GamepadTriggerInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.ICommand">
            <summary>
            Command Interface
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.ICommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.ICommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.ICommandSource">
            <summary>
            Command Source interface
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.ICommandSource.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.ICommandSource.CommandParameter">
            <summary>
            Gets the command parameter.
            </summary>
            <value>
            The command parameter.
            </value>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.ICursorService">
            <summary>
            Describes Cursor Service for changing cursor type
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.ICursorService.SetCursorType(EmptyKeys.UserInterface.Input.CursorType)">
            <summary>
            Sets the type of the cursor.
            </summary>
            <param name="cursorType">Type of the cursor.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.IInputListener">
            <summary>
            Input Listener interface
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.IInputListener.Update(System.Double)">
            <summary>
            Updates this instance.
            </summary>
            <param name="elapsedGameTime">The elapsed game time.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputBinding">
            <summary>
            Implements binding between Input Gesture and command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.InputBinding.CommandProperty">
            <summary>
            The command property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputBinding.Command">
            <summary>
            Gets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.InputBinding.CommandParameterProperty">
            <summary>
            The command parameter property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputBinding.CommandParameter">
            <summary>
            Gets the command parameter.
            </summary>
            <value>
            The command parameter.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.InputBinding.IsRepeatEnabledProperty">
            <summary>
            The is repeat enabled property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputBinding.IsRepeatEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is repeat enabled.
            </summary>
            <value>
            <c>true</c> if this instance is repeat enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputBinding.Gesture">
            <summary>
            Gets or sets the gesture.
            </summary>
            <value>
            The gesture.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.InputBinding"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputBinding.#ctor(EmptyKeys.UserInterface.Input.ICommand,EmptyKeys.UserInterface.Input.InputGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.InputBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="gesture">The gesture.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputEventArgs">
            <summary>
            Base arguments for any input event arguments
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputEventArgs.Timestamp">
            <summary>
            Gets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputEventArgs.#ctor(System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs"/> class.
            </summary>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputEventArgs.#ctor(System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs"/> class.
            </summary>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputGesture">
            <summary>
            Abstract class for any Input Gesture
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputGesture.Matches(EmptyKeys.UserInterface.Input.InputEventArgs)">
            <summary>
            Matches the specified arguments.
            </summary>
            <param name="args">The <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputLanguageManager">
            <summary>
            Implements input language specific features
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputLanguageManager.Current">
            <summary>
            Gets the current instance
            </summary>
            <value>
            The current instance
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputLanguageManager.CurrentInputLanguage">
            <summary>
            Gets or sets the current input language.
            </summary>
            <value>
            The current input language.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputLanguageManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Input.InputLanguageManager"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputLanguageManager.GetCurrentKeyboardLayout">
            <summary>
            Gets the current keyboard layout.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputLanguageManager.AddKeyboardLayout(EmptyKeys.UserInterface.Input.KeyboardLayout,System.Globalization.CultureInfo)">
            <summary>
            Adds the keyboard layout.
            </summary>
            <param name="layout">The layout.</param>
            <param name="cultureInfo">The culture information.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputLanguageManager.RemoveKeyboardLayout(System.Globalization.CultureInfo)">
            <summary>
            Removes the keyboard layout.
            </summary>
            <param name="cultureInfo">The culture information.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputListener`1">
            <summary>
            Implements generic Input Listener
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.InputListener`1.getCurrentValue">
            <summary>
            The get current value
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.InputListener`1.currentValue">
            <summary>
            The current value
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.InputListener`1.inputGameTime">
            <summary>
            The input game time
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.InputListener`1.lastValue">
            <summary>
            The last value
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputListener`1.InputListenerGetCurrentValueDelegate">
            <summary>
            Input listener delegate for getting current value
            </summary>
            <returns></returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputListener`1.CurrentValue">
            <summary>
            Gets the current value.
            </summary>
            <value>
            The current value.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputListener`1.#ctor(EmptyKeys.UserInterface.Input.InputListener{`0}.InputListenerGetCurrentValueDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.InputListener`1"/> class.
            </summary>
            <param name="delegateCurrentValue">The delegate current value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputListener`1.Update(System.Double)">
            <summary>
            Updates this instance.
            </summary>
            <param name="elapsedGameTime">The elapsed game time.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputListener`1.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.InputManager">
            <summary>
            Implements application input manager for game pad, mouse, keyboard and touch
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputManager.GamepadDevice">
            <summary>
            Gets the game pad device.
            </summary>
            <value>
            The game pad device.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputManager.KeyboardDevice">
            <summary>
            Gets the keyboard device.
            </summary>
            <value>
            The keyboard device.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputManager.MouseDevice">
            <summary>
            Gets the mouse device.
            </summary>
            <value>
            The mouse device.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputManager.TouchDevice">
            <summary>
            Gets the touch device.
            </summary>
            <value>
            The touch device.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputManager.Current">
            <summary>
            Gets the current.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.InputManager.FocusedElement">
            <summary>
            Gets or sets the focused element.
            </summary>
            <value>
            The focused element.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Input.InputManager"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputManager.Update(EmptyKeys.UserInterface.Controls.UIRoot,System.Double)">
            <summary>
            Updates the specified UI root.
            </summary>
            <param name="uiRoot">The UI root.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputManager.Focus(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Focuses the specified input element.
            </summary>
            <param name="inputElement">The input element.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputManager.ClearFocus">
            <summary>
            Clears the focus.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputManager.NavigateTabNext(System.Boolean)">
            <summary>
            Navigates the tab - focus to the next tab stop
            </summary>
            <param name="messageBoxVisible">if set to <c>true</c> [message box visible].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputManager.NavigateTabPrevious(System.Boolean)">
            <summary>
            Navigates the tab - focus to the previous element
            </summary>
            <param name="messageBoxVisible">if set to <c>true</c> [message box visible].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.InputManager.NavigateTabIndex(System.Int32,System.Boolean)">
            <summary>
            Navigates to specific tab index
            </summary>
            <param name="tabIndex">tab index</param>
            <param name="messageBoxVisible">if set to <c>true</c> [message box visible].</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyBinding">
            <summary>
            Implements input binding for keyboard keys
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.KeyBinding.ModifiersProperty">
            <summary>
            The modifiers property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyBinding.Modifiers">
            <summary>
            Gets or sets the modifiers.
            </summary>
            <value>
            The modifiers.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.KeyBinding.KeyProperty">
            <summary>
            The key property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyBinding.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyBinding.Gesture">
            <summary>
            Gets or sets the gesture.
            </summary>
            <value>
            The gesture.
            </value>
            <exception cref="T:System.ArgumentException">Wrong Input Gesture type. Expected KeyGesture.</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyBinding"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyBinding.#ctor(EmptyKeys.UserInterface.Input.ICommand,EmptyKeys.UserInterface.Input.KeyGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="gesture">The gesture.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyBinding.#ctor(EmptyKeys.UserInterface.Input.ICommand,EmptyKeys.UserInterface.Input.KeyCode,EmptyKeys.UserInterface.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.Keyboard">
            <summary>
            Implements keyboard device and routed events
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Keyboard.PreviewKeyDownEvent">
            <summary>
            The preview key down event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Keyboard.KeyDownEvent">
            <summary>
            The key down event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Keyboard.PreviewKeyUpEvent">
            <summary>
            The preview key up event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Keyboard.KeyUpEvent">
            <summary>
            The key up event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Keyboard.Modifiers">
            <summary>
            Gets the modifiers.
            </summary>
            <value>
            The modifiers.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Keyboard.IsControlPressed">
            <summary>
            Gets a value indicating whether is control pressed.
            </summary>
            <value>
            <c>true</c> if is control pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Keyboard.IsShiftPressed">
            <summary>
            Gets a value indicating whether is shift pressed.
            </summary>
            <value>
            <c>true</c> if is shift pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Keyboard.IsAltPressed">
            <summary>
            Gets a value indicating whether is alt pressed.
            </summary>
            <value>
            <c>true</c> if is alt pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Keyboard.FocusedElement">
            <summary>
            Gets the focused element.
            </summary>
            <value>
            The focused element.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Keyboard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.Keyboard"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Keyboard.Update(EmptyKeys.UserInterface.Controls.UIRoot,System.Double,System.Double)">
            <summary>
            Updates all listeners
            </summary>
            <param name="uiContainer">The UI container.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="totalGameTime">The total game time.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Keyboard.ShowVirtualKeyboard">
            <summary>
            Shows the virtual keyboard.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Keyboard.HideVirtualKeyboard">
            <summary>
            Hides the virtual keyboard.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyboardEventArgs">
            <summary>
            Base arguments for all keyboard related event arguments
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyboardEventArgs.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyboardEventArgs.#ctor(EmptyKeys.UserInterface.Input.KeyboardStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyboardEventArgs"/> class.
            </summary>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyboardEventArgs.#ctor(EmptyKeys.UserInterface.Input.KeyboardStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyboardEventArgs"/> class.
            </summary>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyboardEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyboardLayout">
            <summary>
            Implements default keyboard layout
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.KeyboardLayout.keyboardShiftLayout">
            <summary>
            The keyboard shift layout
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.KeyboardLayout.keyboardLayout">
            <summary>
            The keyboard layout
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.KeyboardLayout.virtualKeyboardMap">
            <summary>
            The virtual keyboard map
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyboardLayout.VirtualKeyboardMap">
            <summary>
            Gets the virtual keyboard map.
            </summary>
            <value>
            The virtual keyboard map.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyboardLayout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyboardLayout"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyboardLayout.GetInputCharacter(EmptyKeys.UserInterface.Input.KeyCode,System.Boolean,System.Char@)">
            <summary>
            Gets the input character.
            </summary>
            <param name="keyCode">The key code.</param>
            <param name="isShiftKeyPressed">if set to <c>true</c> [is shift key pressed].</param>
            <param name="inputChar">The input character.</param>
            <returns>
            true if key code has mapping
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyEventArgs">
            <summary>
            Arguments for key event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyEventArgs.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyEventArgs.#ctor(EmptyKeys.UserInterface.Input.KeyCode,EmptyKeys.UserInterface.Input.KeyboardStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyEventArgs.#ctor(EmptyKeys.UserInterface.Input.KeyCode,EmptyKeys.UserInterface.Input.KeyboardStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyGesture">
            <summary>
            Implement gesture for keyboard keys
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyGesture.Modifiers">
            <summary>
            Gets the modifiers.
            </summary>
            <value>
            The modifiers.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyGesture.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyGesture.DisplayString">
            <summary>
            Gets the display string.
            </summary>
            <value>
            The display string.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyGesture.#ctor(EmptyKeys.UserInterface.Input.KeyCode)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyGesture.#ctor(EmptyKeys.UserInterface.Input.KeyCode,EmptyKeys.UserInterface.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyGesture.#ctor(EmptyKeys.UserInterface.Input.KeyCode,EmptyKeys.UserInterface.Input.ModifierKeys,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyGesture"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
            <param name="displayString">The display string.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyGesture.Matches(EmptyKeys.UserInterface.Input.InputEventArgs)">
            <summary>
            Matches input gesture
            </summary>
            <param name="args">The <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs" /> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.KeyInputListener">
            <summary>
            Implements input listener for keyboard keys
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.KeyInputListener.KeyDownEvent">
            <summary>
            Occurs when [key down event].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.KeyInputListener.KeyUpEvent">
            <summary>
            Occurs when [key up event].
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.KeyInputListener.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyInputListener.#ctor(EmptyKeys.UserInterface.Input.KeyCode,EmptyKeys.UserInterface.Input.KeyboardStateBase)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.KeyInputListener"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.KeyInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.ModifierKeys">
            <summary>
            Keyboard modifier keys
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.ModifierKeys.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.ModifierKeys.Alt">
            <summary>
            The alt
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.ModifierKeys.Control">
            <summary>
            The control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.ModifierKeys.Shift">
            <summary>
            The shift
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.ModifierKeys.Windows">
            <summary>
            The windows
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.Mouse">
            <summary>
            Implements mouse device and routed events
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.DoubleClickTime">
            <summary>
            The double click time (ms)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.DoubleClickDeltaX">
            <summary>
            The double click delta x (px)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.DoubleClickDeltaY">
            <summary>
            The double click delta y (px)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.PreviewMouseMoveEvent">
            <summary>
            The preview mouse move event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.MouseMoveEvent">
            <summary>
            The mouse move event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.MouseDownEvent">
            <summary>
            The mouse down event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.PreviewMouseDownEvent">
            <summary>
            The preview mouse down event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.PreviewMouseUpEvent">
            <summary>
            The preview mouse up event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.MouseUpEvent">
            <summary>
            The mouse up event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.PreviewMouseWheelEvent">
            <summary>
            The preview mouse wheel event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.MouseWheelEvent">
            <summary>
            The mouse wheel event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.MouseLeaveEvent">
            <summary>
            The mouse leave event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Mouse.MouseEnterEvent">
            <summary>
            The mouse enter event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Mouse.MouseOverElement">
            <summary>
            Gets the mouse over element.
            </summary>
            <value>
            The mouse over element.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Mouse.Captured">
            <summary>
            Gets the captured.
            </summary>
            <value>
            The captured.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Mouse.CursorType">
            <summary>
            Gets or sets the type of the cursor.
            </summary>
            <value>
            The type of the cursor.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Mouse.OverrideCursorType">
            <summary>
            Gets or sets the type of the cursor and override default behavior
            </summary>
            <value>
            The type of the cursor.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Mouse.#ctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Input.Mouse"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Mouse.RaiseMouseUp(EmptyKeys.UserInterface.Input.MouseButton)">
            <summary>
            Raises the mouse up.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Mouse.RaiseMouseDown(EmptyKeys.UserInterface.Input.MouseButton,EmptyKeys.UserInterface.Input.ButtonInputListener)">
            <summary>
            Raises the mouse down.
            </summary>
            <param name="button">The button.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Mouse.Update(EmptyKeys.UserInterface.Controls.UIRoot,System.Double,System.Double)">
            <summary>
            Updates listeners of mouse
            </summary>
            <param name="uiContainer">The UI container.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="totalGameTime">The total game time.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Mouse.Capture(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Captures the specified input element.
            </summary>
            <param name="inputElement">The input element.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Mouse.GetPosition(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the position relative to element
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Mouse.GetPosition">
            <summary>
            Gets the position in screen space
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseAction">
            <summary>
            Mouse Actions
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseAction.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseAction.LeftClick">
            <summary>
            The left click
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseAction.RightClick">
            <summary>
            The right click
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseAction.MiddleClick">
            <summary>
            The middle click
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseAction.WheelClick">
            <summary>
            The wheel click
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseAction.LeftDoubleClick">
            <summary>
            The left double click
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseAction.RightDoubleClick">
            <summary>
            The right double click
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseAction.MiddleDoubleClick">
            <summary>
            The middle double click
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseBinding">
            <summary>
            Implements binding between mouse gesture and command
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseBinding.MouseActionProperty">
            <summary>
            The mouse action property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseBinding.MouseAction">
            <summary>
            Gets or sets the mouse action.
            </summary>
            <value>
            The mouse action.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseBinding.ModifiersProperty">
            <summary>
            The modifiers property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseBinding.Modifiers">
            <summary>
            Gets or sets the modifiers.
            </summary>
            <value>
            The modifiers.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseBinding.Gesture">
            <summary>
            Gets or sets the gesture.
            </summary>
            <value>
            The gesture.
            </value>
            <exception cref="T:System.ArgumentException">Wrong Input Gesture type. Expected MouseGesture.</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseBinding"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseBinding.#ctor(EmptyKeys.UserInterface.Input.ICommand,EmptyKeys.UserInterface.Input.MouseGesture)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="gesture">The gesture.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseBinding.#ctor(EmptyKeys.UserInterface.Input.ICommand,EmptyKeys.UserInterface.Input.MouseAction,EmptyKeys.UserInterface.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseBinding"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="action">The action.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseButton">
            <summary>
            Mouse buttons
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseButton.Left">
            <summary>
            The left
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseButton.Middle">
            <summary>
            The middle
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MouseButton.Right">
            <summary>
            The right
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs">
            <summary>
            Arguments for mouse button event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseButtonEventArgs.ChangedButton">
            <summary>
            Gets the changed button.
            </summary>
            <value>
            The changed button.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseButtonEventArgs.ClickCount">
            <summary>
            Gets the click count.
            </summary>
            <value>
            The click count.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseButtonEventArgs.InputListener">
            <summary>
            Gets or sets the input listener.
            </summary>
            <value>
            The input listener.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseButtonEventArgs.#ctor(EmptyKeys.UserInterface.Input.MouseButton,EmptyKeys.UserInterface.Input.MouseStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> class.
            </summary>
            <param name="button">The button.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseButtonEventArgs.#ctor(EmptyKeys.UserInterface.Input.MouseButton,EmptyKeys.UserInterface.Input.MouseStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> class.
            </summary>
            <param name="button">The button.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseEventArgs">
            <summary>
            Base arguments for mouse events
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseEventArgs.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseEventArgs.MouseDevice">
            <summary>
            Gets the mouse device.
            </summary>
            <value>
            The mouse device.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseEventArgs.#ctor(EmptyKeys.UserInterface.Input.MouseStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> class.
            </summary>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseEventArgs.#ctor(EmptyKeys.UserInterface.Input.MouseStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> class.
            </summary>
            <param name="state">The state.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseEventArgs.GetPosition(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the position.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseEventArgs.GetPosition">
            <summary>
            Gets the position.
            </summary>
            <returns>mouse position (screen space)</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseGesture">
            <summary>
            Implement input gesture for mouse
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseGesture.MouseAction">
            <summary>
            Gets the mouse action.
            </summary>
            <value>
            The mouse action.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseGesture.Modifiers">
            <summary>
            Gets the modifiers.
            </summary>
            <value>
            The modifiers.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseGesture.#ctor(EmptyKeys.UserInterface.Input.MouseAction)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseGesture"/> class.
            </summary>
            <param name="mouseAction">The mouse action.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseGesture.#ctor(EmptyKeys.UserInterface.Input.MouseAction,EmptyKeys.UserInterface.Input.ModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseGesture"/> class.
            </summary>
            <param name="mouseAction">The mouse action.</param>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseGesture.Matches(EmptyKeys.UserInterface.Input.InputEventArgs)">
            <summary>
            Matches input gesture
            </summary>
            <param name="args">The <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs" /> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs">
            <summary>
            Arguments for mouse wheel event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.MouseWheelEventArgs.Delta">
            <summary>
            Gets the delta.
            </summary>
            <value>
            The delta.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseWheelEventArgs.#ctor(System.Int32,EmptyKeys.UserInterface.Input.MouseStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs"/> class.
            </summary>
            <param name="delta">The delta.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseWheelEventArgs.#ctor(System.Int32,EmptyKeys.UserInterface.Input.MouseStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs" /> class.
            </summary>
            <param name="delta">The delta.</param>
            <param name="state">The state.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MouseWheelInputListener">
            <summary>
            Implements input listener for mouse wheel
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.MouseWheelInputListener.MouseWheelChanged">
            <summary>
            Occurs when [mouse wheel changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseWheelInputListener.#ctor(EmptyKeys.UserInterface.Input.InputListener{System.Int32}.InputListenerGetCurrentValueDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelInputListener"/> class.
            </summary>
            <param name="delegateCurrentValue">The delegate current value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MouseWheelInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MoveInputListener">
            <summary>
            Implements input listener for move events
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.MoveInputListener.MoveEvent">
            <summary>
            Occurs when [move event].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MoveInputListener.#ctor(EmptyKeys.UserInterface.Input.InputListener{EmptyKeys.UserInterface.PointF}.InputListenerGetCurrentValueDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.MoveInputListener"/> class.
            </summary>
            <param name="delegateCurrentValue">The delegate current value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.MoveInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.NullInputDevice">
            <summary>
            Implements Null device for input
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.NullInputDevice.MouseState">
            <summary>
            Gets the state of the mouse.
            </summary>
            <value>
            The state of the mouse.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.NullInputDevice.GamePadState">
            <summary>
            Gets the state of the game pad.
            </summary>
            <value>
            The state of the game pad.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.NullInputDevice.KeyboardState">
            <summary>
            Gets the state of the keyboard.
            </summary>
            <value>
            The state of the keyboard.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.NullInputDevice.TouchState">
            <summary>
            Gets or sets the state of the touch.
            </summary>
            <value>
            The state of the touch.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.NullInputDevice.ShowVirtualKeyboard(System.Action{System.String},System.Action,System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.NullInputDevice.Update">
            <inheritdoc/>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.RelayCommand">
            <summary>
            Implements command relaying by invoking defined action
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.RelayCommand"/> class.
            </summary>
            <param name="execute">The execute.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.RelayCommand"/> class.
            </summary>
            <param name="execute">The execute.</param>
            <param name="canExecute">The can execute.</param>
            <exception cref="T:System.ArgumentNullException">execute</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RelayCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RelayCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.RelayCommand`1">
            <summary>
            Implements generic version of command relaying by invoking defined action
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.RelayCommand`1"/> class.
            </summary>
            <param name="execute">The execute.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.RelayCommand`1"/> class.
            </summary>
            <param name="execute">The execute.</param>
            <param name="canExecute">The can execute.</param>
            <exception cref="T:System.ArgumentNullException">execute</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RelayCommand`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.RepeatInputListener">
            <summary>
            Implements base repeat input listener, it repeats input event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.RepeatInputListener.StartingRepeatDelay">
            <summary>
            The starting repeat delay - default value
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.RepeatInputListener.RepeatTime">
            <summary>
            The repeat time - default value
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.RepeatInputListener.repeatEnabled">
            <summary>
            The repeat enabled
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RepeatInputListener.#ctor(EmptyKeys.UserInterface.Input.InputListener{System.Boolean}.InputListenerGetCurrentValueDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.RepeatInputListener"/> class.
            </summary>
            <param name="delegateCurrentValue">The delegate current value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RepeatInputListener.EnableRepeat(System.Double,System.Double)">
            <summary>
            Enables the repeat feature on this listener, listener will repeat KeyDownEvent
            </summary>
            <param name="delay">The delay.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RepeatInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.RoutedCommand">
            <summary>
            Implements command routed through visual tree of elements
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.RoutedCommand.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.RoutedCommand.OwnerType">
            <summary>
            Gets the type of the owner.
            </summary>
            <value>
            The type of the owner.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.RoutedCommand.InputGestures">
            <summary>
            Gets the input gestures.
            </summary>
            <value>
            The input gestures.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RoutedCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.RoutedCommand"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RoutedCommand.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.RoutedCommand"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RoutedCommand.#ctor(System.String,System.Type,System.Collections.Generic.List{EmptyKeys.UserInterface.Input.InputGesture})">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.RoutedCommand"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="inputGestures">The input gestures.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RoutedCommand.EmptyKeys#UserInterface#Input#ICommand#CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
            <returns>
            true if this command can be executed; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RoutedCommand.EmptyKeys#UserInterface#Input#ICommand#Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RoutedCommand.CanExecute(System.Object,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Determines whether this instance can execute the specified parameter.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Routed Command target</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RoutedCommand.CanExecute(System.Object,EmptyKeys.UserInterface.UIElement,System.Boolean@)">
            <summary>
            Determines whether this instance can execute the specified parameter.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="target">The target.</param>
            <param name="continueRouting">if set to <c>true</c> [continue routing].</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Routed Command target</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.RoutedCommand.Execute(System.Object,EmptyKeys.UserInterface.UIElement)">
            <summary>
            Executes the command on specified target.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="target">The target.</param>
            <exception cref="T:System.ArgumentNullException">Routed Command target</exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.Touch">
            <summary>
            Implements Touch device and routed events
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Touch.PreviewTouchDownEvent">
            <summary>
            The preview touch down event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Touch.TouchDownEvent">
            <summary>
            The touch down event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Touch.PreviewTouchUpEvent">
            <summary>
            The preview touch up event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Touch.TouchUpEvent">
            <summary>
            The touch up event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Touch.PreviewTouchMoveEvent">
            <summary>
            The preview touch move event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Touch.TouchMoveEvent">
            <summary>
            The touch move event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Touch.PreviewTouchGestureEvent">
            <summary>
            The preview touch gesture event
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.Touch.TouchGestureEvent">
            <summary>
            The touch gesture event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.Touch.Captured">
            <summary>
            Gets the captured.
            </summary>
            <value>
            The captured.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Touch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.Touch"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Touch.Capture(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Captures the specified input element.
            </summary>
            <param name="inputElement">The input element.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.Touch.Update(EmptyKeys.UserInterface.Controls.UIRoot,System.Double,System.Double)">
            <summary>
            Updates input listeners
            </summary>
            <param name="uiContainer">The UI container.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="totalGameTime">The total game time.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.TouchEventArgs">
            <summary>
            Implements base arguments for touch events
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.TouchEventArgs.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.TouchEventArgs.TouchDevice">
            <summary>
            Gets the touch device.
            </summary>
            <value>
            The touch device.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.TouchEventArgs.InputListener">
            <summary>
            Gets or sets the input listener.
            </summary>
            <value>
            The input listener.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchEventArgs.#ctor(EmptyKeys.UserInterface.Input.TouchStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> class.
            </summary>
            <param name="state">The location.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchEventArgs.#ctor(EmptyKeys.UserInterface.Input.TouchStateBase,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> class.
            </summary>
            <param name="state">The location.</param>
            <param name="timestamp">The time stamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchEventArgs.GetPosition(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the position.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchEventArgs.GetPosition">
            <summary>
            Gets the position.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.TouchGesture">
            <summary>
            Implements input gesture for touch device
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.TouchGesture.GestureType">
            <summary>
            Gets the type of the gesture.
            </summary>
            <value>
            The type of the gesture.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGesture.#ctor(EmptyKeys.UserInterface.Input.TouchGestures)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.TouchGesture"/> class.
            </summary>
            <param name="gestureType">Type of the gesture.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGesture.Matches(EmptyKeys.UserInterface.Input.InputEventArgs)">
            <summary>
            Matches the specified arguments.
            </summary>
            <param name="args">The <see cref="T:EmptyKeys.UserInterface.Input.InputEventArgs" /> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs">
            <summary>
            Arguments for touch gesture event
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.TouchGestureEventArgs.GestureType">
            <summary>
            Gets the type of the gesture.
            </summary>
            <value>
            The type of the gesture.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.TouchGestureEventArgs.Position">
            <summary>
            Gets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.TouchGestureEventArgs.Delta">
            <summary>
            Gets the delta.
            </summary>
            <value>
            The delta.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGestureEventArgs.#ctor(EmptyKeys.UserInterface.Input.TouchGestures,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.PointF,System.Double,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs" /> class.
            </summary>
            <param name="gestureType">Type of the gesture.</param>
            <param name="position">The position.</param>
            <param name="delta">The delta.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGestureEventArgs.#ctor(EmptyKeys.UserInterface.Input.TouchGestures,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.PointF,System.Double,EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs" /> class.
            </summary>
            <param name="gestureType">Type of the gesture.</param>
            <param name="position">The position.</param>
            <param name="delta">The delta.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGestureEventArgs.GetPosition(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Gets the position.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGestureEventArgs.GetPosition">
            <summary>
            Gets the position.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.TouchGestureInputListener">
            <summary>
            Implements input listener for touch gestures
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.TouchGestureInputListener.OnTouchGesture">
            <summary>
            Occurs when [on touch gesture].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGestureInputListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureInputListener"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchGestureInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.TouchInputListener">
            <summary>
            Implements Input Listener for touch device
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Input.TouchInputListener.TouchEvent">
            <summary>
            Occurs when [touch down event].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchInputListener.#ctor(EmptyKeys.UserInterface.Input.TouchAction)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.TouchInputListener" /> class.
            </summary>
            <param name="locationAction">State of the location.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.TouchInputListener.OnUpdate">
            <summary>
            Called when [update].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem">
            <summary>
            Virtual Keyboard Map Item data for Virtual Keyboard control/map
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem.Row">
            <summary>
            Gets or sets the row.
            </summary>
            <value>
            The row.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>
            The column.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem.KeyCode">
            <summary>
            Gets or sets the key code.
            </summary>
            <value>
            The key code.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem.ItemType">
            <summary>
            Gets or sets the type of the item.
            </summary>
            <value>
            The type of the item.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem.SpecialKeyName">
            <summary>
            Gets or sets the name of the special key.
            </summary>
            <value>
            The name of the special key.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem.KeyboardMode">
            <summary>
            Gets or sets the keyboard mode.
            </summary>
            <value>
            The keyboard mode.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem.Shift">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem"/> is shift version of key
            </summary>
            <value>
              <c>true</c> if shift; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Input.VirtualKeyboardMapItem"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.MapItemType">
            <summary>
            Types of virtual map item
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MapItemType.Empty">
            <summary>
            The empty
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MapItemType.Key">
            <summary>
            The key - item is key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MapItemType.SpecialKey">
            <summary>
            Special keys - shift, backspace, space etc.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MapItemType.SwitchToNumbers">
            <summary>
            The switch to numbers
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MapItemType.SwitchToLetters">
            <summary>
            The switch to letters
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MapItemType.SwitchToSings">
            <summary>
            The switch to sings
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.MapItemType.HideKeyboard">
            <summary>
            The hide keyboard
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Input.VirtualKeyboardMode">
            <summary>
            Modes for Virtual Keyboard control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.VirtualKeyboardMode.Letters">
            <summary>
            The letters mode
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.VirtualKeyboardMode.Numbers">
            <summary>
            The numbers mode
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Input.VirtualKeyboardMode.Signs">
            <summary>
            Additional signs
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactions.Core.CallMethodAction">
            <summary>
            An action that calls a method on a specified object when invoked.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.CallMethodAction.MethodNameProperty">
            <summary>
            The method name property
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.CallMethodAction.TargetObjectProperty">
            <summary>
            The target object property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.CallMethodAction.MethodName">
            <summary>
            Gets or sets the name of the method to invoke. This is a dependency property.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.CallMethodAction.TargetObject">
            <summary>
            Gets or sets the object that exposes the method of interest. This is a dependency property.
            </summary>
            <value>
            The target object.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactions.Core.CallMethodAction.Execute(System.Object,System.Object)">
            <summary>
            Executes the action.
            </summary>
            <param name="sender">The <see cref="T:System.Object" /> that is passed to the action by the behavior. Generally this is <seealso cref="P:EmptyKeys.UserInterface.Interactivity.IBehavior.AssociatedObject" /> or a target object.</param>
            <param name="parameter">The value of this parameter is determined by the caller.</param>
            <returns>
            True if the method is called; else false.
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
            <remarks>
            An example of parameter usage is EventTriggerBehavior, which passes the EventArgs as a parameter to its actions.
            </remarks>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction">
            <summary>
            An action that will change a specified property to a specified value when invoked.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.PropertyNameProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.PropertyName"/> dependency property.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.TargetObjectProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.TargetObject"/> dependency property.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.ValueProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.Value"/> dependency property.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.PropertyName">
            <summary>
            Gets or sets the name of the property to change. This is a dependency property.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.Value">
            <summary>
            Gets or sets the value to set. This is a dependency property.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.TargetObject">
            <summary>
            Gets or sets the object whose property will be changed.
            If <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.TargetObject"/> is not set or cannot be resolved, the sender of <seealso cref="M:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.Execute(System.Object,System.Object)"/> will be used. This is a dependency property.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.Execute(System.Object,System.Object)">
            <summary>
            Executes the action.
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> that is passed to the action by the behavior. Generally this is <seealso cref="P:EmptyKeys.UserInterface.Interactivity.IBehavior.AssociatedObject"/> or a target object.</param>
            <param name="parameter">The value of this parameter is determined by the caller.</param>
            <returns>True if updating the property value succeeds; else false.</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactions.Core.ChangePropertyAction.ValidateProperty(System.String,System.Reflection.PropertyInfo)">
            <summary>
            Ensures the property is not null and can be written to.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior">
            <summary>
            A behavior that listens for a specified event on its source and executes its actions when that event is fired.
            </summary>    
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.ActionsProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.Actions"/> dependency property.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.EventNameProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.EventName"/> dependency property.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.SourceObjectProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.SourceObject"/> dependency property.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.Actions">
            <summary>
            Gets the collection of actions associated with the behavior. This is a dependency property.
            </summary>
            <value>
            The actions.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.EventName">
            <summary>
            Gets or sets the name of the event to listen for. This is a dependency property.
            </summary>
            <value>
            The name of the event.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.SourceObject">
            <summary>
            Gets or sets the source object from which this behavior listens for events.
            If <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.SourceObject" /> is not set, the source will default to <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.AssociatedObject" />. This is a dependency property.
            </summary>
            <value>
            The source object.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.AssociatedObject">
            <summary>
            Gets the <seealso cref="T:EmptyKeys.UserInterface.DependencyObject" /> to which the <seealso cref="T:EmptyKeys.UserInterface.Interactivity.IBehavior" /> is attached.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.Attach(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Attaches to the specified object.
            </summary>
            <param name="associatedObject">The <seealso cref="T:EmptyKeys.UserInterface.DependencyObject"/> to which the <seealso cref="T:EmptyKeys.UserInterface.Interactivity.IBehavior"/> will be attached.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactions.Core.EventTriggerBehavior.Detach">
            <summary>
            Detaches this instance from its associated object.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction">
            <summary>
            Executes a specified <see cref="T:EmptyKeys.UserInterface.Input.ICommand"/> when invoked. 
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.CommandProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.Command"/> dependency property.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.CommandParameterProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.CommandParameter"/> dependency property.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverterProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverter"/> dependency property.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverterParameterProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverterParameter"/> dependency property.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverterLanguageProperty">
            <summary>
            Identifies the <seealso cref="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverterLanguage"/> dependency property.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.Command">
            <summary>
            Gets or sets the command this action should invoke. This is a dependency property.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.CommandParameter">
            <summary>
            Gets or sets the parameter that is passed to <see cref="M:EmptyKeys.UserInterface.Input.ICommand.Execute(System.Object)" />.
            If this is not set, the parameter from the <seealso cref="M:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.Execute(System.Object,System.Object)" /> method will be used.
            This is an optional dependency property.
            </summary>
            <value>
            The command parameter.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverter">
            <summary>
            Gets or sets the converter that is run on the parameter from the <seealso cref="M:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.Execute(System.Object,System.Object)" /> method.
            This is an optional dependency property.
            </summary>
            <value>
            The input converter.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverterParameter">
            <summary>
            Gets or sets the parameter that is passed to the <see cref="M:EmptyKeys.UserInterface.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
            method of <see cref="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverter" />.
            This is an optional dependency property.
            </summary>
            <value>
            The input converter parameter.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverterLanguage">
            <summary>
            Gets or sets the language that is passed to the <see cref="M:EmptyKeys.UserInterface.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
            method of <see cref="P:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.InputConverter" />.
            This is an optional dependency property.
            </summary>
            <value>
            The input converter language.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactions.Core.InvokeCommandAction.Execute(System.Object,System.Object)">
            <summary>
            Executes the action.
            </summary>
            <param name="sender">The <see cref="T:System.Object" /> that is passed to the action by the behavior. Generally this is <seealso cref="P:EmptyKeys.UserInterface.Interactivity.IBehavior.AssociatedObject" /> or a target object.</param>
            <param name="parameter">The value of this parameter is determined by the caller.</param>
            <returns>
            True if the command is successfully executed; else false.
            </returns>
            <remarks>
            An example of parameter usage is EventTriggerBehavior, which passes the EventArgs as a parameter to its actions.
            </remarks>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactions.Core.PlaySoundAction">
            <summary>
            This action will play specified sound
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.DependencyObject" />
            <seealso cref="T:EmptyKeys.UserInterface.Interactivity.IAction" />
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactions.Core.PlaySoundAction.SourceProperty">
            <summary>
            The source property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactions.Core.PlaySoundAction.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactions.Core.PlaySoundAction.Execute(System.Object,System.Object)">
            <summary>
            Executes the action.
            </summary>
            <param name="sender">The <see cref="T:System.Object" /> that is passed to the action by the behavior. Generally this is <seealso cref="P:EmptyKeys.UserInterface.Interactivity.IBehavior.AssociatedObject" /> or a target object.</param>
            <param name="parameter">The value of this parameter is determined by the caller.</param>
            <returns>
            Returns the result of the action.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>
            An example of parameter usage is EventTriggerBehavior, which passes the EventArgs as a parameter to its actions.
            </remarks>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.ActionCollection">
            <summary>
            Represents a collection of IActions.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.ActionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Interactivity.ActionCollection"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.ActionCollection.ActionCollection_VectorChanged(EmptyKeys.UserInterface.Interactivity.IObservableVector{EmptyKeys.UserInterface.DependencyObject},EmptyKeys.UserInterface.Interactivity.IVectorChangedEventArgs)">
            <summary>
            Actions the collection_ vector changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The <see cref="T:EmptyKeys.UserInterface.Interactivity.IVectorChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.Behavior">
            <summary>
            A base class for behaviors, implementing the basic plumbing of IBehavior
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.Behavior.AssociatedObject">
            <summary>
            Gets the <see cref="T:EmptyKeys.UserInterface.DependencyObject" /> to which the <seealso cref="T:EmptyKeys.UserInterface.Interactivity.IBehavior" /> is attached.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Behavior.Attach(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Attaches to the specified object.
            </summary>
            <param name="associatedObject">The <see cref="T:EmptyKeys.UserInterface.DependencyObject" /> to which the <seealso cref="T:EmptyKeys.UserInterface.Interactivity.IBehavior" /> will be attached.</param>
            <exception cref="T:System.ArgumentNullException">associatedObject</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Behavior.Detach">
            <summary>
            Detaches this instance from its associated object.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Behavior.OnAttached">
            <summary>
            Called when [attached].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Behavior.OnDetaching">
            <summary>
            Called when [detaching].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.Behavior`1">
            <summary>
            A base class for behaviors making them code compatible with older frameworks,
            and allow for typed associated objects.
            </summary>
            <typeparam name="T">The object type to attach to</typeparam>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.Behavior`1.AssociatedObject">
            <summary>
            Gets the <see cref="T:EmptyKeys.UserInterface.DependencyObject" /> to which the <seealso cref="T:EmptyKeys.UserInterface.Interactivity.IBehavior" /> is attached.
            </summary>        
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Behavior`1.OnAttached">
            <summary>
            Called when [attached].
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection">
            <summary>
            Represents a collection of IBehaviors with a shared <see cref="P:EmptyKeys.UserInterface.Interactivity.BehaviorCollection.AssociatedObject"/>.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.BehaviorCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> class.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.BehaviorCollection.AssociatedObject">
            <summary>
            Gets the <see cref="T:EmptyKeys.UserInterface.DependencyObject"/> to which the <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> is attached.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.BehaviorCollection.Attach(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Attaches the collection of behaviors to the specified <see cref="T:EmptyKeys.UserInterface.DependencyObject"/>.
            </summary>
            <param name="associatedObject">The <see cref="T:EmptyKeys.UserInterface.DependencyObject"/> to which to attach.</param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> is already attached to a different <see cref="T:EmptyKeys.UserInterface.DependencyObject"/>.</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.BehaviorCollection.Detach">
            <summary>
            Detaches the collection of behaviors from the <see cref="P:EmptyKeys.UserInterface.Interactivity.BehaviorCollection.AssociatedObject"/>.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection">
            <summary>
            Implements Dependency Object collection
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.VectorChanged">
            <summary>
            Occurs when [vector changed].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.collection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the collection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.IndexOf(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.Insert(System.Int32,EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.Add(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.Contains(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.CopyTo(EmptyKeys.UserInterface.DependencyObject[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.Remove(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.DependencyObjectCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.IAction">
            <summary>
            Interface implemented by all custom actions.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.IAction.Execute(System.Object,System.Object)">
            <summary>
            Executes the action.
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> that is passed to the action by the behavior. Generally this is <seealso cref="P:EmptyKeys.UserInterface.Interactivity.IBehavior.AssociatedObject"/> or a target object.</param>
            <param name="parameter">The value of this parameter is determined by the caller.</param>
            <remarks> An example of parameter usage is EventTriggerBehavior, which passes the EventArgs as a parameter to its actions.</remarks>
            <returns>Returns the result of the action.</returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.IBehavior">
            <summary>
            Interface implemented by all custom behaviors.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.IBehavior.AssociatedObject">
            <summary>
            Gets the <see cref="T:EmptyKeys.UserInterface.DependencyObject"/> to which the <seealso cref="T:EmptyKeys.UserInterface.Interactivity.IBehavior"/> is attached.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.IBehavior.Attach(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Attaches to the specified object.
            </summary>
            <param name="associatedObject">The <see cref="T:EmptyKeys.UserInterface.DependencyObject"/> to which the <seealso cref="T:EmptyKeys.UserInterface.Interactivity.IBehavior"/> will be attached.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.IBehavior.Detach">
            <summary>
            Detaches this instance from its associated object.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.Interaction">
            <summary>
            Defines a <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> attached property and provides a method for executing an <seealso cref="T:EmptyKeys.UserInterface.Interactivity.ActionCollection"/>.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Interaction.#ctor">
            <remarks>
            CA1053: Static holder types should not have public constructors
            </remarks>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactivity.Interaction.BehaviorsProperty">
            <summary>
            Gets or sets the <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> associated with a specified object.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Interaction.GetBehaviors(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> associated with a specified object.
            </summary>
            <param name="obj">The <see cref="T:EmptyKeys.UserInterface.DependencyObject"/> from which to retrieve the <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/>.</param>
            <returns>A <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> containing the behaviors associated with the specified object.</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Interaction.SetBehaviors(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Interactivity.BehaviorCollection)">
            <summary>
            Sets the <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> associated with a specified object.
            </summary>
            <param name="obj">The <see cref="T:EmptyKeys.UserInterface.DependencyObject"/> on which to set the <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/>.</param>
            <param name="value">The <see cref="T:EmptyKeys.UserInterface.Interactivity.BehaviorCollection"/> associated with the object.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.Interaction.ExecuteActions(System.Object,EmptyKeys.UserInterface.Interactivity.ActionCollection,System.Object)">
            <summary>
            Executes all actions in the <see cref="T:EmptyKeys.UserInterface.Interactivity.ActionCollection"/> and returns their results.
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> which will be passed on to the action.</param>
            <param name="actions">The set of actions to execute.</param>
            <param name="parameter">The value of this parameter is determined by the calling behavior.</param>
            <returns>Returns the results of the actions.</returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.VectorChangedEventHandler`1">
            <summary>
            Vector Change Event Handler delegate
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender">The sender.</param>
            <param name="event">The <see cref="T:EmptyKeys.UserInterface.Interactivity.IVectorChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.IObservableVector`1">
            <summary>
            Notifies listeners of changes to the vector.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="E:EmptyKeys.UserInterface.Interactivity.IObservableVector`1.VectorChanged">
            <summary>
            Occurs when [vector changed].
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.IVectorChangedEventArgs">
            <summary>
            Provides data for the changed event of a vector.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.IVectorChangedEventArgs.CollectionChange">
            <summary>
            Gets the type of change that occurred in the vector.
            </summary>
            <value>
            The type of change in the vector.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.IVectorChangedEventArgs.Index">
            <summary>
            Gets the position where the change occurred in the vector.
            </summary>
            <value>
            The zero-based position where the change occurred in the vector, if applicable.
            </value>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.VectorChangedEventArgs">
            <summary>
            Implements Vector Changed Event arguments
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Interactivity.VectorChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Interactivity.VectorChangedEventArgs"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="item">The item.</param>
            <param name="index">The index.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">action</exception>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.VectorChangedEventArgs.Item">
            <summary>
            Gets the affected item.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.VectorChangedEventArgs.CollectionChange">
            <summary>
            Gets the type of change that occurred in the vector.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Interactivity.VectorChangedEventArgs.Index">
            <summary>
            Gets the position where the change occurred in the vector.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Interactivity.CollectionChange">
            <summary>
            Describes the action that causes a change to a collection.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactivity.CollectionChange.Reset">
            <summary>
            The collection is changed.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactivity.CollectionChange.ItemInserted">
            <summary>
            An item is added to the collection.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactivity.CollectionChange.ItemRemoved">
            <summary>
            An item is removed from the collection.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Interactivity.CollectionChange.ItemChanged">
            <summary>
            An item is changed in the collection.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.ListSortDirection">
            <summary>
            Direction of sort
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.ListSortDirection.Ascending">
            <summary>
            The ascending order
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.ListSortDirection.Descending">
            <summary>
            The descending order
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.LocalValueEntry">
            <summary>
            Implements local value entry of Dependency Object
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.LocalValueEntry.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.LocalValueEntry.Property">
            <summary>
            Gets the property.
            </summary>
            <value>
            The property.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.LocalValueEntry.#ctor(EmptyKeys.UserInterface.DependencyProperty,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.LocalValueEntry"/> struct.
            </summary>
            <param name="depProperty">The dep property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.AnimatedImageBrush">
            <summary>
            Implements animated image brush
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.AnimatedImageBrush.FrameWidthProperty">
            <summary>
            The frame width property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.AnimatedImageBrush.GetFrameWidth(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the width of the frame.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.AnimatedImageBrush.SetFrameWidth(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets the width of the frame.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.AnimatedImageBrush.FrameHeightProperty">
            <summary>
            The frame height property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.AnimatedImageBrush.GetFrameHeight(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the height of the frame.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.AnimatedImageBrush.SetFrameHeight(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets the height of the frame.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.AnimatedImageBrush.FramesPerSecondProperty">
            <summary>
            The frames per second property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.AnimatedImageBrush.GetFramesPerSecond(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the frames per second.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.AnimatedImageBrush.SetFramesPerSecond(EmptyKeys.UserInterface.DependencyObject,System.Int32)">
            <summary>
            Sets the frames per second.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.AnimatedImageBrush.AnimateProperty">
            <summary>
            The animate property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.AnimatedImageBrush.GetAnimate(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the animate.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.AnimatedImageBrush.SetAnimate(EmptyKeys.UserInterface.DependencyObject,System.Boolean)">
            <summary>
            Sets the animate.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.AnimationManager">
            <summary>
            Implements manager for all animation storyboards and updates every frame
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.AnimationManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.AnimationManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.AnimationManager"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.AnimationManager.AddStoryboard(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Media.Animation.Storyboard)">
            <summary>
            Adds the storyboard.
            </summary>
            <param name="host">The host.</param>
            <param name="storyboard">The storyboard.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.AnimationManager.RemoveStoryboard(EmptyKeys.UserInterface.Media.Animation.Storyboard)">
            <summary>
            Removes the storyboard.
            </summary>
            <param name="storyboard">The storyboard.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.AnimationManager.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.AnimationManager.AddScrollViewer(EmptyKeys.UserInterface.Controls.ScrollViewer)">
            <summary>
            Adds the scroll viewer for deceleration animation
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.AnimationManager.RemoveScrollViewer(EmptyKeys.UserInterface.Controls.ScrollViewer)">
            <summary>
            Removes the scroll viewer.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.AnimationManager.Update(System.Double)">
            <summary>
            Updates all storyboards
            </summary>
            <param name="elapsedGameTime">The game time.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.BackEase">
            <summary>
            Implements back easing function for animations
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.BackEase.AmplitudeProperty">
            <summary>
            The amplitude property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.BackEase.Amplitude">
            <summary>
            Gets or sets the amplitude.
            </summary>
            <value>
            The amplitude.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.BackEase.EaseCore(System.Double)">
            <summary>
            Core method for easing function
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.BackEase.CloneCore">
            <summary>
            Clones the core.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2">
            <summary>
            Implements generic base class for from/to/by animations
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.from">
            <summary>
            local value From
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.to">
            <summary>
            local value To
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.by">
            <summary>
            local value by
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.FromProperty">
            <summary>
            From property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.ToProperty">
            <summary>
            To property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.ByProperty">
            <summary>
            The by property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.By">
            <summary>
            Gets or sets the by.
            </summary>
            <value>
            The by.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.BaseAnimation`2.BeginCore(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Virtual core method for custom code of child animations
            </summary>
            <param name="host">The host.</param>
            <exception cref="T:System.ArgumentNullException">
            Animation without From/To values needs base value for target element property.
            or
            Additive animation needs base value for target element property.
            </exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.BeginStoryboard">
            <summary>
            Implements trigger action for animations
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.BeginStoryboard.StoryboardProperty">
            <summary>
            The storyboard property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.BeginStoryboard.Storyboard">
            <summary>
            Gets or sets the storyboard.
            </summary>
            <value>
            The storyboard.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.BeginStoryboard.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.BeginStoryboard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.BeginStoryboard"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.CubicEase">
            <summary>
            Implements cubic easing function for animations
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.CubicEase.EaseCore(System.Double)">
            <summary>
            Core method for easing function
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.CubicEase.CloneCore">
            <summary>
            Clone core method for easing function
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.EasingFunctionBase">
            <summary>
            Implements base for animation easing functions
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.EasingFunctionBase.EasingModeProperty">
            <summary>
            The easing mode property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.EasingFunctionBase.EasingMode">
            <summary>
            Gets or sets the easing mode.
            </summary>
            <value>
            The easing mode.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.EasingFunctionBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.EasingFunctionBase"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.EasingFunctionBase.Ease(System.Double)">
            <summary>
            Eases the specified progress.
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.EasingFunctionBase.EaseCore(System.Double)">
            <summary>
            Core method for easing function
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.EasingFunctionBase.CloneCore">
            <summary>
            Clone core method for easing function
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.EasingMode">
            <summary>
            Describes different animation easing modes
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.EasingMode.EaseIn">
            <summary>
            The ease in
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.EasingMode.EaseOut">
            <summary>
            The ease out
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.EasingMode.EaseInOut">
            <summary>
            The ease in out
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.ElasticEase">
            <summary>
            Implements elastic easing function for animations
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.ElasticEase.OscillationsProperty">
            <summary>
            The oscillations property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.ElasticEase.Oscillations">
            <summary>
            Gets or sets the oscillations.
            </summary>
            <value>
            The oscillations.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.ElasticEase.SpringinessProperty">
            <summary>
            The springiness property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.ElasticEase.Springiness">
            <summary>
            Gets or sets the springiness.
            </summary>
            <value>
            The springiness.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.ElasticEase.EaseCore(System.Double)">
            <summary>
            Core method for easing function
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.ElasticEase.CloneCore">
            <summary>
            Clone core method for easing function
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.ExponentialEase">
            <summary>
            Implements exponential easing function for animations
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.ExponentialEase.ExponentProperty">
            <summary>
            The exponent property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.ExponentialEase.Exponent">
            <summary>
            Gets or sets the exponent.
            </summary>
            <value>
            The exponent.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.ExponentialEase.EaseCore(System.Double)">
            <summary>
            Core method for easing function
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.ExponentialEase.CloneCore">
            <summary>
            Clone core method for easing function
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.FloatAnimation">
            <summary>
            Implements animation for float type property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.FloatAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.FloatAnimation"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.FloatAnimation.UpdateCore(System.Double)">
            <summary>
            Updates animation core - virtual method for custom code of child animations
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.PowerEase">
            <summary>
            Implements easing function for animations - Math.Pow
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.PowerEase.PowerProperty">
            <summary>
            The power property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.PowerEase.Power">
            <summary>
            Gets or sets the power.
            </summary>
            <value>
            The power.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.PowerEase.EaseCore(System.Double)">
            <summary>
            Core method for easing function
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.PowerEase.CloneCore">
            <summary>
            Clone core method for easing function
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.QuadraticEase">
            <summary>
            Implements quadratic easing function for animations
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.QuadraticEase.EaseCore(System.Double)">
            <summary>
            Core method for easing function
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.QuadraticEase.CloneCore">
            <summary>
            Clone core method for easing function
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior">
            <summary>
            Implements repeat behavior for animations
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.Forever">
            <summary>
            Gets the forever repeat behavior.
            </summary>
            <value>
            The forever repeat behavior.
            </value>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.RepeatBehaviorType">
            <summary>
            An enumeration of the different types of RepeatBehavior behaviors.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.HasCount">
            <summary>
            Gets a value indicating whether this instance has count.
            </summary>
            <value>
              <c>true</c> if this instance has count; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.HasDuration">
            <summary>
            Gets a value indicating whether this instance has duration.
            </summary>
            <value>
            <c>true</c> if this instance has duration; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
            <exception cref="T:System.InvalidOperationException">Repeat Behavior is not iteration count type</exception>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.Duration">
            <summary>
            Gets the duration.
            </summary>
            <value>
            The duration.
            </value>
            <exception cref="T:System.InvalidOperationException">Repeat Behavior is not repeat duration type</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior"/> struct.
            </summary>
            <param name="count">The count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">count</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior" /> struct.
            </summary>
            <param name="duration">The duration.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">duration</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.Equals(System.Object)">
            <summary>
            Tests if this instance equals the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.Equals(EmptyKeys.UserInterface.Media.Animation.RepeatBehavior)">
            <summary>
            Tests if this instance equals the specified repeat behavior.
            </summary>
            <param name="repeatBehavior">The repeat behavior.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.Equals(EmptyKeys.UserInterface.Media.Animation.RepeatBehavior,EmptyKeys.UserInterface.Media.Animation.RepeatBehavior)">
            <summary>
            Tests is the specified repeat behavior 1 equals repeat behavior 2
            </summary>
            <param name="repeatBehavior1">The repeat behavior1.</param>
            <param name="repeatBehavior2">The repeat behavior2.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.op_Equality(EmptyKeys.UserInterface.Media.Animation.RepeatBehavior,EmptyKeys.UserInterface.Media.Animation.RepeatBehavior)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="repeatBehavior1">The repeat behavior1.</param>
            <param name="repeatBehavior2">The repeat behavior2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.RepeatBehavior.op_Inequality(EmptyKeys.UserInterface.Media.Animation.RepeatBehavior,EmptyKeys.UserInterface.Media.Animation.RepeatBehavior)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="repeatBehavior1">The repeat behavior1.</param>
            <param name="repeatBehavior2">The repeat behavior2.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.SineEase">
            <summary>
            Implements sinus curve easing function for animations
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.SineEase.EaseCore(System.Double)">
            <summary>
            Core method for easing function
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.SineEase.CloneCore">
            <summary>
            Clone core method for easing function
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.SolidColorBrushAnimation">
            <summary>
            Implements Solid Color Brush animation
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.SolidColorBrushAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.SolidColorBrushAnimation"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.SolidColorBrushAnimation.UpdateCore(System.Double)">
            <summary>
            Updates animation core - virtual method for custom code of child animations
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.Storyboard">
            <summary>
            Implements parent for all animations, storyboard starts/updates all its children
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Storyboard.TargetProperty">
            <summary>
            The target dependence property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.SetTarget(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Sets the target.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.GetTarget(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the target.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Storyboard.TargetNameProperty">
            <summary>
            The target name property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.SetTargetName(EmptyKeys.UserInterface.DependencyObject,System.String)">
            <summary>
            Sets the name of the target.
            </summary>
            <param name="element">The element.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">
            element
            or
            name
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.GetTargetName(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the name of the target.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Storyboard.TargetPropertyProperty">
            <summary>
            The target property dependence property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.SetTargetProperty(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Sets the target property.
            </summary>
            <param name="element">The element.</param>
            <param name="property">The property.</param>
            <exception cref="T:System.ArgumentNullException">
            element
            or
            property
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.GetTargetProperty(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the target property.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">element</exception>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Storyboard.ChildrenProperty">
            <summary>
            The children property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Storyboard.Children">
            <summary>
            Gets or sets the children.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Storyboard.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.Storyboard"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.Begin(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Start animations
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.Update(System.Double)">
            <summary>
            Updates animations
            </summary>
            <param name="elapsedGameTime">The elapsed game time.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Storyboard.Stop(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Stops animations
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.ThicknessAnimation">
            <summary>
            Implements animation for thickness
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.ThicknessAnimation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.ThicknessAnimation"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.ThicknessAnimation.UpdateCore(System.Double)">
            <summary>
            Updates animation core - virtual method for custom code of child animations
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Animation.Timeline">
            <summary>
            Implements base class for all animations
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Timeline.target">
            <summary>
            The target - local copy
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Timeline.property">
            <summary>
            The property - local copy
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Timeline.isAdditive">
            <summary>
            The is additive flag - local value
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Timeline.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Timeline.AutoReverseProperty">
            <summary>
            The automatic reverse property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Timeline.AutoReverse">
            <summary>
            Gets or sets a value indicating whether [automatic reverse].
            </summary>
            <value>
              <c>true</c> if [automatic reverse]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Timeline.DurationProperty">
            <summary>
            The duration property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Timeline.Duration">
            <summary>
            Gets or sets the duration.
            </summary>
            <value>
            The duration.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Timeline.EasingFunction">
            <summary>
            Gets or sets the easing function.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Timeline.RepeatBehaviorProperty">
            <summary>
            The repeat behavior property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Timeline.RepeatBehavior">
            <summary>
            Gets or sets the repeat behavior.
            </summary>
            <value>
            The repeat behavior.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Animation.Timeline.IsAdditiveProperty">
            <summary>
            The is additive property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Timeline.IsAdditive">
            <summary>
            Gets or sets a value indicating whether animation is additive.
            </summary>
            <value>
            <c>true</c> if animation is additive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Animation.Timeline.IsRunning">
            <summary>
            Gets or sets a value indicating whether this instance is running.
            </summary>
            <value>
            <c>true</c> if this instance is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Timeline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Animation.Timeline"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Timeline.Begin(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Starts the animation
            </summary>
            <param name="host">The host.</param>
            <exception cref="T:System.ArgumentNullException">
            TargetName
            or
            Target not found
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Timeline.BeginCore(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Virtual core method for custom code of child animations
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Timeline.Stop(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Stops the animation
            </summary>
            <param name="host">The host.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Timeline.Update(System.Double)">
            <summary>
            Updates animation
            </summary>
            <param name="elapsedGameTime">The elapsed game time.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Animation.Timeline.UpdateCore(System.Double)">
            <summary>
            Updates animation core - virtual method for custom code of child animations
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Brush">
            <summary>
            Implements base features for brushes
            </summary>    
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Brush.OpacityProperty">
            <summary>
            The opacity property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brush.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>
            The opacity.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Brush.CreateVisual(EmptyKeys.UserInterface.Media.Brush,EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.Thickness,System.Boolean)">
            <summary>
            Creates the visual.
            </summary>
            <param name="brush">The brush.</param>
            <param name="renderSize">Size of the render.</param>
            <param name="borderThickness">The border thickness.</param>
            <param name="isBorder">if set to <c>true</c> [is border].</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Brush.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Brush"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Brush.OnOpacityChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:OpacityChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Brush.Draw(EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.Renderers.Renderer,System.Double,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,System.Single)">
            <summary>
            Draws the specified texture - used for standard texture brushes
            </summary>
            <param name="texture">The texture.</param>
            <param name="renderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="position">The position.</param>
            <param name="renderSize">Size of the render.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Brush.DrawGeometry(EmptyKeys.UserInterface.Media.GeometryBuffer,EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.Renderers.Renderer,System.Double,EmptyKeys.UserInterface.PointF,System.Single)">
            <summary>
            Draws the geometry - used with shapes and geometry
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="texture">The texture.</param>
            <param name="renderer">The renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="position">The position.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Brushes">
            <summary>
            All basic color brushes
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Brushes.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Media.Brushes"/> class from being created.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.AliceBlue">
            <summary>
            Gets the alice blue.
            </summary>
            <value>
            The alice blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.AntiqueWhite">
            <summary>
            Gets the antique white.
            </summary>
            <value>
            The antique white.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Aqua">
            <summary>
            Gets the aqua.
            </summary>
            <value>
            The aqua.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Aquamarine">
            <summary>
            Gets the aquamarine.
            </summary>
            <value>
            The aquamarine.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Azure">
            <summary>
            Gets the azure.
            </summary>
            <value>
            The azure.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Beige">
            <summary>
            Gets the beige.
            </summary>
            <value>
            The beige.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Bisque">
            <summary>
            Gets the bisque.
            </summary>
            <value>
            The bisque.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Black">
            <summary>
            Gets the black.
            </summary>
            <value>
            The black.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.BlanchedAlmond">
            <summary>
            Gets the blanched almond.
            </summary>
            <value>
            The blanched almond.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Blue">
            <summary>
            Gets the blue.
            </summary>
            <value>
            The blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.BlueViolet">
            <summary>
            Gets the blue violet.
            </summary>
            <value>
            The blue violet.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Brown">
            <summary>
            Gets the brown.
            </summary>
            <value>
            The brown.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.BurlyWood">
            <summary>
            Gets the burly wood.
            </summary>
            <value>
            The burly wood.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.CadetBlue">
            <summary>
            Gets the cadet blue.
            </summary>
            <value>
            The cadet blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Chartreuse">
            <summary>
            Gets the chartreuse.
            </summary>
            <value>
            The chartreuse.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Chocolate">
            <summary>
            Gets the chocolate.
            </summary>
            <value>
            The chocolate.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Coral">
            <summary>
            Gets the coral.
            </summary>
            <value>
            The coral.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.CornflowerBlue">
            <summary>
            Gets the cornflower blue.
            </summary>
            <value>
            The cornflower blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Cornsilk">
            <summary>
            Gets the cornsilk.
            </summary>
            <value>
            The cornsilk.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Crimson">
            <summary>
            Gets the crimson.
            </summary>
            <value>
            The crimson.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Cyan">
            <summary>
            Gets the cyan.
            </summary>
            <value>
            The cyan.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkBlue">
            <summary>
            Gets the dark blue.
            </summary>
            <value>
            The dark blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkCyan">
            <summary>
            Gets the dark cyan.
            </summary>
            <value>
            The dark cyan.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkGoldenrod">
            <summary>
            Gets the dark goldenrod.
            </summary>
            <value>
            The dark goldenrod.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkGray">
            <summary>
            Gets the dark gray.
            </summary>
            <value>
            The dark gray.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkGreen">
            <summary>
            Gets the dark green.
            </summary>
            <value>
            The dark green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkKhaki">
            <summary>
            Gets the dark khaki.
            </summary>
            <value>
            The dark khaki.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkMagenta">
            <summary>
            Gets the dark magenta.
            </summary>
            <value>
            The dark magenta.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkOliveGreen">
            <summary>
            Gets the dark olive green.
            </summary>
            <value>
            The dark olive green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkOrange">
            <summary>
            Gets the dark orange.
            </summary>
            <value>
            The dark orange.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkOrchid">
            <summary>
            Gets the dark orchid.
            </summary>
            <value>
            The dark orchid.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkRed">
            <summary>
            Gets the dark red.
            </summary>
            <value>
            The dark red.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkSalmon">
            <summary>
            Gets the dark salmon.
            </summary>
            <value>
            The dark salmon.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkSeaGreen">
            <summary>
            Gets the dark sea green.
            </summary>
            <value>
            The dark sea green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkSlateBlue">
            <summary>
            Gets the dark slate blue.
            </summary>
            <value>
            The dark slate blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkSlateGray">
            <summary>
            Gets the dark slate gray.
            </summary>
            <value>
            The dark slate gray.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkTurquoise">
            <summary>
            Gets the dark turquoise.
            </summary>
            <value>
            The dark turquoise.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DarkViolet">
            <summary>
            Gets the dark violet.
            </summary>
            <value>
            The dark violet.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DeepPink">
            <summary>
            Gets the deep pink.
            </summary>
            <value>
            The deep pink.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DeepSkyBlue">
            <summary>
            Gets the deep sky blue.
            </summary>
            <value>
            The deep sky blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DimGray">
            <summary>
            Gets the dim gray.
            </summary>
            <value>
            The dim gray.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.DodgerBlue">
            <summary>
            Gets the dodger blue.
            </summary>
            <value>
            The dodger blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Firebrick">
            <summary>
            Gets the firebrick.
            </summary>
            <value>
            The firebrick.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.FloralWhite">
            <summary>
            Gets the floral white.
            </summary>
            <value>
            The floral white.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.ForestGreen">
            <summary>
            Gets the forest green.
            </summary>
            <value>
            The forest green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Fuchsia">
            <summary>
            Gets the fuchsia.
            </summary>
            <value>
            The fuchsia.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Gainsboro">
            <summary>
            Gets the gainsboro.
            </summary>
            <value>
            The gainsboro.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.GhostWhite">
            <summary>
            Gets the ghost white.
            </summary>
            <value>
            The ghost white.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Gold">
            <summary>
            Gets the gold.
            </summary>
            <value>
            The gold.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Goldenrod">
            <summary>
            Gets the goldenrod.
            </summary>
            <value>
            The goldenrod.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Gray">
            <summary>
            Gets the gray.
            </summary>
            <value>
            The gray.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Green">
            <summary>
            Gets the green.
            </summary>
            <value>
            The green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.GreenYellow">
            <summary>
            Gets the green yellow.
            </summary>
            <value>
            The green yellow.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Honeydew">
            <summary>
            Gets the honeydew.
            </summary>
            <value>
            The honeydew.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.HotPink">
            <summary>
            Gets the hot pink.
            </summary>
            <value>
            The hot pink.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.IndianRed">
            <summary>
            Gets the indian red.
            </summary>
            <value>
            The indian red.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Indigo">
            <summary>
            Gets the indigo.
            </summary>
            <value>
            The indigo.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Ivory">
            <summary>
            Gets the ivory.
            </summary>
            <value>
            The ivory.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Khaki">
            <summary>
            Gets the khaki.
            </summary>
            <value>
            The khaki.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Lavender">
            <summary>
            Gets the lavender.
            </summary>
            <value>
            The lavender.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LavenderBlush">
            <summary>
            Gets the lavender blush.
            </summary>
            <value>
            The lavender blush.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LawnGreen">
            <summary>
            Gets the lawn green.
            </summary>
            <value>
            The lawn green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LemonChiffon">
            <summary>
            Gets the lemon chiffon.
            </summary>
            <value>
            The lemon chiffon.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightBlue">
            <summary>
            Gets the light blue.
            </summary>
            <value>
            The light blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightCoral">
            <summary>
            Gets the light coral.
            </summary>
            <value>
            The light coral.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightCyan">
            <summary>
            Gets the light cyan.
            </summary>
            <value>
            The light cyan.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightGoldenrodYellow">
            <summary>
            Gets the light goldenrod yellow.
            </summary>
            <value>
            The light goldenrod yellow.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightGray">
            <summary>
            Gets the light gray.
            </summary>
            <value>
            The light gray.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightGreen">
            <summary>
            Gets the light green.
            </summary>
            <value>
            The light green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightPink">
            <summary>
            Gets the light pink.
            </summary>
            <value>
            The light pink.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightSalmon">
            <summary>
            Gets the light salmon.
            </summary>
            <value>
            The light salmon.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightSeaGreen">
            <summary>
            Gets the light sea green.
            </summary>
            <value>
            The light sea green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightSkyBlue">
            <summary>
            Gets the light sky blue.
            </summary>
            <value>
            The light sky blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightSlateGray">
            <summary>
            Gets the light slate gray.
            </summary>
            <value>
            The light slate gray.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightSteelBlue">
            <summary>
            Gets the light steel blue.
            </summary>
            <value>
            The light steel blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LightYellow">
            <summary>
            Gets the light yellow.
            </summary>
            <value>
            The light yellow.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Lime">
            <summary>
            Gets the lime.
            </summary>
            <value>
            The lime.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.LimeGreen">
            <summary>
            Gets the lime green.
            </summary>
            <value>
            The lime green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Linen">
            <summary>
            Gets the linen.
            </summary>
            <value>
            The linen.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Magenta">
            <summary>
            Gets the magenta.
            </summary>
            <value>
            The magenta.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Maroon">
            <summary>
            Gets the maroon.
            </summary>
            <value>
            The maroon.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumAquamarine">
            <summary>
            Gets the medium aquamarine.
            </summary>
            <value>
            The medium aquamarine.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumBlue">
            <summary>
            Gets the medium blue.
            </summary>
            <value>
            The medium blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumOrchid">
            <summary>
            Gets the medium orchid.
            </summary>
            <value>
            The medium orchid.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumPurple">
            <summary>
            Gets the medium purple.
            </summary>
            <value>
            The medium purple.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumSeaGreen">
            <summary>
            Gets the medium sea green.
            </summary>
            <value>
            The medium sea green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumSlateBlue">
            <summary>
            Gets the medium slate blue.
            </summary>
            <value>
            The medium slate blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumSpringGreen">
            <summary>
            Gets the medium spring green.
            </summary>
            <value>
            The medium spring green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumTurquoise">
            <summary>
            Gets the medium turquoise.
            </summary>
            <value>
            The medium turquoise.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MediumVioletRed">
            <summary>
            Gets the medium violet red.
            </summary>
            <value>
            The medium violet red.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MidnightBlue">
            <summary>
            Gets the midnight blue.
            </summary>
            <value>
            The midnight blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MintCream">
            <summary>
            Gets the mint cream.
            </summary>
            <value>
            The mint cream.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.MistyRose">
            <summary>
            Gets the misty rose.
            </summary>
            <value>
            The misty rose.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Moccasin">
            <summary>
            Gets the moccasin.
            </summary>
            <value>
            The moccasin.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.NavajoWhite">
            <summary>
            Gets the navajo white.
            </summary>
            <value>
            The navajo white.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Navy">
            <summary>
            Gets the navy.
            </summary>
            <value>
            The navy.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.OldLace">
            <summary>
            Gets the old lace.
            </summary>
            <value>
            The old lace.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Olive">
            <summary>
            Gets the olive.
            </summary>
            <value>
            The olive.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.OliveDrab">
            <summary>
            Gets the olive drab.
            </summary>
            <value>
            The olive drab.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Orange">
            <summary>
            Gets the orange.
            </summary>
            <value>
            The orange.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.OrangeRed">
            <summary>
            Gets the orange red.
            </summary>
            <value>
            The orange red.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Orchid">
            <summary>
            Gets the orchid.
            </summary>
            <value>
            The orchid.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.PaleGoldenrod">
            <summary>
            Gets the pale goldenrod.
            </summary>
            <value>
            The pale goldenrod.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.PaleGreen">
            <summary>
            Gets the pale green.
            </summary>
            <value>
            The pale green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.PaleTurquoise">
            <summary>
            Gets the pale turquoise.
            </summary>
            <value>
            The pale turquoise.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.PaleVioletRed">
            <summary>
            Gets the pale violet red.
            </summary>
            <value>
            The pale violet red.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.PapayaWhip">
            <summary>
            Gets the papaya whip.
            </summary>
            <value>
            The papaya whip.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.PeachPuff">
            <summary>
            Gets the peach puff.
            </summary>
            <value>
            The peach puff.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Peru">
            <summary>
            Gets the peru.
            </summary>
            <value>
            The peru.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Pink">
            <summary>
            Gets the pink.
            </summary>
            <value>
            The pink.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Plum">
            <summary>
            Gets the plum.
            </summary>
            <value>
            The plum.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.PowderBlue">
            <summary>
            Gets the powder blue.
            </summary>
            <value>
            The powder blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Purple">
            <summary>
            Gets the purple.
            </summary>
            <value>
            The purple.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Red">
            <summary>
            Gets the red.
            </summary>
            <value>
            The red.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.RosyBrown">
            <summary>
            Gets the rosy brown.
            </summary>
            <value>
            The rosy brown.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.RoyalBlue">
            <summary>
            Gets the royal blue.
            </summary>
            <value>
            The royal blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SaddleBrown">
            <summary>
            Gets the saddle brown.
            </summary>
            <value>
            The saddle brown.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Salmon">
            <summary>
            Gets the salmon.
            </summary>
            <value>
            The salmon.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SandyBrown">
            <summary>
            Gets the sandy brown.
            </summary>
            <value>
            The sandy brown.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SeaGreen">
            <summary>
            Gets the sea green.
            </summary>
            <value>
            The sea green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SeaShell">
            <summary>
            Gets the sea shell.
            </summary>
            <value>
            The sea shell.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Sienna">
            <summary>
            Gets the sienna.
            </summary>
            <value>
            The sienna.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Silver">
            <summary>
            Gets the silver.
            </summary>
            <value>
            The silver.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SkyBlue">
            <summary>
            Gets the sky blue.
            </summary>
            <value>
            The sky blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SlateBlue">
            <summary>
            Gets the slate blue.
            </summary>
            <value>
            The slate blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SlateGray">
            <summary>
            Gets the slate gray.
            </summary>
            <value>
            The slate gray.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Snow">
            <summary>
            Gets the snow.
            </summary>
            <value>
            The snow.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SpringGreen">
            <summary>
            Gets the spring green.
            </summary>
            <value>
            The spring green.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.SteelBlue">
            <summary>
            Gets the steel blue.
            </summary>
            <value>
            The steel blue.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Tan">
            <summary>
            Gets the tan.
            </summary>
            <value>
            The tan.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Teal">
            <summary>
            Gets the teal.
            </summary>
            <value>
            The teal.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Thistle">
            <summary>
            Gets the thistle.
            </summary>
            <value>
            The thistle.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Tomato">
            <summary>
            Gets the tomato.
            </summary>
            <value>
            The tomato.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Transparent">
            <summary>
            Gets the transparent.
            </summary>
            <value>
            The transparent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Turquoise">
            <summary>
            Gets the turquoise.
            </summary>
            <value>
            The turquoise.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Violet">
            <summary>
            Gets the violet.
            </summary>
            <value>
            The violet.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Wheat">
            <summary>
            Gets the wheat.
            </summary>
            <value>
            The wheat.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.White">
            <summary>
            Gets the white.
            </summary>
            <value>
            The white.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.WhiteSmoke">
            <summary>
            Gets the white smoke.
            </summary>
            <value>
            The white smoke.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.Yellow">
            <summary>
            Gets the yellow.
            </summary>
            <value>
            The yellow.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Brushes.YellowGreen">
            <summary>
            Gets the yellow green.
            </summary>
            <value>
            The yellow green.
            </value>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.BrushMappingMode">
            <summary>
            Describes if values are absolute or relative to bounding box
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.BrushMappingMode.Absolute">
            <summary>
            The absolute
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.BrushMappingMode.RelativeToBoundingBox">
            <summary>
            The relative to bounding box
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Effects.CustomEffect">
            <summary>
            Implements empty class for custom effect shader
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.Media.Effects.Effect" />
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.CustomEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Effects.CustomEffect"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Effects.DirectionalBlurEffect">
            <summary>
            Implements Directional Blur effect
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.Media.Effects.Effect" />
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Effects.DirectionalBlurEffect.AngleProperty">
            <summary>
            The angle property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Effects.DirectionalBlurEffect.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
            <value>
            The angle.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Effects.DirectionalBlurEffect.BlurAmountProperty">
            <summary>
            The blur amount property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Effects.DirectionalBlurEffect.BlurAmount">
            <summary>
            Gets or sets the blur amount.
            </summary>
            <value>
            The blur amount.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.DirectionalBlurEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Effects.DirectionalBlurEffect"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.DirectionalBlurEffect.UpdateEffectParameters">
            <summary>
            Updates the effect parameters.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Effects.Effect">
            <summary>
            Implements Effect base class
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.Freezable" />
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Effects.Effect.EffectInstanceProperty">
            <summary>
            The effect instance property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Effects.Effect.EffectInstance">
            <summary>
            Gets or sets the effect instance.
            </summary>
            <value>
            The effect instance.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Effects.Effect.EffectAssetProperty">
            <summary>
            The effect asset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Effects.Effect.EffectAsset">
            <summary>
            Gets or sets the effect asset.
            </summary>
            <value>
            The effect asset.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.Effect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Effects.Effect" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.Effect.UpdateEffectParameters">
            <summary>
            Updates the effect parameters.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Effects.EffectManager">
            <summary>
            Implements manager for all effects
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Effects.EffectManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.EffectManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Media.Effects.EffectManager"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.EffectManager.AddEffect(System.String)">
            <summary>
            Adds the effect.
            </summary>
            <param name="effectName">Name of the effect.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.EffectManager.AddEffect(System.String,EmptyKeys.UserInterface.Media.EffectBase)">
            <summary>
            Adds the effect.
            </summary>
            <param name="effectName">Name of the effect.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.EffectManager.GetEffect(System.String)">
            <summary>
            Gets the effect.
            </summary>
            <param name="effectName">Name of the effect.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.EffectManager.LoadEffects(System.Object,System.String)">
            <summary>
            Loads the effects.
            </summary>
            <param name="contentManager">The content manager.</param>
            <param name="basePath">The base path.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Effects.EffectManager.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.EllipseGeometry">
            <summary>
            Implements Ellipse geometry generation (fill and stroke)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.EllipseGeometry.CenterProperty">
            <summary>
            The center property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.EllipseGeometry.Center">
            <summary>
            Gets or sets the center.
            </summary>
            <value>
            The center.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.EllipseGeometry.RadiusXProperty">
            <summary>
            The radius x property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.EllipseGeometry.RadiusX">
            <summary>
            Gets or sets the radius x.
            </summary>
            <value>
            The radius x.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.EllipseGeometry.RadiusYProperty">
            <summary>
            The radius y property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.EllipseGeometry.RadiusY">
            <summary>
            Gets or sets the radius y.
            </summary>
            <value>
            The radius y.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.EllipseGeometry.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.EllipseGeometry.IsEmpty">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.EllipseGeometry.MayHaveCurves">
            <summary>
            Mays the have curves, like rounded corners etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.EllipseGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.EllipseGeometry"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.EllipseGeometry.#ctor(EmptyKeys.UserInterface.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.EllipseGeometry"/> class.
            </summary>
            <param name="rect">The rect.</param>
            <exception cref="T:System.ArgumentException">Rectangle is empty.;rect</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.EllipseGeometry.#ctor(EmptyKeys.UserInterface.PointF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.EllipseGeometry"/> class.
            </summary>
            <param name="center">The center.</param>
            <param name="radiusX">The radius x.</param>
            <param name="radiusY">The radius y.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.EllipseGeometry.GetFillGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the fill geometry data.
            </summary>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="primitiveType"></param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.EllipseGeometry.GetStrokeGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the stroke geometry data.
            </summary>
            <param name="thickness">The thickness.</param>
            <param name="primitiveType"></param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.EllipseGeometry.Contains(EmptyKeys.UserInterface.PointF)">
            <summary>
            Determines whether [contains] [the specified local point].
            </summary>
            <param name="localPoint">The local point.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.FontFamily">
            <summary>
            Implements font family information
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.FontFamily.Source">
            <summary>
            Gets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.FontFamily.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.FontFamily"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.FontFamily.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.FontFamily"/> class.
            </summary>
            <param name="familyName">Name of the family.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.FontFamily.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.FontFamily.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.FontFamily.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.FontStyle">
            <summary>
            Font Style of the font (based on XNA Font Description Style)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.FontStyle.Regular">
            <summary>
            The regular
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.FontStyle.Italic">
            <summary>
            The italic
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.FontStyle.Bold">
            <summary>
            The bold
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Geometry">
            <summary>
            Implements abstract Geometry generator
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Geometry.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Geometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Geometry"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Geometry.IsEmpty">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Geometry.MayHaveCurves">
            <summary>
            Mays the have curves, like rounded corners etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Geometry.GetFillGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the fill geometry data.
            </summary>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="primitiveType">Type of the primitive.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Geometry.GetStrokeGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the stroke geometry data.
            </summary>
            <param name="thickness">The thickness.</param>
            <param name="primitiveType">Type of the primitive.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Geometry.Contains(EmptyKeys.UserInterface.PointF)">
            <summary>
            Determines whether [contains] [the specified local point].
            </summary>
            <param name="localPoint">The local point.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.ImageBrush">
            <summary>
            Implements brush with image
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.Media.Brush" />
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.ImageBrush.ImageSourceProperty">
            <summary>
            The image source property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.ImageBrush.ImageSource">
            <summary>
            Gets or sets the image source.
            </summary>
            <value>
            The image source.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.ImageBrush.ColorOverlayProperty">
            <summary>
            The color overlay property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.ImageBrush.GetColorOverlay(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the color overlay.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.ImageBrush.SetColorOverlay(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Media.ColorW)">
            <summary>
            Sets the color overlay.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.ImageBrush.StretchProperty">
            <summary>
            The stretch property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.ImageBrush.Stretch">
            <summary>
            Gets or sets the stretch.
            </summary>
            <value>
            The stretch.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.ImageBrush.ViewboxProperty">
            <summary>
            The viewbox property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.ImageBrush.Viewbox">
            <summary>
            Gets or sets the viewbox.
            </summary>
            <value>
            The viewbox.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.ImageBrush.ViewboxUnitsProperty">
            <summary>
            The viewbox units property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.ImageBrush.ViewboxUnits">
            <summary>
            Gets or sets the viewbox units.
            </summary>
            <value>
            The viewbox units.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.ImageBrush.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.ImageBrush"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.ImageBrush.Draw(EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.Renderers.Renderer,System.Double,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,System.Single)">
            <summary>
            Draws the specified texture.
            </summary>
            <param name="texture">The texture.</param>
            <param name="renderer">The renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="position">The position.</param>
            <param name="renderSize">Size of the render.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.ImageBrush.DrawGeometry(EmptyKeys.UserInterface.Media.GeometryBuffer,EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.Renderers.Renderer,System.Double,EmptyKeys.UserInterface.PointF,System.Single)">
            <summary>
            Draws the geometry.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="texture">The texture.</param>
            <param name="renderer">The renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="position">The position.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Imaging.BitmapImage">
            <summary>
            Implements image source loading and drawing
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.TextureProperty">
            <summary>
            The texture property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.TextureAssetProperty">
            <summary>
            The texture asset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.TextureAsset">
            <summary>
            Gets or sets the texture asset.
            </summary>
            <value>
            The texture asset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.PixelHeight">
            <summary>
            Gets the height of the pixel.
            </summary>
            <value>
            The height of the pixel.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.PixelWidth">
            <summary>
            Gets the width of the pixel.
            </summary>
            <value>
            The width of the pixel.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.Format">
            <summary>
            Gets the format.
            </summary>
            <value>
            The format.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.Imaging.BitmapImage"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.Draw(EmptyKeys.UserInterface.Renderers.Renderer,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.Media.ColorW,System.Single)">
            <summary>
            Draws image
            </summary>
            <param name="spriteRenderer">The sprite renderer.</param>
            <param name="position">The render position.</param>
            <param name="size">The size.</param>
            <param name="color">The color.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Imaging.BitmapImage.Draw(EmptyKeys.UserInterface.Renderers.Renderer,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.Media.ColorW,EmptyKeys.UserInterface.Rect,System.Single)">
            <summary>
            Draws image from source position
            </summary>
            <param name="spriteRenderer">The sprite renderer.</param>
            <param name="position">The position.</param>
            <param name="size">The size.</param>
            <param name="color">The color.</param>
            <param name="source">The source.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.LinearGradientBrush">
            <summary>
            Implement linear gradient brush
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.LinearGradientBrush.StartPointProperty">
            <summary>
            The start point property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.LinearGradientBrush.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
            <value>
            The start point.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.LinearGradientBrush.EndPointProperty">
            <summary>
            The end point property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.LinearGradientBrush.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.LinearGradientBrush.GradientStopsProperty">
            <summary>
            The gradient stops property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.LinearGradientBrush.GradientStops">
            <summary>
            Gets the gradient stops.
            </summary>
            <value>
            The gradient stops.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.LinearGradientBrush.SpreadMethodProperty">
            <summary>
            The spread method property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.LinearGradientBrush.SpreadMethod">
            <summary>
            Gets or sets the spread method.
            </summary>
            <value>
            The spread method.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LinearGradientBrush.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.LinearGradientBrush"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LinearGradientBrush.#ctor(EmptyKeys.UserInterface.Media.ColorW,EmptyKeys.UserInterface.Media.ColorW,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.LinearGradientBrush"/> class.
            </summary>
            <param name="startColor">The start color.</param>
            <param name="endColor">The end color.</param>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LinearGradientBrush.Draw(EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.Renderers.Renderer,System.Double,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,System.Single)">
            <summary>
            Draws the specified texture.
            </summary>
            <param name="texture">The texture.</param>
            <param name="renderer">The renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="position">The position.</param>
            <param name="renderSize">Size of the render.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LinearGradientBrush.DrawGeometry(EmptyKeys.UserInterface.Media.GeometryBuffer,EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.Renderers.Renderer,System.Double,EmptyKeys.UserInterface.PointF,System.Single)">
            <summary>
            Draws the geometry - used with shapes and geometry
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="texture">The texture.</param>
            <param name="renderer">The renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="position">The position.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.LineGeometry">
            <summary>
            Implements line geometry
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.LineGeometry.StartPointProperty">
            <summary>
            The start point property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.LineGeometry.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
            <value>
            The start point.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.LineGeometry.EndPointProperty">
            <summary>
            The end point property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.LineGeometry.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.LineGeometry.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LineGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.LineGeometry"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LineGeometry.#ctor(EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.LineGeometry"/> class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LineGeometry.IsEmpty">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LineGeometry.MayHaveCurves">
            <summary>
            Mays the have curves, like rounded corners etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LineGeometry.GetFillGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the fill geometry data.
            </summary>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="primitiveType">Type of the primitive.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LineGeometry.GetStrokeGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the stroke geometry data.
            </summary>
            <param name="thickness">The thickness.</param>
            <param name="primitiveType">Type of the primitive.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.LineGeometry.Contains(EmptyKeys.UserInterface.PointF)">
            <summary>
            Determines whether [contains] [the specified local point].
            </summary>
            <param name="localPoint">The local point.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.NullAudioDevice">
            <summary>
            Implements Null Audio Device, used for testing
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.NullAudioDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.NullAudioDevice"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.NullAudioDevice.CreateSound(System.Object)">
            <summary>
            Creates the sound.
            </summary>
            <param name="nativeSound">The native sound.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.NullSound">
            <summary>
            Implements Null Sound, used for testing
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.NullSound.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.NullSound.Volume">
            <summary>
            Gets or sets the volume.
            </summary>
            <value>
            The volume.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.NullSound.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.NullSound"/> class.
            </summary>
            <param name="nativeSound">The native sound.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.NullSound.Play">
            <summary>
            Plays this instance.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.NullSound.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.NullSound.Pause">
            <summary>
            Pauses this instance.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.PolyLineGeometry">
            <summary>
            Implements poly line geometry
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.PolyLineGeometry.PointsProperty">
            <summary>
            The points property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.PolyLineGeometry.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>
            The points.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.PolyLineGeometry.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.PolyLineGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.PolyLineGeometry"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.PolyLineGeometry.IsEmpty">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.PolyLineGeometry.MayHaveCurves">
            <summary>
            Mays the have curves, like rounded corners etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.PolyLineGeometry.GetFillGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the fill geometry data.
            </summary>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="primitiveType">Type of the primitive.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.PolyLineGeometry.GetStrokeGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the stroke geometry data.
            </summary>
            <param name="thickness">The thickness.</param>
            <param name="primitiveType">Type of the primitive.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.PolyLineGeometry.Contains(EmptyKeys.UserInterface.PointF)">
            <summary>
            Determines whether [contains] [the specified local point].
            </summary>
            <param name="localPoint">The local point.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.RectangleGeometry">
            <summary>
            Implements Rectangle geometry (fill and stroke)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.RectangleGeometry.RadiusXProperty">
            <summary>
            The radius x property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.RectangleGeometry.RadiusX">
            <summary>
            Gets or sets the radius x.
            </summary>
            <value>
            The radius x.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.RectangleGeometry.RadiusYProperty">
            <summary>
            The radius y property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.RectangleGeometry.RadiusY">
            <summary>
            Gets or sets the radius y.
            </summary>
            <value>
            The radius y.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.RectangleGeometry.RectProperty">
            <summary>
            The rect property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.RectangleGeometry.Rect">
            <summary>
            Gets or sets the rect.
            </summary>
            <value>
            The rect.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.RectangleGeometry.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.RectangleGeometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.RectangleGeometry"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.RectangleGeometry.#ctor(EmptyKeys.UserInterface.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.RectangleGeometry"/> class.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.RectangleGeometry.#ctor(EmptyKeys.UserInterface.Rect,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.RectangleGeometry"/> class.
            </summary>
            <param name="rect">The rect.</param>
            <param name="radiusX">The radius x.</param>
            <param name="radiusY">The radius y.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.RectangleGeometry.IsEmpty">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.RectangleGeometry.MayHaveCurves">
            <summary>
            Mays the have curves, like rounded corners etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.RectangleGeometry.GetFillGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the geometry data.
            </summary>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="primitiveType"></param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.RectangleGeometry.GetStrokeGeometryData(System.Single,EmptyKeys.UserInterface.Media.GeometryPrimitiveType@)">
            <summary>
            Gets the stroke geometry data.
            </summary>
            <param name="thickness">The thickness.</param>
            <param name="primitiveType"></param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.RectangleGeometry.Contains(EmptyKeys.UserInterface.PointF)">
            <summary>
            Determines whether [contains] [the specified local point].
            </summary>
            <param name="localPoint">The local point.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.SolidColorBrush">
            <summary>
            Implements Solid Color brush
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SolidColorBrush.ColorProperty">
            <summary>
            The color property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.SolidColorBrush.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SolidColorBrush.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.SolidColorBrush"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SolidColorBrush.#ctor(EmptyKeys.UserInterface.Media.ColorW)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.SolidColorBrush"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SolidColorBrush.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SolidColorBrush.Draw(EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.Renderers.Renderer,System.Double,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,System.Single)">
            <summary>
            Draws the specified texture.
            </summary>
            <param name="texture">The texture.</param>
            <param name="renderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="position">The position.</param>
            <param name="renderSize">Size of the render.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SolidColorBrush.DrawGeometry(EmptyKeys.UserInterface.Media.GeometryBuffer,EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.Renderers.Renderer,System.Double,EmptyKeys.UserInterface.PointF,System.Single)">
            <summary>
            Draws the geometry - used with shapes and geometry
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="texture">The texture.</param>
            <param name="renderer">The renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="position">The position.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.SoundManager">
            <summary>
            Implements sound manager for loading and indexing all sounds for UI
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.SoundManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundManager.SoundsProperty">
            <summary>
            The sounds property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.GetSounds(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the sounds.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundManager.IsSoundEnabledProperty">
            <summary>
            The is sound enabled property
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.GetIsSoundEnabled(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the is sound enabled.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.SetIsSoundEnabled(EmptyKeys.UserInterface.DependencyObject,System.Boolean)">
            <summary>
            Sets the is sound enabled.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.SoundManager.MasterVolume">
            <summary>
            Gets or sets the master volume.
            </summary>
            <value>
            The master volume.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Media.SoundManager"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.AddSound(System.String)">
            <summary>
            Adds the sound.
            </summary>
            <param name="soundAsset">The sound asset.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.GetSound(System.String)">
            <summary>
            Gets the sound.
            </summary>
            <param name="assetName">Name of the asset.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.LoadSounds(System.Object,System.String)">
            <summary>
            Loads the sounds.
            </summary>
            <param name="contentManager">The content manager.</param>
            <param name="basePath">The base path.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.PlaySoundSource(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Media.SoundType)">
            <summary>
            Plays the sound source.
            </summary>
            <param name="obj">The object.</param>
            <param name="soundType">Type of the sound.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundManager.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.SoundSource">
            <summary>
            Implements sound source for UI audio
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundSource.SoundProperty">
            <summary>
            The sound property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.SoundSource.Sound">
            <summary>
            Gets or sets the sound.
            </summary>
            <value>
            The sound.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundSource.SoundAssetProperty">
            <summary>
            The sound asset property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.SoundSource.SoundAsset">
            <summary>
            Gets or sets the sound asset.
            </summary>
            <value>
            The sound asset.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundSource.SoundTypeProperty">
            <summary>
            The sound type property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.SoundSource.SoundType">
            <summary>
            Gets or sets the type of the sound.
            </summary>
            <value>
            The type of the sound.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundSource.VolumeProperty">
            <summary>
            The volume property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.SoundSource.Volume">
            <summary>
            Gets or sets the volume.
            </summary>
            <value>
            The volume.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.SoundSource"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundSource.Play">
            <summary>
            Plays this instance.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.SoundSourceCollection">
            <summary>
            Implements collection for sound sources
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.SoundSourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Media.SoundSourceCollection"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.SoundType">
            <summary>
            Sound Types for UI
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.ButtonsClick">
            <summary>
            The buttons click
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.ButtonsHover">
            <summary>
            The buttons hover sound
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.ListBoxMove">
            <summary>
            The ListBox move
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.ListBoxSelect">
            <summary>
            The ListBox select
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.TextBoxKeyPress">
            <summary>
            The text box key press
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.TabControlMove">
            <summary>
            The tab control move
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.TabControlSelect">
            <summary>
            The tab control select
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.CheckBoxHover">
            <summary>
            The CheckBox hover
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.SoundType.RadioButtonHover">
            <summary>
            The RadioButton hover
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Stretch">
            <summary>
            Modes of content stretching
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Stretch.None">
            <summary>
            The none - content is not resized
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Stretch.Fill">
            <summary>
            The fill - content is resized to fill target size without preserving aspect ratio
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Stretch.Uniform">
            <summary>
            The uniform - content is resized, but content ratio is preserved
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Media.Stretch.UniformToFill">
            <summary>
            The uniform to fill - content is resized to fill target size, but content ration is preserved
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.Texture2DHelper">
            <summary>
            Implements helper classes for arrow and check box texture generator
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Texture2DHelper.GenerateArrow(System.Single,EmptyKeys.UserInterface.Media.ArrowDirection,System.Single)">
            <summary>
            Generates the arrow texture - special usage for scroll bar buttons or combo box
            </summary>
            <param name="size">The size.</param>
            <param name="direction">The direction.</param>
            <param name="dpiScale">The dpi scale.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.Texture2DHelper.GenerateCheckbox(System.Single,System.Single)">
            <summary>
            Generates the check box texture
            </summary>
            <param name="size">The size.</param>
            <param name="dpiScale">The dpi scale.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Media.VisualTreeHelper">
            <summary>
            Implements visual tree cache and helper methods
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Media.VisualTreeHelper.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Media.VisualTreeHelper"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.AddParentToCache(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Adds the parent to cache.
            </summary>
            <param name="parent">The parent.</param>
            <param name="child">The child.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.RemoveChild(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Removes the child.
            </summary>
            <param name="child">The child.</param>
            <param name="oldParent">The old parent.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.ClearParentCache">
            <summary>
            Clears the parent cache.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.GetAllParents">
            <summary>
            Gets all parents.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.GetChildren(EmptyKeys.UserInterface.DependencyObject)">
            <summary>
            Gets the children.
            </summary>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.FindElementByName(EmptyKeys.UserInterface.UIElement,System.String)">
            <summary>
            Finds the element
            </summary>
            <param name="parent">The parent.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.GetRoot">
            <summary>
            Gets the root.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Media.VisualTreeHelper.InvalidateMeasure(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Invalidates the measure of parent and all children in visual tree.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.MessageBox">
            <summary>
            Implements Message box for displaying window with text and buttons
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.MessageBox.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.MessageBox.DialogResult">
            <summary>
            Gets the dialog result.
            </summary>
            <value>
            The dialog result.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.MessageBox.ResultCommand">
            <summary>
            Gets the result command.
            </summary>
            <value>
            The result command.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.MessageBox.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.MessageBox"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.MessageBox.IsVisible">
            <summary>
            Determines whether Message Box is visible.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.MessageBox.SetStyle(EmptyKeys.UserInterface.Style)">
            <summary>
            Sets the style.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.MessageBox.Show(System.String,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.MessageBox.Show(System.String,System.String,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message with caption
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.MessageBox.Show(System.String,System.String,EmptyKeys.UserInterface.MessageBoxButton,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message with caption and specified buttons
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <param name="buttons">The buttons.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.MessageBoxButton">
            <summary>
            Describes buttons of message box
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxButton.OK">
            <summary>
            The OK button is displayed
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxButton.OKCancel">
            <summary>
            The OK and Cancel buttons are displayed
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxButton.YesNo">
            <summary>
            The Yes and No buttons are displayed
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxButton.YesNoCancel">
            <summary>
            The Yes, No and Cancel buttons are displayed
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.MessageBoxResult">
            <summary>
            Describes possible result of message box
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxResult.None">
            <summary>
            No result
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxResult.OK">
            <summary>
            The OK
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxResult.Yes">
            <summary>
            The Yes
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxResult.No">
            <summary>
            The No
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.MessageBoxResult.Cancel">
            <summary>
            The Cancel
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.MultiTrigger">
            <summary>
            Implements multi trigger
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.MultiTrigger.Conditions">
            <summary>
            Gets/Sets multi trigger conditions
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.MultiTrigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.MultiTrigger"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.MultiTrigger.IsEqual(EmptyKeys.UserInterface.MultiTrigger)">
            <summary>
            Checks if trigger is equal to other trigger
            </summary>
            <param name="trigger">other trigger</param>
            <returns>true when equal</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.MultiTrigger.HasPropertyCondition(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Checks if this trigger has condition with specified property
            </summary>
            <param name="property">property</param>
            <returns>true if it has condition</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.MultiTrigger.IsActive(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Is this trigger active on specified element
            </summary>
            <param name="element">element</param>
            <returns>true if it's active</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.MultiTrigger.CheckState(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Checks the state of the trigger
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.BindableBase">
            <summary>
            Implements INotifyPropertyChanged interface for easy binding of properties
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.BindableBase.IsDirty">
            <summary>
            Gets a value indicating whether this instance is dirty.
            </summary>
            <value>
              <c>true</c> if this instance is dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:EmptyKeys.UserInterface.Mvvm.BindableBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.BindableBase.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.BindableBase.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Sets the property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="storage">The storage.</param>
            <param name="value">The value.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.BindableBase.RaisePropertyChanged(System.String)">
            <summary>
            Raises the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.IClipboardService">
            <summary>
            Describes clipboard service interface
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IClipboardService.GetText">
            <summary>
            Gets the text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IClipboardService.SetText(System.String)">
            <summary>
            Sets the text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.IFileStorage">
            <summary>
            Describes file system storage service interface
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IFileStorage.SaveFileAsync(System.String,System.IO.Stream)">
            <summary>
            Saves the file asynchronous.
            </summary>
            <param name="filename">The filename.</param>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IFileStorage.SaveFileAsync(System.String,System.String)">
            <summary>
            Saves the file asynchronous.
            </summary>
            <param name="filename">The filename.</param>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IFileStorage.LoadFileStreamAsync(System.String)">
            <summary>
            Loads the file asynchronous.
            </summary>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IFileStorage.LoadFileTextAsync(System.String)">
            <summary>
            Loads the file asynchronous.
            </summary>
            <param name="filename">The filename.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.ILocalizationService">
            <summary>
            Describes localization service
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ILocalizationService.GetLocalizedString(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the localized string.
            </summary>
            <param name="key">The key.</param>
            <param name="cultureInfo">The culture information.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ILocalizationService.GetLocalizedImage(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the localized image.
            </summary>
            <param name="key">The key.</param>
            <param name="cultureInfo">The culture information.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ILocalizationService.GetLocalizedSound(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the localized sound.
            </summary>
            <param name="key">The key.</param>
            <param name="cultureInfo">The culture information.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.IMessageBoxService">
            <summary>
            Describes service for Message Box
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IMessageBoxService.Show(System.String,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IMessageBoxService.Show(System.String,System.String,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message with caption
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.IMessageBoxService.Show(System.String,System.String,EmptyKeys.UserInterface.MessageBoxButton,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message with caption and specified buttons
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <param name="buttons">The buttons.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.ITreeDataItem">
            <summary>
            Describes Tree Data Item interface for Tree View Items
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.ITreeDataItem.IsExpanded">
            <summary>
            Gets a value indicating whether tree view item is expanded.
            </summary>
            <value>
            <c>true</c> if tree view item is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.ITreeDataItem.IsSelected">
            <summary>
            Gets a value indicating whether tree view item is selected.
            </summary>
            <value>
            <c>true</c> if tree view item is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.ITreeDataItem.HasChildren">
            <summary>
            Gets a value indicating whether tree view item has children.
            </summary>
            <value>
            <c>true</c> if tree view item has children; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ITreeDataItem.GetChildren">
            <summary>
            Gets the children for tree view item
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.MessageBoxService">
            <summary>
            Implements default message box service
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.MessageBoxService.Show(System.String,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.MessageBoxService.Show(System.String,System.String,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message with caption
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.MessageBoxService.Show(System.String,System.String,EmptyKeys.UserInterface.MessageBoxButton,EmptyKeys.UserInterface.Input.ICommand,System.Boolean)">
            <summary>
            Shows the specified message with caption and specified buttons
            </summary>
            <param name="message">The message.</param>
            <param name="caption">The caption.</param>
            <param name="buttons">The buttons.</param>
            <param name="resultCommand">The result command.</param>
            <param name="onMousePosition">if set to <c>true</c> [on mouse position].</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.ServiceManager">
            <summary>
            Implements service management. This class is thread safe.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.ServiceManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ServiceManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:EmptyKeys.UserInterface.Mvvm.ServiceManager"/> class from being created.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ServiceManager.AddService``1(``0)">
            <summary>
            Adds the service.
            </summary>
            <typeparam name="T">Type of service</typeparam>
            <param name="serviceInstance">The service instance.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ServiceManager.GetService``1">
            <summary>
            Gets the service.
            </summary>
            <typeparam name="T">Type of service</typeparam>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ServiceManager.RemoveService``1">
            <summary>
            Removes the service.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.ViewModelBase">
            <summary>
            Implements base class for all MVVM View Models
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ViewModelBase.GetService``1">
            <summary>
            Gets the service.
            </summary>
            <typeparam name="T">Type of service</typeparam>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.ViewModelLocatorBase`1">
            <summary>
            Implements view model locator base class 
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.ViewModelLocatorBase`1.IsInDesignMode">
            <summary>
            Gets or sets a value indicating whether this instance is in design mode.
            </summary>
            <value>
            <c>true</c> if this instance is in design mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.ViewModelLocatorBase`1.ViewModel">
            <summary>
            Gets the view model.
            </summary>
            <value>
            The view model.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.ViewModelLocatorBase`1.RuntimeViewModel">
            <summary>
            Gets or sets the runtime view model.
            </summary>
            <value>
            The runtime view model.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.ViewModelLocatorBase`1.DesignViewModel">
            <summary>
            Gets or sets the design view model.
            </summary>
            <value>
            The design view model.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ViewModelLocatorBase`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Mvvm.ViewModelLocatorBase`1"/> class.
            </summary>
            <param name="isDesignMode">if set to <c>true</c> [is design mode].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.ViewModelLocatorBase`1.Initialize(System.Boolean)">
            <summary>
            Initializes the specified is design mode.
            </summary>
            <param name="isDesignMode">if set to <c>true</c> [is design mode].</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Mvvm.WindowViewModel">
            <summary>
            Implements view model base for Window in MVVM
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.MinHeight">
            <summary>
            Gets or sets the minimum height.
            </summary>
            <value>
            The minimum height.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.MinWidth">
            <summary>
            Gets or sets the minimum width.
            </summary>
            <value>
            The minimum width.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>
            The opacity.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            <c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.IsHitTestVisible">
            <summary>
            Gets or sets a value indicating whether this instance is hit test visible.
            </summary>
            <value>
            <c>true</c> if this instance is hit test visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.IsOnTop">
            <summary>
            Gets or sets a value indicating whether this instance is on top.
            </summary>
            <value>
              <c>true</c> if this instance is on top; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.CanResize">
            <summary>
            Gets or sets a value indicating whether this instance can resize.
            </summary>
            <value>
            <c>true</c> if this instance can resize; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Mvvm.WindowViewModel.WindowTemplateResourceKey">
            <summary>
            Gets the window template resource key.
            </summary>
            <value>
            The window template resource key.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.WindowViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Mvvm.WindowViewModel"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Mvvm.WindowViewModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Mvvm.WindowViewModel"/> class.
            </summary>
            <param name="windowTemplateResourceKey">The window template resource key.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.NullAssetManager">
            <summary>
            Implements Null asset manager, used for testing
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.NullAssetManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.NullAssetManager" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.NullAssetManager.LoadTexture(System.Object,System.String)">
            <summary>
            Loads the texture.
            </summary>
            <param name="contentManager">The content manager.</param>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.NullAssetManager.LoadFont(System.Object,System.String)">
            <summary>
            Loads the font.
            </summary>
            <param name="contentManager">The content manager.</param>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.NullAssetManager.LoadSound(System.Object,System.String)">
            <summary>
            Loads the sound.
            </summary>
            <param name="contentManager">The content manager.</param>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.NullAssetManager.LoadEffect(System.Object,System.String)">
            <summary>
            Loads the effect.
            </summary>
            <param name="contentManager">The content manager.</param>
            <param name="file">The file.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:EmptyKeys.UserInterface.NullEngine">
            <summary>
            Implements null Engine used for testing
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.NullEngine.Renderer">
            <summary>
            Gets the renderer.
            </summary>
            <value>
            The renderer.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.NullEngine.AudioDevice">
            <summary>
            Gets the audio device.
            </summary>
            <value>
            The audio device.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.NullEngine.AssetManager">
            <summary>
            Gets the asset manager.
            </summary>
            <value>
            The asset manager.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.NullEngine.InputDevice">
            <summary>
            Gets the input device.
            </summary>
            <value>
            The input device.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.NullEngine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.NullEngine"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.NullEngine.Update">
            <inheritdoc/>
        </member>
        <member name="T:EmptyKeys.UserInterface.Orientation">
            <summary>
            Orientation definition for controls
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Orientation.Horizontal">
            <summary>
            The horizontal
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Orientation.Vertical">
            <summary>
            The vertical
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Renderers.NullRenderer">
            <summary>
            Implements Null renderer
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.Renderers.Renderer" />
        </member>
        <member name="P:EmptyKeys.UserInterface.Renderers.NullRenderer.Log">
            <summary>
            Gets the log.
            </summary>
            <value>
            The log.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Renderers.NullRenderer.IsFullScreen">
            <summary>
            Gets a value indicating whether is full screen.
            </summary>
            <value>
              <c>true</c> if is full screen; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Renderers.NullRenderer" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.Begin">
            <summary>
            Begins the rendering
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.Begin(EmptyKeys.UserInterface.Media.EffectBase)">
            <summary>
            Begins the rendering with custom effect
            </summary>
            <param name="effect"></param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.DrawText(EmptyKeys.UserInterface.Media.FontBase,System.String,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.Media.ColorW,EmptyKeys.UserInterface.PointF,System.Single)">
            <summary>
            Draws the text.
            </summary>
            <param name="font">The font.</param>
            <param name="text">The text.</param>
            <param name="position">The position.</param>
            <param name="renderSize">Size of the render.</param>
            <param name="color">The color.</param>
            <param name="scale">The scale.</param>
            <param name="depth">The depth.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.End(System.Boolean)">
            <summary>
            Ends rendering
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.Draw(EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.Media.ColorW,System.Boolean)">
            <summary>
            Draws the specified texture.
            </summary>
            <param name="texture">The texture.</param>
            <param name="position">The position.</param>
            <param name="renderSize">Size of the render.</param>
            <param name="color">The color.</param>
            <param name="centerOrigin">if set to <c>true</c> [center origin].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.BeginClipped(EmptyKeys.UserInterface.Rect)">
            <summary>
            Begins the clipped.
            </summary>
            <param name="clipRect">The clip rect.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.BeginClipped(EmptyKeys.UserInterface.Rect,EmptyKeys.UserInterface.Media.EffectBase)">
            <summary>
            Begins the clipped rendering with custom effect
            </summary>
            <param name="clipRect">The clip rect.</param>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.EndClipped(System.Boolean)">
            <summary>
            Ends the clipped drawing
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.Draw(EmptyKeys.UserInterface.Media.TextureBase,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size,EmptyKeys.UserInterface.Media.ColorW,EmptyKeys.UserInterface.Rect,System.Boolean)">
            <summary>
            Draws the specified texture.
            </summary>
            <param name="texture">The texture.</param>
            <param name="position">The position.</param>
            <param name="renderSize">Size of the render.</param>
            <param name="color">The color.</param>
            <param name="source">The source.</param>
            <param name="centerOrigin">if set to <c>true</c> [center origin].</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.GetViewport">
            <summary>
            Gets the viewport.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.CreateTexture(System.Object)">
            <summary>
            Creates the texture.
            </summary>
            <param name="nativeTexture">The native texture.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.CreateTexture(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates the texture.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="mipmap">if set to <c>true</c> [mipmap].</param>
            <param name="dynamic">if set to <c>true</c> [dynamic].</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.CreateFont(System.Object)">
            <summary>
            Creates the font.
            </summary>
            <param name="nativeFont">The native font.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.ResetNativeSize">
            <summary>
            Resets the size of the native. Sets NativeScreenWidth and NativeScreenHeight based on active back buffer
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.CreateGeometryBuffer">
            <summary>
            Creates the geometry buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.DrawGeometryColor(EmptyKeys.UserInterface.Media.GeometryBuffer,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Media.ColorW,System.Single,System.Single)">
            <summary>
            Draws the geometry - color
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
            <param name="opacity">The opacity.</param>
            <param name="depth">The depth.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.DrawGeometryTexture(EmptyKeys.UserInterface.Media.GeometryBuffer,EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Media.TextureBase,System.Single,System.Single)">
            <summary>
            Draws the geometry - texture.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="position">The position.</param>
            <param name="texture">The texture.</param>
            <param name="opacity">The opacity.</param>
            <param name="depth">The depth.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.IsClipped(EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size)">
            <summary>
            Determines whether the specified rectangle is outside of clip bounds
            </summary>
            <param name="position">The position.</param>
            <param name="renderSize">Size of the render.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.CreateEffect(System.Object)">
            <summary>
            Creates the effect.
            </summary>
            <param name="nativeEffect">The native effect.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Renderers.NullRenderer.GetSDFFontEffect">
            <summary>
            Gets the SDF font effect.
            </summary>
            <returns></returns>        
        </member>
        <member name="T:EmptyKeys.UserInterface.RequestBringIntoViewEventArgs">
            <summary>
            Implements event arguments for request bring into view routed event
            </summary>
            <seealso cref="T:EmptyKeys.UserInterface.RoutedEventArgs" />
        </member>
        <member name="P:EmptyKeys.UserInterface.RequestBringIntoViewEventArgs.TargetObject">
            <summary>
            Gets or sets the target object.
            </summary>
            <value>
            The target object.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RequestBringIntoViewEventArgs.TargetRect">
            <summary>
            Gets or sets the target rect.
            </summary>
            <value>
            The target rect.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.RequestBringIntoViewEventArgs.#ctor(EmptyKeys.UserInterface.DependencyObject,EmptyKeys.UserInterface.Rect)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.RequestBringIntoViewEventArgs"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="targetRect">The target rect.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="genericHandler">The generic handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.ResourceDictionary">
            <summary>
            Implements dictionary for resources. This collection is thread safe.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.DefaultDictionary">
            <summary>
            Gets the default dictionary.
            </summary>
            <value>
            The default dictionary.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, false.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.
            </summary>
            <returns>An <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.
            </summary>
            <returns>An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.MergedDictionaries">
            <summary>
            Gets the merged dictionaries.
            </summary>
            <value>
            The merged dictionaries.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.ResourceDictionary"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.
            </summary>
            <param name="key">The <see cref="T:System.Object" /> to use as the key of the element to add.</param>
            <param name="value">The <see cref="T:System.Object" /> to use as the value of the element to add.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.Clear">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.IDictionary" /> object.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</param>
            <returns>
            true if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, false.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" /> object.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceDictionary.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.TryGetValue(System.Object,System.Object@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.ResourceReferenceExpression">
            <summary>
            Implements dependency property value with reference to resource
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.ResourceReferenceExpression.ResourceKey">
            <summary>
            Gets the resource key.
            </summary>
            <value>
            The resource key.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceReferenceExpression.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.ResourceReferenceExpression"/> class.
            </summary>
            <param name="resourceKey">The resource key.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.ResourceReferenceExpression.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.RoutedEvent">
            <summary>
            Implements routed event informations
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEvent.RegisteredEventsCount">
            <summary>
            Gets the registered events count.
            </summary>
            <value>
            The registered events count.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEvent.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEvent.RoutingStrategy">
            <summary>
            Gets the routing strategy.
            </summary>
            <value>
            The routing strategy.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEvent.HandlerType">
            <summary>
            Gets the type of the handler.
            </summary>
            <value>
            The type of the handler.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEvent.OwnerType">
            <summary>
            Gets the type of the owner.
            </summary>
            <value>
            The type of the owner.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEvent.GlobalIndex">
            <summary>
            Gets the index of the global.
            </summary>
            <value>
            The index of the global.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedEvent.#ctor(System.String,EmptyKeys.UserInterface.RoutingStrategy,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.RoutedEvent"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="routingStrategy">The routing strategy.</param>
            <param name="handlerType">Type of the handler.</param>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedEvent.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.RoutedEventArgs">
            <summary>
            Routed Event arguments class
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEventArgs.RoutedEvent">
            <summary>
            Gets or sets the routed event.
            </summary>
            <value>
            The routed event.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> is handled.
            </summary>
            <value>
              <c>true</c> if handled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedEventArgs.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedEventArgs.#ctor(EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedEventArgs.#ctor(EmptyKeys.UserInterface.RoutedEvent,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1">
            <summary>
            Implements arguments for routed property changes
            </summary>
            <typeparam name="T">Type of the value</typeparam>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value.
            </summary>
            <value>
            The old value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>
            The new value.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1"/> class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,EmptyKeys.UserInterface.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1"/> class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            Invokes the event handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.RouteItem.Target">
            <summary>
            Gets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.RouteItem.#ctor(System.Object,System.Delegate)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.RouteItem"/> struct.
            </summary>
            <param name="target">The target.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.RouteItem.InvokeHandler(EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Invokes the handler.
            </summary>
            <param name="routedEventArgs">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.RoutingStrategy">
            <summary>
            Routing Strategy types
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.RoutingStrategy.Tunnel">
            <summary>
            Tunnel routing (top down)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.RoutingStrategy.Bubble">
            <summary>
            Bubble routing (bottom up)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.RoutingStrategy.Direct">
            <summary>
            Direct routing
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Setter">
            <summary>
            Setter class contains information, which property should be set and what value on specified target
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Setter.Property">
            <summary>
            Gets or sets the property.
            </summary>
            <value>
            The property.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Setter.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Setter.TargetName">
            <summary>
            Gets or sets the name of the target.
            </summary>
            <value>
            The name of the target.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Setter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Setter"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Setter.#ctor(EmptyKeys.UserInterface.DependencyProperty,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Setter"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Setter.#ctor(EmptyKeys.UserInterface.DependencyProperty,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Setter"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <param name="targetName">Name of the target.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Shapes.Ellipse">
            <summary>
            Implements Ellipse shape
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Ellipse.RenderedGeometry">
            <summary>
            Gets the rendered geometry.
            </summary>
            <value>
            The rendered geometry.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Ellipse.DefiningGeometry">
            <summary>
            Gets the defining geometry.
            </summary>
            <value>
            The defining geometry.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Ellipse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Shapes.Ellipse"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Ellipse.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Ellipse.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Shapes.Line">
            <summary>
            Implements Line shape
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Line.X1Property">
            <summary>
            The x1 property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Line.X1">
            <summary>
            Gets or sets the x1.
            </summary>
            <value>
            The x1.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Line.X2Property">
            <summary>
            The x2 property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Line.X2">
            <summary>
            Gets or sets the x2.
            </summary>
            <value>
            The x2.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Line.Y1Property">
            <summary>
            The y1 property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Line.Y1">
            <summary>
            Gets or sets the y1.
            </summary>
            <value>
            The y1.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Line.Y2Property">
            <summary>
            The y2 property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Line.Y2">
            <summary>
            Gets or sets the y2.
            </summary>
            <value>
            The y2.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Line.DefiningGeometry">
            <summary>
            Gets the defining geometry.
            </summary>
            <value>
            The defining geometry.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Line.RenderedGeometry">
            <summary>
            Gets the rendered geometry.
            </summary>
            <value>
            The rendered geometry.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Line.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Shapes.Line"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Line.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Shapes.Path">
            <summary>
            Implements Path shape
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Path.DataProperty">
            <summary>
            The data property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Path.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Path.DefiningGeometry">
            <summary>
            Gets the defining geometry.
            </summary>
            <value>
            The defining geometry.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Path.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Shapes.Path"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Shapes.Rectangle">
            <summary>
            Implements Rectangle shape
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Rectangle.RadiusXProperty">
            <summary>
            The radius x property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Rectangle.RadiusX">
            <summary>
            Gets or sets the radius x.
            </summary>
            <value>
            The radius x.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Rectangle.RadiusYProperty">
            <summary>
            The radius y property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Rectangle.RadiusY">
            <summary>
            Gets or sets the radius y.
            </summary>
            <value>
            The radius y.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Rectangle.RenderedGeometry">
            <summary>
            Gets the rendered geometry.
            </summary>
            <value>
            The rendered geometry.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Rectangle.DefiningGeometry">
            <summary>
            Gets the defining geometry.
            </summary>
            <value>
            The defining geometry.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Rectangle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Shapes.Rectangle"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Rectangle.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Rectangle.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Shapes.Shape">
            <summary>
            Implements abstract base class for all shapes
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Shape.StretchProperty">
            <summary>
            The stretch property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Shape.Stretch">
            <summary>
            Gets or sets the stretch.
            </summary>
            <value>
            The stretch.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Shape.FillProperty">
            <summary>
            The fill property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Shape.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Shape.StrokeProperty">
            <summary>
            The stroke property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Shape.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Shapes.Shape.StrokeThicknessProperty">
            <summary>
            The stroke thickness property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Shape.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Shape.RenderedGeometry">
            <summary>
            Gets the rendered geometry.
            </summary>
            <value>
            The rendered geometry.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Shapes.Shape.DefiningGeometry">
            <summary>
            Gets the defining geometry.
            </summary>
            <value>
            The defining geometry.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Shape.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Shapes.Shape"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Shape.GeometryHitTest(EmptyKeys.UserInterface.PointF)">
            <summary>
            Geometries the hit test.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Shape.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Shape.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Shapes.Shape.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="renderer">The renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.Style">
            <summary>
            Style implements features for changing visual appearance of controls by changing values of properties based on triggers and setters
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Style.BasedOn">
            <summary>
            Gets the based on.
            </summary>
            <value>
            The based on.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Style.Setters">
            <summary>
            Gets the setters.
            </summary>
            <value>
            The setters.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Style.TargetType">
            <summary>
            Gets or sets the type of the target.
            </summary>
            <value>
            The type of the target.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Style.Triggers">
            <summary>
            Gets the triggers.
            </summary>
            <value>
            The triggers.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Style.IsSealed">
            <summary>
            Gets a value indicating whether this instance is sealed.
            </summary>
            <value>
              <c>true</c> if this instance is sealed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.Style.GlobalIndex">
            <summary>
            Gets or sets the index of the global.
            </summary>
            <value>
            The index of the global.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Style.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Style"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Style.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Style"/> class.
            </summary>
            <param name="targetType">Type of the target.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Style.#ctor(System.Type,EmptyKeys.UserInterface.Style)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Style"/> class.
            </summary>
            <param name="targetType">Type of the target.</param>
            <param name="basedOn">The based on.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Style.UpdateUniqueGlobalIndex">
            <summary>
            Updates the index of the unique global.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Style.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Style.Seal">
            <summary>
            Seals this instance.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.StyleHelper">
            <summary>
            Implements style helper methods
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.StyleHelper.UpdateStyle(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.Style,EmptyKeys.UserInterface.Style)">
            <summary>
            Updates the style.
            </summary>
            <param name="element">The element.</param>
            <param name="oldStyle">The old style.</param>
            <param name="newStyle">The new style.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.StyleHelper.UpdateTriggers(EmptyKeys.UserInterface.UIElement,System.Collections.Generic.List{EmptyKeys.UserInterface.TriggerBase})">
            <summary>
            Updates the triggers.
            </summary>
            <param name="element">The element.</param>
            <param name="triggers">The triggers.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.StyleHelper.ProcessTriggers(EmptyKeys.UserInterface.UIElement,EmptyKeys.UserInterface.DependencyProperty,System.Collections.Generic.List{EmptyKeys.UserInterface.TriggerBase})">
            <summary>
            Processes the triggers.
            </summary>
            <param name="element">The element.</param>
            <param name="changedProperty">The changed property.</param>
            <param name="triggers">The triggers.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.StyleHelper.FindNameInTemplateContent(EmptyKeys.UserInterface.UIElement,System.String,EmptyKeys.UserInterface.Controls.ControlTemplate)">
            <summary>
            Finds element inside template based on name
            </summary>
            <param name="parent">The parent.</param>
            <param name="childName">Name of the child.</param>
            <param name="template">The template.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.TextAlignment">
            <summary>
            Text alignment (inside of control space)
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.TextAlignment.Center">
            <summary>
            Text in center
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.TextAlignment.Left">
            <summary>
            Text on the left
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.TextAlignment.Right">
            <summary>
            Text on the right
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.TextAlignment.Justify">
            <summary>
            Text justified - not supported
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ButtonStyle">
            <summary>
            Default button style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ButtonStyle.CreateButtonStyle">
            <summary>
            Creates the button style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ButtonStyle.CreateControlTemplate">
            <summary>
            Creates the default control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ChartStyle">
            <summary>
            Implements Chart control default style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ChartStyle.CreateChartStyle">
            <summary>
            Creates the chart style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ChartStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.CheckBoxStyle">
            <summary>
            Default Check Box style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CheckBoxStyle.CreateCheckBoxStyle">
            <summary>
            Creates the CheckBox style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CheckBoxStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ComboBoxStyle">
            <summary>
            Default Combo Box Style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ComboBoxStyle.CreateComboBoxItemStyle">
            <summary>
            Creates the ComboBox item style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ComboBoxStyle.CreateComboBoxItemControlTemplate">
            <summary>
            Creates the ComboBox item control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ComboBoxStyle.CreateComboBoxStyle">
            <summary>
            Creates the ComboBox style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ComboBoxStyle.CreateComboBoxControlTemplate">
            <summary>
            Creates the ComboBox control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.CommonHelpers">
            <summary>
            Theme helpers for creating themes and styles
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CommonHelpers.CreateStyles(EmptyKeys.UserInterface.ResourceDictionary)">
            <summary>
            Creates the styles for UI controls
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CommonHelpers.CreateLocalizationResources(EmptyKeys.UserInterface.ResourceDictionary)">
            <summary>
            Creates the localization resources.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CommonHelpers.CreateContentPresenter(EmptyKeys.UserInterface.UIElement,System.String)">
            <summary>
            Creates the content presenter.
            </summary>
            <param name="source">The source.</param>
            <param name="contentBindingString">The content binding string.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CommonHelpers.CreateBackgroundBorderForegroundTrigger(EmptyKeys.UserInterface.DependencyProperty,System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the background border foreground trigger.
            </summary>
            <param name="triggerProperty">The trigger property.</param>
            <param name="triggerValue">The trigger value.</param>
            <param name="backgroundKey">The background key.</param>
            <param name="borderKey">The border key.</param>
            <param name="foregroundKey">The foreground key.</param>
            <param name="targetName">Name of the target.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CommonHelpers.CreateBackgroundBorderForegroundMultiTrigger(System.Collections.Generic.List{EmptyKeys.UserInterface.TriggerCondition},System.String,System.String,System.String,System.String)">
            <summary>
            Creates the background border foreground multi trigger.
            </summary>
            <param name="conditions">Trigger conditions</param>
            <param name="backgroundKey">background resource kye</param>
            <param name="borderKey">border resource key</param>
            <param name="foregroundKey">foreground resource key</param>
            <param name="targetName">target name</param>
            <returns>new multi trigger</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CommonHelpers.CreateMarginAlignmentContentPresenter(EmptyKeys.UserInterface.UIElement,System.String,System.String)">
            <summary>
            Creates the margin alignment content presenter.
            </summary>
            <param name="parent">The parent.</param>
            <param name="contentBindingString">The content binding string.</param>
            <param name="presenterName">Name of the presenter.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.CommonHelpers.CreatePaddingAlignmentContentPresenter(EmptyKeys.UserInterface.UIElement,System.String,System.String)">
            <summary>
            Creates the padding alignment content presenter.
            </summary>
            <param name="parent">The parent.</param>
            <param name="contentBindingString">The content binding string.</param>
            <param name="presenterName">Name of the presenter.</param>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.CommonResourceKeys">
            <summary>
            Default resource keys for all styles
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.AccentColorBrushKey">
            <summary>
            The accent color brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.AccentColorKey">
            <summary>
            The accent color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonTextColorKey">
            <summary>
            The button text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonTextDisabledColorKey">
            <summary>
            The button text disabled color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBackgroundDisableBrushKey">
            <summary>
            The button background disable brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBorderDisableBrushKey">
            <summary>
            The button border disable brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonTextPressedColorKey">
            <summary>
            The button text pressed color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonTextHoverColorKey">
            <summary>
            The button text hover color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBackgroundBrushKey">
            <summary>
            The button background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBorderBrushKey">
            <summary>
            The button border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBackgroundPressedBrushKey">
            <summary>
            The button background pressed brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBorderPressedBrushKey">
            <summary>
            The button border pressed brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBackgroundHoverBrushKey">
            <summary>
            The button background hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBorderHoverBrushKey">
            <summary>
            The button border hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBackgroundFocusedBrushKey">
            <summary>
            The button background focused brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonBorderFocusedBrushKey">
            <summary>
            The button border focused brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ButtonTextFocusedColorKey">
            <summary>
            The button text focused color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ItemTextColorKey">
            <summary>
            The item text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ItemTextHoverColorKey">
            <summary>
            The item text hover color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ItemTextSelectedColorKey">
            <summary>
            The item text selected color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ItemTextDisabledColorKey">
            <summary>
            The item text disabled color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ItemBackgroundDisabledBrushKey">
            <summary>
            The item background disabled brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ItemBackgroundHoverBrushKey">
            <summary>
            The item background hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ItemBackgroundBrushKey">
            <summary>
            The item background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ItemSelectedBrushKey">
            <summary>
            The item selected brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.CheckBoxBorderBrushKey">
            <summary>
            The CheckBox border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.CheckBoxBackgroundBrushKey">
            <summary>
            The CheckBox background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.CheckBoxTextColorKey">
            <summary>
            The CheckBox text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.CheckBoxBackgroundHoverBrushKey">
            <summary>
            The CheckBox background hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ThirdStateCheckBoxBrushKey">
            <summary>
            The third state CheckBox brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ProgressBarBackgroundBrushKey">
            <summary>
            The progress bar background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ProgressBarForegroundColorKey">
            <summary>
            The progress bar foreground color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.WindowBorderBrushKey">
            <summary>
            The window border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.WindowBackgroundBrushKey">
            <summary>
            The window background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.WindowTextColorKey">
            <summary>
            The window text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.WindowActiveBrushKey">
            <summary>
            The window active brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.WindowResizeThumbKey">
            <summary>
            The window resize thumb key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TabItemBackgroundBrushKey">
            <summary>
            The tab item background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TabItemBorderBrushKey">
            <summary>
            The tab item border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TabItemHeaderTextColorKey">
            <summary>
            The tab item text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TabControlBorderBrushKey">
            <summary>
            The tab control border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RootTextColorKey">
            <summary>
            The root text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RootBackgroundBrushKey">
            <summary>
            The root background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ScrollBarThumbBackgroundKey">
            <summary>
            The scroll bar thumb background key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ScrollBarThumbBorderBrushKey">
            <summary>
            The scroll bar thumb border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ScrollBarThumbHoverBackgroundKey">
            <summary>
            The scroll bar thumb hover background key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.CheckImageBrushKey">
            <summary>
            The check image brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ArrowUpBrushKey">
            <summary>
            The arrow up brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ArrowDownBrushKey">
            <summary>
            The arrow down brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ArrowLeftBrushKey">
            <summary>
            The arrow left brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ArrowRightBrushKey">
            <summary>
            The arrow right brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridHeaderBackgroundBrushKey">
            <summary>
            The data grid header background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridHeaderBackgroundHoverBrushKey">
            <summary>
            The data grid header background hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridHeaderBackgroundPressedBrushKey">
            <summary>
            The data grid header background pressed brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridHeaderForegroundColorKey">
            <summary>
            The data grid header foreground color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridHeaderForegroundHoverColorKey">
            <summary>
            The data grid header foreground hover color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridHeaderForegroundPressedColorKey">
            <summary>
            The data grid header foreground pressed color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridRowBackgroundBrushKey">
            <summary>
            The data grid row background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridRowBackgroundHoverBrushKey">
            <summary>
            The data grid row background hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridRowBackgroundSelectedBrushKey">
            <summary>
            The data grid row background selected brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridRowForegroundColorKey">
            <summary>
            The data grid row foreground color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridRowForegroundSelectedColorKey">
            <summary>
            The data grid row foreground selected color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.DataGridRowBorderBrushKey">
            <summary>
            The data grid row border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.MessageBoxButtonOkKey">
            <summary>
            The message box button OK key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.MessageBoxButtonYesKey">
            <summary>
            The message box button yes key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.MessageBoxButtonNoKey">
            <summary>
            The message box button no key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.MessageBoxButtonCancelKey">
            <summary>
            The message box button cancel key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxBorderHoverBrushKey">
            <summary>
            The ComboBox border hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxItemHoverBrushKey">
            <summary>
            The ComboBox item hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxItemHoverColorKey">
            <summary>
            The ComboBox item hover color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxBackgroundBrushKey">
            <summary>
            The ComboBox background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxBorderBrushKey">
            <summary>
            The ComboBox border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxTextColorKey">
            <summary>
            The ComboBox text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxArrowDownBrushKey">
            <summary>
            The ComboBox arrow down brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxTextDisabledColorKey">
            <summary>
            The ComboBox text disabled color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxItemHighlightedBrushKey">
            <summary>
            The ComboBox item highlighted brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ComboBoxPopupBorderBrushKey">
            <summary>
            The ComboBox popup border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderButtonBackgroundBrushKey">
            <summary>
            The expander button background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderButtonBorderBrushKey">
            <summary>
            The expander button border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderButtonTextColorKey">
            <summary>
            The expander button text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderArrowRightBrushKey">
            <summary>
            The expander arrow right brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderArrowDownBrushKey">
            <summary>
            The expander arrow down brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderButtonTextDisabledColorKey">
            <summary>
            The expander button text disabled color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderButtonBackgroundHoverBrushKey">
            <summary>
            The expander button background hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderButtonBorderHoverBrushKey">
            <summary>
            The expander button border hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ExpanderButtonTextHoverColorKey">
            <summary>
            The expander button text hover color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.SliderTrackBackgroundBrushKey">
            <summary>
            The slider track background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.SliderThumbBrushKey">
            <summary>
            The slider thumb brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TextBoxBackgroundBrushKey">
            <summary>
            The text box background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TextBoxBorderBrushKey">
            <summary>
            The text box border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TextBoxTextColorKey">
            <summary>
            The text box text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TextBoxTextDisabledColorKey">
            <summary>
            The text box text disabled color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.TextBoxFocusedBrushKey">
            <summary>
            The text box focused brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ToolTipTextColorKey">
            <summary>
            The tool tip text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ToolTipBorderBrushKey">
            <summary>
            The tool tip border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ToolTipBackgroundBrushKey">
            <summary>
            The tool tip background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.MessageBoxWindowStyleKey">
            <summary>
            The message box window style key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RadioButtonTextColorKey">
            <summary>
            The RadioButton text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RadioButtonBorderFocusedBrushKey">
            <summary>
            The RadioButton focused brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RadioButtonCheckedBrushKey">
            <summary>
            The RadioButton checked brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RadioButtonBackgroundHoverBrushKey">
            <summary>
            The RadioButton background hover brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RadioButtonTextHoverColorKey">
            <summary>
            The RadioButton text hover color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RadioButtonBorderBrushKey">
            <summary>
            The RadioButton border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.RadioButtonBackgroundBrushKey">
            <summary>
            The RadioButton background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.GroupBoxTextColorKey">
            <summary>
            The group box text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.GroupBoxBorderBrushKey">
            <summary>
            The group box border brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ChartAxisBrushKey">
            <summary>
            The chart axis brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ChartBackgroundBrushKey">
            <summary>
            The chart background brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ChartTextColorKey">
            <summary>
            The chart text color key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ChartCursorLinesBrushKey">
            <summary>
            The chart cursor lines brush key
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.CommonResourceKeys.ChartAxisInterlacedBrushKey">
            <summary>
            The chart axis interlaced brush key
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.Dark">
            <summary>
            Dark UI theme
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.Dark.GetThemeDictionary">
            <summary>
            Gets the theme dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.Dark.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Themes.Dark"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.Dark.CreateColorsAndBrushes">
            <summary>
            Creates the colors and brushes.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.DataGridStyle">
            <summary>
            Default Data Grid style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridRowStyle">
            <summary>
            Creates the data grid row style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridRowControlTemplate">
            <summary>
            Creates the data grid row control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridStyle">
            <summary>
            Creates the data grid style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridControlTemplate">
            <summary>
            Creates the data grid control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridCellStyle">
            <summary>
            Creates the data grid cell style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridCellControlTemplate">
            <summary>
            Creates the data grid cell control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridCellsPresenterStyle">
            <summary>
            Creates the data grid cells presenter style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridCellsPresenterControlTemplate">
            <summary>
            Creates the data grid cells presenter control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridColumnHeaderStyle">
            <summary>
            Creates the data grid column header style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridColumnHeaderControlTemplate">
            <summary>
            Creates the data grid column header control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridColumnHeadersPresenterStyle">
            <summary>
            Creates the data grid column headers presenter style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateDataGridColumnHeadersPresenterControlTemplate">
            <summary>
            Creates the data grid column headers presenter control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateTextColumnElementStyle">
            <summary>
            Creates the text column element style.
            </summary>
            <returns></returns>        
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DataGridStyle.CreateCheckBoxColumnElementStyle">
            <summary>
            Creates the CheckBox column element style.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.DefaultTypeTemplates">
            <summary>
            Default data type templates
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.DefaultTypeTemplates.GetBasicTypeTemplates">
            <summary>
            Gets the basic type templates.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.EmptyKeysTheme">
            <summary>
            Empty Keys default theme
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.EmptyKeysTheme.GetThemeDictionary">
            <summary>
            Gets the theme dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.EmptyKeysTheme.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Themes.Dark"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.EmptyKeysTheme.CreateColorsAndBrushes">
            <summary>
            Creates the colors and brushes.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ExpanderStyle">
            <summary>
            Default Expander style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ExpanderStyle.CreateExpanderStyle">
            <summary>
            Creates the expander style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ExpanderStyle.CreateControlTemplateDown">
            <summary>
            Creates the control template for down expander direction
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ExpanderStyle.CreateControlTemplateUp">
            <summary>
            Creates the control template for up expander direction
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ExpanderStyle.CreateControlTemplateLeft">
            <summary>
            Creates the control template for left expander direction
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ExpanderStyle.CreateControlTemplateRight">
            <summary>
            Creates the control template for right expander direction
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ExpanderStyle.CreateToggleButtonStyle">
            <summary>
            Creates the toggle button style.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.GroupBoxStyle">
            <summary>
            Implements default style for Group Box
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.GroupBoxStyle.CreateGroupBoxStyle">
            <summary>
            Creates the group box style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.GroupBoxStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ImageButtonStyle">
            <summary>
            Default style and control template for Image Button control
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ImageButtonStyle.CreateImageButtonStyle">
            <summary>
            Creates the button style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ImageButtonStyle.CreateControlTemplate">
            <summary>
            Creates the default control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.Light">
            <summary>
            Light UI theme
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.Light.GetThemeDictionary">
            <summary>
            Gets the theme dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.Light.#cctor">
            <summary>
            Initializes the <see cref="T:EmptyKeys.UserInterface.Themes.Light"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.Light.CreateColorsAndBrushes">
            <summary>
            Creates the colors and brushes.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ListBoxStyle">
            <summary>
            Default List Box style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ListBoxStyle.CreateListBoxItemStyle">
            <summary>
            Creates the ListBox item style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ListBoxStyle.CreateListBoxItemControlTemplate">
            <summary>
            Creates the ListBox item control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ListBoxStyle.CreateListBoxStyle">
            <summary>
            Creates the ListBox style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ListBoxStyle.CreateListBoxControlTemplate">
            <summary>
            Creates the ListBox control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.NumericTextBoxStyle">
            <summary>
            Default Text Box style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.NumericTextBoxStyle.CreateNumericTextBoxStyle">
            <summary>
            Creates the text box style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.NumericTextBoxStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.PasswordBoxStyle">
            <summary>
            Default Text Box style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.PasswordBoxStyle.CreatePasswordBoxStyle">
            <summary>
            Creates the text box style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.PasswordBoxStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ProgressBarStyle">
            <summary>
            Default Progress Bar style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ProgressBarStyle.CreateProgressBarStyle">
            <summary>
            Creates the progress bar style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ProgressBarStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.RadioButtonStyle">
            <summary>
            Implements default style and control template for Radio Button control
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.RadioButtonStyle.CreateRadioButtonStyle">
            <summary>
            Creates the RadioButton style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.RadioButtonStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.RepeatButtonStyle">
            <summary>
            Implements repeat button style and default control template
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.RepeatButtonStyle.CreateRepeatButtonStyle">
            <summary>
            Creates the repeat button style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.RepeatButtonStyle.CreateControlTemplate">
            <summary>
            Creates the default control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.RootStyle">
            <summary>
            Default UIRoot style
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Themes.RootStyle.UIRootBackgroundName">
            <summary>
            The UI root background name
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.RootStyle.CreateRootStyle">
            <summary>
            Creates the root style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.RootStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ScrollBarStyle">
            <summary>
            Default Scroll Bar style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ScrollBarStyle.CreateScrollBarStyle">
            <summary>
            Creates the scroll bar style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ScrollBarStyle.CreateHorizontalScrollBarControlTemplate">
            <summary>
            Creates the horizontal scroll bar control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ScrollBarStyle.CreateVerticalScrollBarControlTemplate">
            <summary>
            Creates the vertical scroll bar control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ScrollBarStyle.CreateThumbControlTemplate">
            <summary>
            Creates the thumb control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ScrollViewerStyle">
            <summary>
            Default Scroll Viewer Style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ScrollViewerStyle.CreateScrollViewerStyle">
            <summary>
            Creates the scroll viewer style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ScrollViewerStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.SliderStyle">
            <summary>
            Implements default style and control templates for Slider control
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.SliderStyle.CreateSliderStyle">
            <summary>
            Creates the slider style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.SliderStyle.CreateHorizontalSlider">
            <summary>
            Creates the horizontal slider control template
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.SliderStyle.CreateVerticalSlider">
            <summary>
            Creates the vertical slider.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.TabControlStyle">
            <summary>
            Default Tab Control Style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TabControlStyle.CreateTabItemStyle">
            <summary>
            Creates the tab item style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TabControlStyle.CreateTabItemControlTemplate">
            <summary>
            Creates the tab item control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TabControlStyle.CreateTabControlStyle">
            <summary>
            Creates the tab control style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TabControlStyle.CreateTabControlTemplate">
            <summary>
            Creates the tab control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.TextBoxStyle">
            <summary>
            Default Text Box style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TextBoxStyle.CreateTextBoxStyle">
            <summary>
            Creates the text box style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TextBoxStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ToggleButtonStyle">
            <summary>
            Default Toggle Button style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ToggleButtonStyle.CreateToggleButtonStyle">
            <summary>
            Creates the toggle button style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ToggleButtonStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.ToolTipStyle">
            <summary>
            Default Tool Tip style and control template
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.ToolTipStyle.CreateToolTipStyle">
            <summary>
            Creates the tool tip style.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.TreeViewStyle">
            <summary>
            Implements default TreeView style and control template
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TreeViewStyle.CreateTreeViewItemStyle">
            <summary>
            Creates the TreeView item style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TreeViewStyle.CreateTreeViewItemControlTemplate">
            <summary>
            Creates the TreeView item control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TreeViewStyle.CreateTreeViewStyle">
            <summary>
            Creates the TreeView style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.TreeViewStyle.CreateTreeViewControlTemplate">
            <summary>
            Creates the TreeView control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.UserControlStyle">
            <summary>
            Default User Control style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.UserControlStyle.CreateUserControlStyle">
            <summary>
            Creates the user control style.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.VirtualKeyboardStyle">
            <summary>
            Implements default style for Virtual Keyboard control
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.VirtualKeyboardStyle.CreateVirtualKeyboardStyle">
            <summary>
            Creates the virtual keyboard style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.VirtualKeyboardStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Themes.WindowStyle">
            <summary>
            Default Window style
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.WindowStyle.CreateWindowStyle">
            <summary>
            Creates the window style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.WindowStyle.CreateControlTemplate">
            <summary>
            Creates the control template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.WindowStyle.CreateMessageBoxWindowStyle">
            <summary>
            Creates the message box window style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Themes.WindowStyle.CreateMessageBoxWindowControlTemplate">
            <summary>
            Creates the message box window control template.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EmptyKeys.UserInterface.Threading.Dispatcher">
            <summary>
            Implements thread dispatcher, which is responsible for thread safety
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Threading.Dispatcher.EnableExceptionOnMultithreadAccess">
            <summary>
            Enables exception if another thread access UI
            </summary>        
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.Dispatcher.GetCurrentDispatcher">
            <summary>
            Gets current dispatcher for the current thread
            </summary>
            <returns>
            New dispatcher or existing dispatcher for the thread
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.Dispatcher.AddDispatcher(EmptyKeys.UserInterface.Threading.Dispatcher)">
            <summary>
            Adds new dispatcher to the collection;
            </summary>
            <param name="dispatcher">the dispatcher to be added</param>
        </member>
        <member name="P:EmptyKeys.UserInterface.Threading.Dispatcher.Thread">
            <summary>
            Gets the thread of the dispatcher
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.Dispatcher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Threading.Dispatcher" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.Dispatcher.HasAccess">
            <summary>
            Checks if the thread and current thread is the same
            </summary>
            <returns>
            True if threads are the same
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.Dispatcher.VerifyAccess">
            <summary>
            Verifies if current thread has access to this dispatcher
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.Dispatcher.Invoke(System.Action)">
            <summary>
            Invokes action on the thread of dispatcher or adds action to queue
            </summary>
            <param name="action">the action to execute</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.Dispatcher.BeginInvoke(System.Action)">
            <summary>
            Executes the specified action asynchronously
            </summary>
            <param name="action">the operation action</param>
            <returns>
            Dispatcher operation for the specified action
            </returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.Dispatcher.ProcessQueue">
            <summary>
            Processes all operations in dispatcher action queue
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Threading.DispatcherObject">
            <summary>
            Implements thread safety for all controls.
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Threading.DispatcherObject.Dispatcher">
            <summary>
            Gets dispatcher instance.
            </summary>
            <value>
            Dispatcher instance for this dispatcher object
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.DispatcherObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Threading.DispatcherObject" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Threading.DispatcherObject.VerifyAccess">
            <summary>
            Verifies that caller's thread has access to this object.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Threading.DispatcherOperation">
            <summary>
            Implements dispatcher operation
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Threading.DispatcherOperation.IsCompleted">
            <summary>
            Checks if action was executed
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Threading.DispatcherOperation.Dispatcher">
            <summary>
            Gets the instance of dispatcher for this operation
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Trigger">
            <summary>
            Trigger implements features for changing property value based on condition
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Trigger.Property">
            <summary>
            Gets or sets the property.
            </summary>
            <value>
            The property.
            </value>
            <exception cref="T:System.InvalidOperationException">You can't change value of sealed instance.</exception>
        </member>
        <member name="P:EmptyKeys.UserInterface.Trigger.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
            <exception cref="T:System.InvalidOperationException">You can't change value of sealed instance.</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.Trigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Trigger"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Trigger.HasPropertyCondition(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Checks if this trigger has condition with specified property
            </summary>
            <param name="property">property</param>
            <returns>true if it has condition</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Trigger.IsActive(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Is this trigger active on specified element
            </summary>
            <param name="element">element</param>
            <returns>true if it's active</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Trigger.CheckState(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Checks the state of the trigger
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:EmptyKeys.UserInterface.TriggerAction">
            <summary>
            Implements base abstract class for all trigger actions
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.TriggerAction"/> class.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.TriggerBase">
            <summary>
            Implements base class for all triggers
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.TriggerBase.Setters">
            <summary>
            Gets the setters.
            </summary>
            <value>
            The setters.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.TriggerBase"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerBase.HasPropertyCondition(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Checks if this trigger has condition with specified property
            </summary>
            <param name="property">property</param>
            <returns>true if it has condition</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerBase.IsActive(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Is this trigger active on specified element
            </summary>
            <param name="element">element</param>
            <returns>true if it's active</returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerBase.CheckState(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Checks the state of the trigger
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerBase.ProcessSettersCollection(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Processes the setters collection.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerBase.RestorePropertyValues(EmptyKeys.UserInterface.UIElement)">
            <summary>
            Restores the property values.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.TriggerCondition">
            <summary>
            Implements trigger condition for multi trigger
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.TriggerCondition.Property">
            <summary>
            Gets/sets Property of the condition
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.TriggerCondition.Value">
            <summary>
            Gets/Sets Value of the condition
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerCondition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.TriggerCondition"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.TriggerCondition.#ctor(EmptyKeys.UserInterface.DependencyProperty,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.TriggerCondition"/> class.
            </summary>
            <param name="property">property</param>
            <param name="value">value</param>
        </member>
        <member name="T:EmptyKeys.UserInterface.UIElement">
            <summary>
            Base class for all UI controls. Implements layout passes and basic functionality.
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.visualOffset">
            <summary>
            The visual offset rectangle
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.unclippedDesiredSize">
            <summary>
            The unclipped desired size
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.desiredSize">
            <summary>
            The desired size
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.needsClipBounds">
            <summary>
            The needs clip bounds
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.DesiredSize">
            <summary>
            Gets the size of the desired.
            </summary>
            <value>
            The size of the desired.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.RenderSize">
            <summary>
            Gets the size of the render.
            </summary>
            <value>
            The size of the render.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.DeviceRenderSize">
            <summary>
            Gets or sets the size of the device render.
            </summary>
            <value>
            The size of the device render.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.VisualOffset">
            <summary>
            Gets or sets the visual offset.
            </summary>
            <value>
            The visual offset.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.VisualPosition">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.RenderPosition">
            <summary>
            Gets or sets the render position.
            </summary>
            <value>
            The render position.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.ActualHeight">
            <summary>
            Gets the actual height.
            </summary>
            <value>
            The actual height.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.ActualWidth">
            <summary>
            Gets the actual width.
            </summary>
            <value>
            The actual width.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsLoaded">
            <summary>
            Gets a value indicating whether this instance is loaded.
            </summary>
            <value>
              <c>true</c> if this instance is loaded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.TemplatedParent">
            <summary>
            Gets the templated parent.
            </summary>
            <value>
            The templated parent.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.NameProperty">
            <summary>
            The name property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.HorizontalAlignmentProperty">
            <summary>
            The horizontal alignment dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
            <value>
            The horizontal alignment.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.VerticalAlignmentProperty">
            <summary>
            The vertical alignment dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
            <value>
            The vertical alignment.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.VisibilityProperty">
            <summary>
            The visibility dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Visibility">
            <summary>
            Gets or sets the visibility.
            </summary>
            <value>
            The visibility.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MarginProperty">
            <summary>
            The margin dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>
            The margin.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.HeightProperty">
            <summary>
            The height dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MaxHeightProperty">
            <summary>
            The maximum height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.MaxHeight">
            <summary>
            Gets or sets the maximum height.
            </summary>
            <value>
            The maximum height.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MinHeightProperty">
            <summary>
            The minimum height property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.MinHeight">
            <summary>
            Gets or sets the minimum height.
            </summary>
            <value>
            The minimum height.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.WidthProperty">
            <summary>
            The width dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MaxWidthProperty">
            <summary>
            The maximum width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.MaxWidth">
            <summary>
            Gets or sets the maximum width.
            </summary>
            <value>
            The maximum width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MinWidthProperty">
            <summary>
            The minimum width property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.MinWidth">
            <summary>
            Gets or sets the minimum width.
            </summary>
            <value>
            The minimum width.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.TagProperty">
            <summary>
            The tag dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.IsEnabledProperty">
            <summary>
            The is enabled property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsEnabledCoerceValue">
            <summary>
            Gets a value indicating whether this instance is enabled coerce value.
            </summary>
            <value>
            <c>true</c> if this instance is enabled coerce value; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            <c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.IsMouseOverProperty">
            <summary>
            The is mouse over property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsMouseOver">
            <summary>
            Gets or sets a value indicating whether this instance is mouse over.
            </summary>
            <value>
            <c>true</c> if this instance is mouse over; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.IsMouseCapturedProperty">
            <summary>
            The is mouse captured property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsMouseCaptured">
            <summary>
            Gets a value indicating whether this instance is mouse captured.
            </summary>
            <value>
            	<c>true</c> if this instance is mouse captured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.IsTouchCapturedProperty">
            <summary>
            The is touch captured property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsTouchCaptured">
            <summary>
            Gets a value indicating whether this instance is touch captured.
            </summary>
            <value>
            <c>true</c> if this instance is touch captured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.IsKeyboardFocusedProperty">
            <summary>
            The is keyboard focused property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsKeyboardFocused">
            <summary>
            Gets a value indicating whether this instance is keyboard focused.
            </summary>
            <value>
            <c>true</c> if this instance is keyboard focused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.StyleProperty">
            <summary>
            The style property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.DataContextProperty">
            <summary>
            The data context dependency property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.DataContext">
            <summary>
            Gets or sets the data context.
            </summary>
            <value>
            The data context.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.IsFocusedProperty">
            <summary>
            The is focused property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsFocused">
            <summary>
            Gets or sets a value indicating whether this instance is focused.
            </summary>
            <value>
            <c>true</c> if this instance is focused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.FocusableProperty">
            <summary>
            The focusable property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Focusable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EmptyKeys.UserInterface.UIElement"/> is focusable.
            </summary>
            <value>
              <c>true</c> if focusable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.IsHitTestVisibleProperty">
            <summary>
            The is hit test visible property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsHitTestVisible">
            <summary>
            Gets or sets a value indicating whether this instance is hit test visible.
            </summary>
            <value>
            <c>true</c> if this instance is hit test visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.SnapsToDevicePixelsProperty">
            <summary>
            The snaps to device pixels property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.SnapsToDevicePixels">
            <summary>
            Gets or sets a value indicating whether [snaps to device pixels].
            </summary>
            <value>
            <c>true</c> if [snaps to device pixels]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.UseLayoutRoundingProperty">
            <summary>
            The use layout rounding property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.UseLayoutRounding">
            <summary>
            Gets or sets a value indicating whether [use layout rounding].
            </summary>
            <value>
              <c>true</c> if [use layout rounding]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.OpacityProperty">
            <summary>
            The opacity property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>
            The opacity.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsMeasureValid">
            <summary>
            Gets a value indicating whether [is measure valid].
            </summary>
            <value>
              <c>true</c> if [is measure valid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.IsArrangeValid">
            <summary>
            Gets a value indicating whether [is arrange valid].
            </summary>
            <value>
              <c>true</c> if [is arrange valid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Resources">
            <summary>
            Gets or sets the resources.
            </summary>
            <value>
            The resources.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.InputBindings">
            <summary>
            Gets the input bindings.
            </summary>
            <value>
            The input bindings.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.ToolTipProperty">
            <summary>
            The tool tip property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.ToolTip">
            <summary>
            Gets or sets the tool tip.
            </summary>
            <value>
            The tool tip.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Triggers">
            <summary>
            Gets the triggers - Trigger collection, only EventTriggers should be in this collection, others are ignored
            </summary>
            <value>
            The triggers.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.CursorTypeProperty">
            <summary>
            The cursor type property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.CursorType">
            <summary>
            Gets or sets the type of the cursor.
            </summary>
            <value>
            The type of the cursor.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.EffectProperty">
            <summary>
            The effect property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.Effect">
            <summary>
            Gets or sets the effect.
            </summary>
            <value>
            The effect.
            </value>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.DataContextChanged">
            <summary>
            Occurs when [data context changed].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.IsEnabledChanged">
            <summary>
            Occurs when [is enabled changed].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.IsMouseCapturedChanged">
            <summary>
            Occurs when [is mouse captured changed].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.VisibleEvent">
            <summary>
            The visible event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.Visible">
            <summary>
            Occurs when [visible].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.HiddenEvent">
            <summary>
            The hidden event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.Hidden">
            <summary>
            Occurs when [hidden].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.CollapsedEvent">
            <summary>
            The collapsed event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.Collapsed">
            <summary>
            Occurs when [collapsed].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.LoadedEvent">
            <summary>
            The loaded event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.Loaded">
            <summary>
            Occurs when [loaded].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.UnloadedEvent">
            <summary>
            The unloaded event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.Unloaded">
            <summary>
            Occurs when [unloaded].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MouseDownEvent">
            <summary>
            The mouse down event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.MouseDown">
            <summary>
            Occurs when [mouse down].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewMouseDownEvent">
            <summary>
            The preview mouse down event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewMouseDown">
            <summary>
            Occurs when [preview mouse down].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MouseUpEvent">
            <summary>
            The mouse up event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.MouseUp">
            <summary>
            Occurs when [mouse up].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewMouseUpEvent">
            <summary>
            The preview mouse up event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewMouseUp">
            <summary>
            Occurs when [preview mouse up].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewMouseWheelEvent">
            <summary>
            The preview mouse wheel event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewMouseWheel">
            <summary>
            Occurs when [preview mouse wheel].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MouseWheelEvent">
            <summary>
            The mouse wheel event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.MouseWheel">
            <summary>
            Occurs when [mouse wheel].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MouseMoveEvent">
            <summary>
            The mouse move event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.MouseMove">
            <summary>
            Occurs when [mouse move].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewMouseMoveEvent">
            <summary>
            The preview mouse move event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewMouseMove">
            <summary>
            Occurs when [preview mouse move].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MouseEnterEvent">
            <summary>
            The mouse enter event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.MouseEnter">
            <summary>
            Occurs when [mouse enter].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.MouseLeaveEvent">
            <summary>
            The mouse leave event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.MouseLeave">
            <summary>
            Occurs when [mouse leave].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewKeyDownEvent">
            <summary>
            The preview key down event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewKeyDown">
            <summary>
            Occurs when [preview key down].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.KeyDownEvent">
            <summary>
            The key down event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.KeyDown">
            <summary>
            Occurs when [key down].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewKeyUpEvent">
            <summary>
            The preview key up event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewKeyUp">
            <summary>
            Occurs when [preview key up].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.KeyUpEvent">
            <summary>
            The key up event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.KeyUp">
            <summary>
            Occurs when [key up].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.GamepadDownEvent">
            <summary>
            The game pad down event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.GamepadDown">
            <summary>
            Occurs when [game pad down].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewGamepadDownEvent">
            <summary>
            The preview game pad down event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewGamepadDown">
            <summary>
            Occurs when [preview game pad down].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.GamepadUpEvent">
            <summary>
            The game pad up event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.GamepadUp">
            <summary>
            Occurs when [game pad up].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewGamepadUpEvent">
            <summary>
            The preview game pad up event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewGamepadUp">
            <summary>
            Occurs when [preview game pad up].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewGamepadMoveEvent">
            <summary>
            The preview game pad move event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewGamepadMove">
            <summary>
            Occurs when [preview game pad move].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.GamepadMoveEvent">
            <summary>
            The game pad move event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.GamepadMove">
            <summary>
            Occurs when [game pad move].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewGamepadTriggerEvent">
            <summary>
            The preview game pad trigger event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewGamepadTrigger">
            <summary>
            Occurs when [preview game pad trigger].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.GamepadTriggerEvent">
            <summary>
            The game pad trigger event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.GamepadTrigger">
            <summary>
            Occurs when [game pad trigger].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewTouchDownEvent">
            <summary>
            The preview touch down event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewTouchDown">
            <summary>
            Occurs when [preview touch down].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.TouchDownEvent">
            <summary>
            The touch down event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.TouchDown">
            <summary>
            Occurs when [touch down].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewTouchUpEvent">
            <summary>
            The preview touch up event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewTouchUp">
            <summary>
            Occurs when [preview touch up].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.TouchUpEvent">
            <summary>
            The touch up event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.TouchUp">
            <summary>
            Occurs when [touch up].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewTouchMoveEvent">
            <summary>
            The preview touch move event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewTouchMove">
            <summary>
            Occurs when [preview touch move].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.TouchMoveEvent">
            <summary>
            The touch move event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.TouchMove">
            <summary>
            Occurs when [touch move].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.PreviewTouchGestureEvent">
            <summary>
            The preview touch gesture event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.PreviewTouchGesture">
            <summary>
            Occurs when [preview touch gesture].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.TouchGestureEvent">
            <summary>
            The touch gesture event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.TouchGesture">
            <summary>
            Occurs when [touch gesture].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.GotFocusEvent">
            <summary>
            The got focus event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.GotFocus">
            <summary>
            Occurs when [got focus].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.LostFocusEvent">
            <summary>
            The lost focus event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.LostFocus">
            <summary>
            Occurs when [lost focus].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.SizeChangedEvent">
            <summary>
            The size changed event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.SizeChanged">
            <summary>
            Occurs when [size changed].
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.LayoutUpdated">
            <summary>
            Occurs when [layout updated].
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.UIElement.RequestBringIntoViewEvent">
            <summary>
            The request bring into view event
            </summary>
        </member>
        <member name="E:EmptyKeys.UserInterface.UIElement.RequestBringIntoView">
            <summary>
            Occurs when [request bring into view].
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.ToolTipInternal">
            <summary>
            Gets or sets the tool tip internal. It's used when Tool Tip is not ToolTip type, but some primitive type like string
            </summary>
            <value>
            The tool tip internal.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.NeverMeasured">
            <summary>
            Gets or sets a value indicating whether [never measured].
            </summary>
            <value>
              <c>true</c> if [never measured]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.NeverArranged">
            <summary>
            Gets or sets a value indicating whether [never arranged].
            </summary>
            <value>
              <c>true</c> if [never arranged]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.MeasureDirty">
            <summary>
            Gets or sets a value indicating whether [measure dirty].
            </summary>
            <value>
              <c>true</c> if [measure dirty]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.ArrangeDirty">
            <summary>
            Gets or sets a value indicating whether [arrange dirty].
            </summary>
            <value>
              <c>true</c> if [arrange dirty]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.MeasureInProgress">
            <summary>
            Gets or sets a value indicating whether [measure in progress].
            </summary>
            <value>
              <c>true</c> if [measure in progress]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.ArrangeInProgress">
            <summary>
            Gets or sets a value indicating whether [arrange in progress].
            </summary>
            <value>
              <c>true</c> if [arrange in progress]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.RenderDirty">
            <summary>
            Gets or sets a value indicating whether [render dirty].
            </summary>
            <value>
              <c>true</c> if [render dirty]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.ActiveTriggers">
            <summary>
            Gets or sets the active triggers.
            </summary>
            <value>
            The active triggers.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.DpiScaleX">
            <summary>
            Gets the dpi scale x.
            </summary>
            <value>
            The dpi scale x.
            </value>
        </member>
        <member name="P:EmptyKeys.UserInterface.UIElement.DpiScaleY">
            <summary>
            Gets the dpi scale y.
            </summary>
            <value>
            The dpi scale y.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.UIElement" /> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnCanExecuteThunk(System.Object,EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Called when [can execute].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewCanExecuteThunk(System.Object,EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Called when [preview can execute].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnExecutedThunk(System.Object,EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called when [executed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewExecutedThunk(System.Object,EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called when [preview executed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnLostFocusThunk(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [lost focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnLostFocus(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [lost focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGotFocusThunk(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [got focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGotFocus(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [got focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewMouseUpThunk(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [preview mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewMouseUp(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [preview mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewMouseDownThunk(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [preview mouse down thunk].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewMouseDown(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [preview mouse down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGamepadTriggerThunk(System.Object,EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs)">
            <summary>
            Called when [game pad trigger].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGamepadTrigger(System.Object,EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs)">
            <summary>
            Called when [game pad trigger].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewGamepadTriggerThunk(System.Object,EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs)">
            <summary>
            Called when [preview game pad trigger].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewGamepadTrigger(System.Object,EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs)">
            <summary>
            Called when [preview game pad trigger].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadTriggerEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGamepadMoveThunk(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <summary>
            Called when [game pad move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <summary>
            Called when [game pad move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewGamepadMoveThunk(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <summary>
            Called when [preview game pad move ].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewGamepadMove(System.Object,EmptyKeys.UserInterface.Input.GamepadMoveEventArgs)">
            <summary>
            Called when [preview game pad move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadMoveEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGamepadUpThunk(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Called when [game pad up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGamepadUp(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Called when [game pad up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewGamepadUpThunk(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Called when [preview game pad up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewGamepadUp(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Called when [preview game pad up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGamepadDownThunk(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Called when [game pad down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnGamepadDown(EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Raises the <see cref="E:GamepadDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewGamepadDownThunk(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Called when [preview game pad down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewGamepadDown(System.Object,EmptyKeys.UserInterface.Input.GamepadButtonEventArgs)">
            <summary>
            Called when [preview game pad down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.GamepadButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnKeyUpThunk(System.Object,EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Called when [key up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnKeyUp(System.Object,EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Called when [key up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewKeyUpThunk(System.Object,EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Called when [preview key up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewKeyUp(System.Object,EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Called when [preview key up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnKeyDownThunk(System.Object,EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Called when [key down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnKeyDown(EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewKeyDownThunk(System.Object,EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Called when [preview key down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewKeyDown(System.Object,EmptyKeys.UserInterface.Input.KeyEventArgs)">
            <summary>
            Called when [preview key down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewMouseMoveThunk(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [preview mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewMouseMove(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [preview mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseMoveThunk(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseMove(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseWheelThunk(System.Object,EmptyKeys.UserInterface.Input.MouseWheelEventArgs)">
            <summary>
            Called when [mouse wheel].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseWheel(EmptyKeys.UserInterface.Input.MouseWheelEventArgs)">
            <summary>
            Called when [mouse wheel].
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMousePreviewWheelThunk(System.Object,EmptyKeys.UserInterface.Input.MouseWheelEventArgs)">
            <summary>
            Called when [mouse preview wheel].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewMouseWheel(System.Object,EmptyKeys.UserInterface.Input.MouseWheelEventArgs)">
            <summary>
            Called when [preview mouse wheel].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseUpThunk(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseUp(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseDownThunk(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [mouse down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseDown(EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseLeaveThunk(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseLeave(EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseLeave" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseEnterThunk(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [mouse enter thunk].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnMouseEnter(EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseEnter" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnTouchUpThunk(System.Object,EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Called when [touch up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnTouchUp(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchUp" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewTouchUpThunk(System.Object,EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Called when [preview touch up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewTouchUp(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTouchUp" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnTouchDownThunk(System.Object,EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Called when [touch down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewTouchDownThunk(System.Object,EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Called when [preview touch down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnTouchMoveThunk(System.Object,EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Called when [touch move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnTouchMove(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:TouchMove" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewTouchMoveThunk(System.Object,EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Called when [preview touch move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewTouchMove(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTouchMove" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnTouchGesture(EmptyKeys.UserInterface.Input.TouchGestureEventArgs)">
            <summary>
            Raises the <see cref="E:TouchGesture" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreviewTouchGesture(EmptyKeys.UserInterface.Input.TouchGestureEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTouchGesture" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchGestureEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.ApplyTemplate">
            <summary>
            Applies the template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPreApplyTemplate">
            <summary>
            Called when [pre-apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnApplyTemplate">
            <summary>
            Called when [apply template].
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnIsEnabledChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:IsEnabledChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnOpacityChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:OpacityChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.Contains(EmptyKeys.UserInterface.PointF,EmptyKeys.UserInterface.Size)">
            <summary>
            Determines whether [this element] contains [the specified point].
            </summary>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.RoundLayoutRect(EmptyKeys.UserInterface.Rect,System.Single,System.Single)">
            <summary>
            Rounds the layout rect.
            </summary>
            <param name="rect">The rect.</param>
            <param name="dpiScaleX">The dpi scale x.</param>
            <param name="dpiScaleY">The dpi scale y.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.RoundLayoutSize(EmptyKeys.UserInterface.Size,System.Single,System.Single)">
            <summary>
            Rounds the size of the layout.
            </summary>
            <param name="size">The size.</param>
            <param name="dpiScaleX">The dpi scale x.</param>
            <param name="dpiScaleY">The dpi scale y.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.RoundLayoutThickness(EmptyKeys.UserInterface.Thickness,System.Single,System.Single)">
            <summary>
            Rounds the layout thickness.
            </summary>
            <param name="thickness">The thickness.</param>
            <param name="dpiScaleX">The dpi scale x.</param>
            <param name="dpiScaleY">The dpi scale y.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.RoundLayoutValue(System.Single,System.Single)">
            <summary>
            Rounds the layout value.
            </summary>
            <param name="value">The value.</param>
            <param name="dpiScale">The dpi scale.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.RoundToDevicePixels(System.Single)">
            <summary>
            Rounds to device pixels.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.Draw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Draws UI Element.
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnDraw(EmptyKeys.UserInterface.Renderers.Renderer,System.Double,System.Single)">
            <summary>
            Called when [draw].
            </summary>
            <param name="spriterenderer">The sprite renderer.</param>
            <param name="elapsedGameTime">The elapsed game time.</param>
            <param name="opacity">The opacity.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.Measure(EmptyKeys.UserInterface.Size)">
            <summary>
            Measures UI control
            </summary>
            <param name="availableSize">Size of the available.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.MeasureOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Measure layout pass
            </summary>
            <param name="availableSize">available size for element</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.InvalidateMeasure">
            <summary>
            Invalidates the measure pass
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.Arrange(EmptyKeys.UserInterface.Rect)">
            <summary>
            Arrange layout pass
            </summary>
            <param name="finalRect">The final rectangle for element layout</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.InvalidateArrange">
            <summary>
            Invalidates the arrange pass
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnPropertyChanged(EmptyKeys.UserInterface.DependencyProperty)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.FindResource(System.Object)">
            <summary>
            Finds the resource.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.AddHandler(EmptyKeys.UserInterface.RoutedEvent,System.Delegate)">
            <summary>
            Adds the handler.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="handler">The handler.</param>
            <exception cref="T:System.ArgumentNullException">
            routedEvent
            or
            handler
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.RemoveHandler(EmptyKeys.UserInterface.RoutedEvent,System.Delegate)">
            <summary>
            Removes the handler.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="handler">The handler.</param>
            <exception cref="T:System.ArgumentNullException">
            routedEvent
            or
            handler
            </exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.RaiseEvent(EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Raises the event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.ArgumentNullException">e</exception>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.AddToEventRoute(EmptyKeys.UserInterface.EventRoute,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Adds to event route.
            </summary>
            <param name="route">The route.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.CaptureMouse">
            <summary>
            Captures the mouse.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.ReleaseMouseCapture">
            <summary>
            Releases the mouse capture.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.RaiseIsMouseCapturedChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the is mouse captured changed event
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.OnIsMouseCapturedChanged(EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:IsMouseCapturedChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.CaptureTouch">
            <summary>
            Captures the touch.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.ReleaseTouchCapture">
            <summary>
            Releases the touch capture.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.Focus">
            <summary>
            Focuses this instance.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.InvalidateIsEnabledOnChildren">
            <summary>
            Invalidates the IsEnabled property value on children.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.UIElement.BringIntoView">
            <summary>
            Brings element into view.
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.VerticalAlignment">
            <summary>
            Vertical Alignment of content or control inside parent control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.VerticalAlignment.Bottom">
            <summary>
            Bottom of the area
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.VerticalAlignment.Center">
            <summary>
            Center of the area
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.VerticalAlignment.Stretch">
            <summary>
            Stretches across the area
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.VerticalAlignment.Top">
            <summary>
            Top of the area
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Visibility">
            <summary>
            Visibility enumeration
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Visibility.Visible">
            <summary>
            Control is visible
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Visibility.Hidden">
            <summary>
            Control is hidden, but layout pass is working as normal
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Visibility.Collapsed">
            <summary>
            Control is collapsed, so it's not visible and ignored by layout pass
            </summary>
        </member>
        <member name="T:EmptyKeys.UserInterface.Window">
            <summary>
            Implements features of Window UI control
            </summary>
        </member>
        <member name="F:EmptyKeys.UserInterface.Window.TitleProperty">
            <summary>
            The title property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Window.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Window.IsActiveProperty">
            <summary>
            The is active property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Window.IsActive">
            <summary>
            Gets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>true</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Window.TopProperty">
            <summary>
            The top property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Window.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Window.LeftProperty">
            <summary>
            The left property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Window.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Window.IsOnTopProperty">
            <summary>
            The is on top property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Window.IsOnTop">
            <summary>
            Gets or sets a value indicating whether this instance is on top.
            </summary>
            <value>
              <c>true</c> if this instance is on top; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:EmptyKeys.UserInterface.Window.CanResizeProperty">
            <summary>
            The can resize property
            </summary>
        </member>
        <member name="P:EmptyKeys.UserInterface.Window.CanResize">
            <summary>
            Gets or sets a value indicating whether this instance can resize.
            </summary>
            <value>
            <c>true</c> if this instance can resize; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EmptyKeys.UserInterface.Window"/> class.
            </summary>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.OnGotFocus(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [got focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.OnLostFocus(System.Object,EmptyKeys.UserInterface.RoutedEventArgs)">
            <summary>
            Called when [lost focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.RoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.OnPreviewMouseDown(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [preview mouse down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.OnPreviewTouchDown(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTouchDown" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.OnPreviewMouseUp(System.Object,EmptyKeys.UserInterface.Input.MouseButtonEventArgs)">
            <summary>
            Called when [preview mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseButtonEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.OnPreviewTouchUp(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTouchUp" /> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.OnPreviewMouseMove(System.Object,EmptyKeys.UserInterface.Input.MouseEventArgs)">
            <summary>
            Called when [preview mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.ArrangeOverride(EmptyKeys.UserInterface.Size)">
            <summary>
            Arrange layout pass - overrider method for children
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="M:EmptyKeys.UserInterface.Window.OnPreviewTouchMove(EmptyKeys.UserInterface.Input.TouchEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTouchMove"/> event.
            </summary>
            <param name="e">The <see cref="T:EmptyKeys.UserInterface.Input.TouchEventArgs"/> instance containing the event data.</param>
        </member>
    </members>
</doc>
